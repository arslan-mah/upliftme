import "./chunk-EWTE5DHJ.js";

// node_modules/@daily-co/daily-js/dist/daily-esm.js
function e(e4, t2) {
  if (null == e4) return {};
  var n2, r2, i2 = function(e5, t3) {
    if (null == e5) return {};
    var n3, r3, i3 = {}, o3 = Object.keys(e5);
    for (r3 = 0; r3 < o3.length; r3++) n3 = o3[r3], t3.indexOf(n3) >= 0 || (i3[n3] = e5[n3]);
    return i3;
  }(e4, t2);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e4);
    for (r2 = 0; r2 < o2.length; r2++) n2 = o2[r2], t2.indexOf(n2) >= 0 || Object.prototype.propertyIsEnumerable.call(e4, n2) && (i2[n2] = e4[n2]);
  }
  return i2;
}
function t(e4, t2, n2, r2, i2, o2, a2) {
  try {
    var s2 = e4[o2](a2), c2 = s2.value;
  } catch (e5) {
    return void n2(e5);
  }
  s2.done ? t2(c2) : Promise.resolve(c2).then(r2, i2);
}
function n(e4) {
  return function() {
    var n2 = this, r2 = arguments;
    return new Promise(function(i2, o2) {
      var a2 = e4.apply(n2, r2);
      function s2(e5) {
        t(a2, i2, o2, s2, c2, "next", e5);
      }
      function c2(e5) {
        t(a2, i2, o2, s2, c2, "throw", e5);
      }
      s2(void 0);
    });
  };
}
function r(e4, t2) {
  if (!(e4 instanceof t2)) throw new TypeError("Cannot call a class as a function");
}
function i(e4) {
  return i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
    return typeof e5;
  } : function(e5) {
    return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
  }, i(e4);
}
function o(e4) {
  var t2 = function(e5, t3) {
    if ("object" !== i(e5) || null === e5) return e5;
    var n2 = e5[Symbol.toPrimitive];
    if (void 0 !== n2) {
      var r2 = n2.call(e5, t3 || "default");
      if ("object" !== i(r2)) return r2;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === t3 ? String : Number)(e5);
  }(e4, "string");
  return "symbol" === i(t2) ? t2 : String(t2);
}
function a(e4, t2) {
  for (var n2 = 0; n2 < t2.length; n2++) {
    var r2 = t2[n2];
    r2.enumerable = r2.enumerable || false, r2.configurable = true, "value" in r2 && (r2.writable = true), Object.defineProperty(e4, o(r2.key), r2);
  }
}
function s(e4, t2, n2) {
  return t2 && a(e4.prototype, t2), n2 && a(e4, n2), Object.defineProperty(e4, "prototype", { writable: false }), e4;
}
function c(e4) {
  if (void 0 === e4) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e4;
}
function u(e4, t2) {
  return u = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e5, t3) {
    return e5.__proto__ = t3, e5;
  }, u(e4, t2);
}
function l(e4, t2) {
  if ("function" != typeof t2 && null !== t2) throw new TypeError("Super expression must either be null or a function");
  e4.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e4, writable: true, configurable: true } }), Object.defineProperty(e4, "prototype", { writable: false }), t2 && u(e4, t2);
}
function d(e4, t2) {
  if (t2 && ("object" === i(t2) || "function" == typeof t2)) return t2;
  if (void 0 !== t2) throw new TypeError("Derived constructors may only return object or undefined");
  return c(e4);
}
function h(e4) {
  return h = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e5) {
    return e5.__proto__ || Object.getPrototypeOf(e5);
  }, h(e4);
}
function p(e4, t2, n2) {
  return (t2 = o(t2)) in e4 ? Object.defineProperty(e4, t2, { value: n2, enumerable: true, configurable: true, writable: true }) : e4[t2] = n2, e4;
}
function f(e4, t2) {
  (null == t2 || t2 > e4.length) && (t2 = e4.length);
  for (var n2 = 0, r2 = new Array(t2); n2 < t2; n2++) r2[n2] = e4[n2];
  return r2;
}
function v(e4, t2) {
  return function(e5) {
    if (Array.isArray(e5)) return e5;
  }(e4) || function(e5, t3) {
    var n2 = null == e5 ? null : "undefined" != typeof Symbol && e5[Symbol.iterator] || e5["@@iterator"];
    if (null != n2) {
      var r2, i2, o2, a2, s2 = [], c2 = true, u2 = false;
      try {
        if (o2 = (n2 = n2.call(e5)).next, 0 === t3) {
          if (Object(n2) !== n2) return;
          c2 = false;
        } else for (; !(c2 = (r2 = o2.call(n2)).done) && (s2.push(r2.value), s2.length !== t3); c2 = true) ;
      } catch (e6) {
        u2 = true, i2 = e6;
      } finally {
        try {
          if (!c2 && null != n2.return && (a2 = n2.return(), Object(a2) !== a2)) return;
        } finally {
          if (u2) throw i2;
        }
      }
      return s2;
    }
  }(e4, t2) || function(e5, t3) {
    if (e5) {
      if ("string" == typeof e5) return f(e5, t3);
      var n2 = Object.prototype.toString.call(e5).slice(8, -1);
      return "Object" === n2 && e5.constructor && (n2 = e5.constructor.name), "Map" === n2 || "Set" === n2 ? Array.from(e5) : "Arguments" === n2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2) ? f(e5, t3) : void 0;
    }
  }(e4, t2) || function() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }();
}
var g;
var m = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {};
var y = {};
var _ = { get exports() {
  return y;
}, set exports(e4) {
  y = e4;
} };
var b = "object" == typeof Reflect ? Reflect : null;
var w = b && "function" == typeof b.apply ? b.apply : function(e4, t2, n2) {
  return Function.prototype.apply.call(e4, t2, n2);
};
g = b && "function" == typeof b.ownKeys ? b.ownKeys : Object.getOwnPropertySymbols ? function(e4) {
  return Object.getOwnPropertyNames(e4).concat(Object.getOwnPropertySymbols(e4));
} : function(e4) {
  return Object.getOwnPropertyNames(e4);
};
var S = Number.isNaN || function(e4) {
  return e4 != e4;
};
function k() {
  k.init.call(this);
}
_.exports = k, y.once = function(e4, t2) {
  return new Promise(function(n2, r2) {
    function i2(n3) {
      e4.removeListener(t2, o2), r2(n3);
    }
    function o2() {
      "function" == typeof e4.removeListener && e4.removeListener("error", i2), n2([].slice.call(arguments));
    }
    D(e4, t2, o2, { once: true }), "error" !== t2 && function(e5, t3, n3) {
      "function" == typeof e5.on && D(e5, "error", t3, n3);
    }(e4, i2, { once: true });
  });
}, k.EventEmitter = k, k.prototype._events = void 0, k.prototype._eventsCount = 0, k.prototype._maxListeners = void 0;
var E = 10;
function M(e4) {
  if ("function" != typeof e4) throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof e4);
}
function C(e4) {
  return void 0 === e4._maxListeners ? k.defaultMaxListeners : e4._maxListeners;
}
function T(e4, t2, n2, r2) {
  var i2, o2, a2, s2;
  if (M(n2), void 0 === (o2 = e4._events) ? (o2 = e4._events = /* @__PURE__ */ Object.create(null), e4._eventsCount = 0) : (void 0 !== o2.newListener && (e4.emit("newListener", t2, n2.listener ? n2.listener : n2), o2 = e4._events), a2 = o2[t2]), void 0 === a2) a2 = o2[t2] = n2, ++e4._eventsCount;
  else if ("function" == typeof a2 ? a2 = o2[t2] = r2 ? [n2, a2] : [a2, n2] : r2 ? a2.unshift(n2) : a2.push(n2), (i2 = C(e4)) > 0 && a2.length > i2 && !a2.warned) {
    a2.warned = true;
    var c2 = new Error("Possible EventEmitter memory leak detected. " + a2.length + " " + String(t2) + " listeners added. Use emitter.setMaxListeners() to increase limit");
    c2.name = "MaxListenersExceededWarning", c2.emitter = e4, c2.type = t2, c2.count = a2.length, s2 = c2, console && console.warn && console.warn(s2);
  }
  return e4;
}
function O() {
  if (!this.fired) return this.target.removeListener(this.type, this.wrapFn), this.fired = true, 0 === arguments.length ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
}
function j(e4, t2, n2) {
  var r2 = { fired: false, wrapFn: void 0, target: e4, type: t2, listener: n2 }, i2 = O.bind(r2);
  return i2.listener = n2, r2.wrapFn = i2, i2;
}
function P(e4, t2, n2) {
  var r2 = e4._events;
  if (void 0 === r2) return [];
  var i2 = r2[t2];
  return void 0 === i2 ? [] : "function" == typeof i2 ? n2 ? [i2.listener || i2] : [i2] : n2 ? function(e5) {
    for (var t3 = new Array(e5.length), n3 = 0; n3 < t3.length; ++n3) t3[n3] = e5[n3].listener || e5[n3];
    return t3;
  }(i2) : A(i2, i2.length);
}
function x(e4) {
  var t2 = this._events;
  if (void 0 !== t2) {
    var n2 = t2[e4];
    if ("function" == typeof n2) return 1;
    if (void 0 !== n2) return n2.length;
  }
  return 0;
}
function A(e4, t2) {
  for (var n2 = new Array(t2), r2 = 0; r2 < t2; ++r2) n2[r2] = e4[r2];
  return n2;
}
function D(e4, t2, n2, r2) {
  if ("function" == typeof e4.on) r2.once ? e4.once(t2, n2) : e4.on(t2, n2);
  else {
    if ("function" != typeof e4.addEventListener) throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof e4);
    e4.addEventListener(t2, function i2(o2) {
      r2.once && e4.removeEventListener(t2, i2), n2(o2);
    });
  }
}
Object.defineProperty(k, "defaultMaxListeners", { enumerable: true, get: function() {
  return E;
}, set: function(e4) {
  if ("number" != typeof e4 || e4 < 0 || S(e4)) throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + e4 + ".");
  E = e4;
} }), k.init = function() {
  void 0 !== this._events && this._events !== Object.getPrototypeOf(this)._events || (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
}, k.prototype.setMaxListeners = function(e4) {
  if ("number" != typeof e4 || e4 < 0 || S(e4)) throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + e4 + ".");
  return this._maxListeners = e4, this;
}, k.prototype.getMaxListeners = function() {
  return C(this);
}, k.prototype.emit = function(e4) {
  for (var t2 = [], n2 = 1; n2 < arguments.length; n2++) t2.push(arguments[n2]);
  var r2 = "error" === e4, i2 = this._events;
  if (void 0 !== i2) r2 = r2 && void 0 === i2.error;
  else if (!r2) return false;
  if (r2) {
    var o2;
    if (t2.length > 0 && (o2 = t2[0]), o2 instanceof Error) throw o2;
    var a2 = new Error("Unhandled error." + (o2 ? " (" + o2.message + ")" : ""));
    throw a2.context = o2, a2;
  }
  var s2 = i2[e4];
  if (void 0 === s2) return false;
  if ("function" == typeof s2) w(s2, this, t2);
  else {
    var c2 = s2.length, u2 = A(s2, c2);
    for (n2 = 0; n2 < c2; ++n2) w(u2[n2], this, t2);
  }
  return true;
}, k.prototype.addListener = function(e4, t2) {
  return T(this, e4, t2, false);
}, k.prototype.on = k.prototype.addListener, k.prototype.prependListener = function(e4, t2) {
  return T(this, e4, t2, true);
}, k.prototype.once = function(e4, t2) {
  return M(t2), this.on(e4, j(this, e4, t2)), this;
}, k.prototype.prependOnceListener = function(e4, t2) {
  return M(t2), this.prependListener(e4, j(this, e4, t2)), this;
}, k.prototype.removeListener = function(e4, t2) {
  var n2, r2, i2, o2, a2;
  if (M(t2), void 0 === (r2 = this._events)) return this;
  if (void 0 === (n2 = r2[e4])) return this;
  if (n2 === t2 || n2.listener === t2) 0 == --this._eventsCount ? this._events = /* @__PURE__ */ Object.create(null) : (delete r2[e4], r2.removeListener && this.emit("removeListener", e4, n2.listener || t2));
  else if ("function" != typeof n2) {
    for (i2 = -1, o2 = n2.length - 1; o2 >= 0; o2--) if (n2[o2] === t2 || n2[o2].listener === t2) {
      a2 = n2[o2].listener, i2 = o2;
      break;
    }
    if (i2 < 0) return this;
    0 === i2 ? n2.shift() : function(e5, t3) {
      for (; t3 + 1 < e5.length; t3++) e5[t3] = e5[t3 + 1];
      e5.pop();
    }(n2, i2), 1 === n2.length && (r2[e4] = n2[0]), void 0 !== r2.removeListener && this.emit("removeListener", e4, a2 || t2);
  }
  return this;
}, k.prototype.off = k.prototype.removeListener, k.prototype.removeAllListeners = function(e4) {
  var t2, n2, r2;
  if (void 0 === (n2 = this._events)) return this;
  if (void 0 === n2.removeListener) return 0 === arguments.length ? (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0) : void 0 !== n2[e4] && (0 == --this._eventsCount ? this._events = /* @__PURE__ */ Object.create(null) : delete n2[e4]), this;
  if (0 === arguments.length) {
    var i2, o2 = Object.keys(n2);
    for (r2 = 0; r2 < o2.length; ++r2) "removeListener" !== (i2 = o2[r2]) && this.removeAllListeners(i2);
    return this.removeAllListeners("removeListener"), this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0, this;
  }
  if ("function" == typeof (t2 = n2[e4])) this.removeListener(e4, t2);
  else if (void 0 !== t2) for (r2 = t2.length - 1; r2 >= 0; r2--) this.removeListener(e4, t2[r2]);
  return this;
}, k.prototype.listeners = function(e4) {
  return P(this, e4, true);
}, k.prototype.rawListeners = function(e4) {
  return P(this, e4, false);
}, k.listenerCount = function(e4, t2) {
  return "function" == typeof e4.listenerCount ? e4.listenerCount(t2) : x.call(e4, t2);
}, k.prototype.listenerCount = x, k.prototype.eventNames = function() {
  return this._eventsCount > 0 ? g(this._events) : [];
};
var L = "function" == typeof Map;
var N = "function" == typeof Set;
var I = "function" == typeof WeakSet;
var R = Object.keys;
var B = function(e4, t2) {
  return e4 && "object" == typeof e4 && t2.add(e4);
};
var F = function(e4, t2, n2, r2) {
  for (var i2, o2 = 0; o2 < e4.length; o2++) if (n2((i2 = e4[o2])[0], t2[0], r2) && n2(i2[1], t2[1], r2)) return true;
  return false;
};
var U = function(e4, t2, n2, r2) {
  for (var i2 = 0; i2 < e4.length; i2++) if (n2(e4[i2], t2, r2)) return true;
  return false;
};
var V = function(e4, t2) {
  return e4 === t2 || e4 != e4 && t2 != t2;
};
var $ = function(e4) {
  return e4.constructor === Object;
};
var G = function(e4) {
  return "function" == typeof e4.then;
};
var q = function(e4) {
  return !(!e4.$$typeof || !e4._store);
};
var Y = function(e4) {
  return function(t2) {
    var n2 = e4 || t2;
    return function(e5, t3, r2) {
      void 0 === r2 && (r2 = I ? /* @__PURE__ */ new WeakSet() : /* @__PURE__ */ Object.create({ _values: [], add: function(e6) {
        this._values.push(e6);
      }, has: function(e6) {
        return !!~this._values.indexOf(e6);
      } }));
      var i2 = r2.has(e5), o2 = r2.has(t3);
      return i2 || o2 ? i2 && o2 : (B(e5, r2), B(t3, r2), n2(e5, t3, r2));
    };
  };
};
var z = function(e4) {
  var t2 = [];
  return e4.forEach(function(e5, n2) {
    return t2.push([n2, e5]);
  }), t2;
};
var J = function(e4) {
  var t2 = [];
  return e4.forEach(function(e5) {
    return t2.push(e5);
  }), t2;
};
var W = function(e4, t2, n2, r2) {
  var i2, o2 = R(e4), a2 = R(t2);
  if (o2.length !== a2.length) return false;
  for (var s2 = 0; s2 < o2.length; s2++) {
    if (i2 = o2[s2], !U(a2, i2, V)) return false;
    if (("_owner" !== i2 || !q(e4) || !q(t2)) && !n2(e4[i2], t2[i2], r2)) return false;
  }
  return true;
};
var H = Array.isArray;
var K = function(e4) {
  var t2 = "function" == typeof e4 ? e4(n2) : n2;
  function n2(e5, n3, r2) {
    if (V(e5, n3)) return true;
    var i2 = typeof e5;
    if (i2 !== typeof n3 || "object" !== i2 || !e5 || !n3) return false;
    if ($(e5) && $(n3)) return W(e5, n3, t2, r2);
    var o2 = H(e5), a2 = H(n3);
    if (o2 || a2) return o2 === a2 && function(e6, t3, n4, r3) {
      if (e6.length !== t3.length) return false;
      for (var i3 = 0; i3 < e6.length; i3++) if (!n4(e6[i3], t3[i3], r3)) return false;
      return true;
    }(e5, n3, t2, r2);
    var s2 = e5 instanceof Date, c2 = n3 instanceof Date;
    if (s2 || c2) return s2 === c2 && V(e5.getTime(), n3.getTime());
    var u2, l2, d2 = e5 instanceof RegExp, h2 = n3 instanceof RegExp;
    if (d2 || h2) return d2 === h2 && (l2 = n3, (u2 = e5).source === l2.source && u2.global === l2.global && u2.ignoreCase === l2.ignoreCase && u2.multiline === l2.multiline && u2.unicode === l2.unicode && u2.sticky === l2.sticky && u2.lastIndex === l2.lastIndex);
    if (G(e5) || G(n3)) return e5 === n3;
    if (L) {
      var p2 = e5 instanceof Map, f2 = n3 instanceof Map;
      if (p2 || f2) return p2 === f2 && function(e6, t3, n4, r3) {
        if (e6.size !== t3.size) return false;
        for (var i3 = z(e6), o3 = z(t3), a3 = 0; a3 < i3.length; a3++) if (!F(o3, i3[a3], n4, r3) || !F(i3, o3[a3], n4, r3)) return false;
        return true;
      }(e5, n3, t2, r2);
    }
    if (N) {
      var v2 = e5 instanceof Set, g2 = n3 instanceof Set;
      if (v2 || g2) return v2 === g2 && function(e6, t3, n4, r3) {
        if (e6.size !== t3.size) return false;
        for (var i3 = J(e6), o3 = J(t3), a3 = 0; a3 < i3.length; a3++) if (!U(o3, i3[a3], n4, r3) || !U(i3, o3[a3], n4, r3)) return false;
        return true;
      }(e5, n3, t2, r2);
    }
    return W(e5, n3, t2, r2);
  }
  return n2;
};
K(Y()), K(Y(V));
var Q = K();
K(function() {
  return V;
});
var X = { "Amazon Silk": "amazon_silk", "Android Browser": "android", Bada: "bada", BlackBerry: "blackberry", Chrome: "chrome", Chromium: "chromium", Electron: "electron", Epiphany: "epiphany", Firefox: "firefox", Focus: "focus", Generic: "generic", "Google Search": "google_search", Googlebot: "googlebot", "Internet Explorer": "ie", "K-Meleon": "k_meleon", Maxthon: "maxthon", "Microsoft Edge": "edge", "MZ Browser": "mz", "NAVER Whale Browser": "naver", Opera: "opera", "Opera Coast": "opera_coast", PhantomJS: "phantomjs", Puffin: "puffin", QupZilla: "qupzilla", QQ: "qq", QQLite: "qqlite", Safari: "safari", Sailfish: "sailfish", "Samsung Internet for Android": "samsung_internet", SeaMonkey: "seamonkey", Sleipnir: "sleipnir", Swing: "swing", Tizen: "tizen", "UC Browser": "uc", Vivaldi: "vivaldi", "WebOS Browser": "webos", WeChat: "wechat", "Yandex Browser": "yandex", Roku: "roku" };
var Z = { amazon_silk: "Amazon Silk", android: "Android Browser", bada: "Bada", blackberry: "BlackBerry", chrome: "Chrome", chromium: "Chromium", electron: "Electron", epiphany: "Epiphany", firefox: "Firefox", focus: "Focus", generic: "Generic", googlebot: "Googlebot", google_search: "Google Search", ie: "Internet Explorer", k_meleon: "K-Meleon", maxthon: "Maxthon", edge: "Microsoft Edge", mz: "MZ Browser", naver: "NAVER Whale Browser", opera: "Opera", opera_coast: "Opera Coast", phantomjs: "PhantomJS", puffin: "Puffin", qupzilla: "QupZilla", qq: "QQ Browser", qqlite: "QQ Browser Lite", safari: "Safari", sailfish: "Sailfish", samsung_internet: "Samsung Internet for Android", seamonkey: "SeaMonkey", sleipnir: "Sleipnir", swing: "Swing", tizen: "Tizen", uc: "UC Browser", vivaldi: "Vivaldi", webos: "WebOS Browser", wechat: "WeChat", yandex: "Yandex Browser" };
var ee = { tablet: "tablet", mobile: "mobile", desktop: "desktop", tv: "tv" };
var te = { WindowsPhone: "Windows Phone", Windows: "Windows", MacOS: "macOS", iOS: "iOS", Android: "Android", WebOS: "WebOS", BlackBerry: "BlackBerry", Bada: "Bada", Tizen: "Tizen", Linux: "Linux", ChromeOS: "Chrome OS", PlayStation4: "PlayStation 4", Roku: "Roku" };
var ne = { EdgeHTML: "EdgeHTML", Blink: "Blink", Trident: "Trident", Presto: "Presto", Gecko: "Gecko", WebKit: "WebKit" };
var re = class _re {
  static getFirstMatch(e4, t2) {
    const n2 = t2.match(e4);
    return n2 && n2.length > 0 && n2[1] || "";
  }
  static getSecondMatch(e4, t2) {
    const n2 = t2.match(e4);
    return n2 && n2.length > 1 && n2[2] || "";
  }
  static matchAndReturnConst(e4, t2, n2) {
    if (e4.test(t2)) return n2;
  }
  static getWindowsVersionName(e4) {
    switch (e4) {
      case "NT":
        return "NT";
      case "XP":
      case "NT 5.1":
        return "XP";
      case "NT 5.0":
        return "2000";
      case "NT 5.2":
        return "2003";
      case "NT 6.0":
        return "Vista";
      case "NT 6.1":
        return "7";
      case "NT 6.2":
        return "8";
      case "NT 6.3":
        return "8.1";
      case "NT 10.0":
        return "10";
      default:
        return;
    }
  }
  static getMacOSVersionName(e4) {
    const t2 = e4.split(".").splice(0, 2).map((e5) => parseInt(e5, 10) || 0);
    if (t2.push(0), 10 === t2[0]) switch (t2[1]) {
      case 5:
        return "Leopard";
      case 6:
        return "Snow Leopard";
      case 7:
        return "Lion";
      case 8:
        return "Mountain Lion";
      case 9:
        return "Mavericks";
      case 10:
        return "Yosemite";
      case 11:
        return "El Capitan";
      case 12:
        return "Sierra";
      case 13:
        return "High Sierra";
      case 14:
        return "Mojave";
      case 15:
        return "Catalina";
      default:
        return;
    }
  }
  static getAndroidVersionName(e4) {
    const t2 = e4.split(".").splice(0, 2).map((e5) => parseInt(e5, 10) || 0);
    if (t2.push(0), !(1 === t2[0] && t2[1] < 5)) return 1 === t2[0] && t2[1] < 6 ? "Cupcake" : 1 === t2[0] && t2[1] >= 6 ? "Donut" : 2 === t2[0] && t2[1] < 2 ? "Eclair" : 2 === t2[0] && 2 === t2[1] ? "Froyo" : 2 === t2[0] && t2[1] > 2 ? "Gingerbread" : 3 === t2[0] ? "Honeycomb" : 4 === t2[0] && t2[1] < 1 ? "Ice Cream Sandwich" : 4 === t2[0] && t2[1] < 4 ? "Jelly Bean" : 4 === t2[0] && t2[1] >= 4 ? "KitKat" : 5 === t2[0] ? "Lollipop" : 6 === t2[0] ? "Marshmallow" : 7 === t2[0] ? "Nougat" : 8 === t2[0] ? "Oreo" : 9 === t2[0] ? "Pie" : void 0;
  }
  static getVersionPrecision(e4) {
    return e4.split(".").length;
  }
  static compareVersions(e4, t2, n2 = false) {
    const r2 = _re.getVersionPrecision(e4), i2 = _re.getVersionPrecision(t2);
    let o2 = Math.max(r2, i2), a2 = 0;
    const s2 = _re.map([e4, t2], (e5) => {
      const t3 = o2 - _re.getVersionPrecision(e5), n3 = e5 + new Array(t3 + 1).join(".0");
      return _re.map(n3.split("."), (e6) => new Array(20 - e6.length).join("0") + e6).reverse();
    });
    for (n2 && (a2 = o2 - Math.min(r2, i2)), o2 -= 1; o2 >= a2; ) {
      if (s2[0][o2] > s2[1][o2]) return 1;
      if (s2[0][o2] === s2[1][o2]) {
        if (o2 === a2) return 0;
        o2 -= 1;
      } else if (s2[0][o2] < s2[1][o2]) return -1;
    }
  }
  static map(e4, t2) {
    const n2 = [];
    let r2;
    if (Array.prototype.map) return Array.prototype.map.call(e4, t2);
    for (r2 = 0; r2 < e4.length; r2 += 1) n2.push(t2(e4[r2]));
    return n2;
  }
  static find(e4, t2) {
    let n2, r2;
    if (Array.prototype.find) return Array.prototype.find.call(e4, t2);
    for (n2 = 0, r2 = e4.length; n2 < r2; n2 += 1) {
      const r3 = e4[n2];
      if (t2(r3, n2)) return r3;
    }
  }
  static assign(e4, ...t2) {
    const n2 = e4;
    let r2, i2;
    if (Object.assign) return Object.assign(e4, ...t2);
    for (r2 = 0, i2 = t2.length; r2 < i2; r2 += 1) {
      const e5 = t2[r2];
      if ("object" == typeof e5 && null !== e5) {
        Object.keys(e5).forEach((t3) => {
          n2[t3] = e5[t3];
        });
      }
    }
    return e4;
  }
  static getBrowserAlias(e4) {
    return X[e4];
  }
  static getBrowserTypeByAlias(e4) {
    return Z[e4] || "";
  }
};
var ie = /version\/(\d+(\.?_?\d+)+)/i;
var oe = [{ test: [/googlebot/i], describe(e4) {
  const t2 = { name: "Googlebot" }, n2 = re.getFirstMatch(/googlebot\/(\d+(\.\d+))/i, e4) || re.getFirstMatch(ie, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/opera/i], describe(e4) {
  const t2 = { name: "Opera" }, n2 = re.getFirstMatch(ie, e4) || re.getFirstMatch(/(?:opera)[\s/](\d+(\.?_?\d+)+)/i, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/opr\/|opios/i], describe(e4) {
  const t2 = { name: "Opera" }, n2 = re.getFirstMatch(/(?:opr|opios)[\s/](\S+)/i, e4) || re.getFirstMatch(ie, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/SamsungBrowser/i], describe(e4) {
  const t2 = { name: "Samsung Internet for Android" }, n2 = re.getFirstMatch(ie, e4) || re.getFirstMatch(/(?:SamsungBrowser)[\s/](\d+(\.?_?\d+)+)/i, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/Whale/i], describe(e4) {
  const t2 = { name: "NAVER Whale Browser" }, n2 = re.getFirstMatch(ie, e4) || re.getFirstMatch(/(?:whale)[\s/](\d+(?:\.\d+)+)/i, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/MZBrowser/i], describe(e4) {
  const t2 = { name: "MZ Browser" }, n2 = re.getFirstMatch(/(?:MZBrowser)[\s/](\d+(?:\.\d+)+)/i, e4) || re.getFirstMatch(ie, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/focus/i], describe(e4) {
  const t2 = { name: "Focus" }, n2 = re.getFirstMatch(/(?:focus)[\s/](\d+(?:\.\d+)+)/i, e4) || re.getFirstMatch(ie, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/swing/i], describe(e4) {
  const t2 = { name: "Swing" }, n2 = re.getFirstMatch(/(?:swing)[\s/](\d+(?:\.\d+)+)/i, e4) || re.getFirstMatch(ie, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/coast/i], describe(e4) {
  const t2 = { name: "Opera Coast" }, n2 = re.getFirstMatch(ie, e4) || re.getFirstMatch(/(?:coast)[\s/](\d+(\.?_?\d+)+)/i, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/opt\/\d+(?:.?_?\d+)+/i], describe(e4) {
  const t2 = { name: "Opera Touch" }, n2 = re.getFirstMatch(/(?:opt)[\s/](\d+(\.?_?\d+)+)/i, e4) || re.getFirstMatch(ie, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/yabrowser/i], describe(e4) {
  const t2 = { name: "Yandex Browser" }, n2 = re.getFirstMatch(/(?:yabrowser)[\s/](\d+(\.?_?\d+)+)/i, e4) || re.getFirstMatch(ie, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/ucbrowser/i], describe(e4) {
  const t2 = { name: "UC Browser" }, n2 = re.getFirstMatch(ie, e4) || re.getFirstMatch(/(?:ucbrowser)[\s/](\d+(\.?_?\d+)+)/i, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/Maxthon|mxios/i], describe(e4) {
  const t2 = { name: "Maxthon" }, n2 = re.getFirstMatch(ie, e4) || re.getFirstMatch(/(?:Maxthon|mxios)[\s/](\d+(\.?_?\d+)+)/i, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/epiphany/i], describe(e4) {
  const t2 = { name: "Epiphany" }, n2 = re.getFirstMatch(ie, e4) || re.getFirstMatch(/(?:epiphany)[\s/](\d+(\.?_?\d+)+)/i, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/puffin/i], describe(e4) {
  const t2 = { name: "Puffin" }, n2 = re.getFirstMatch(ie, e4) || re.getFirstMatch(/(?:puffin)[\s/](\d+(\.?_?\d+)+)/i, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/sleipnir/i], describe(e4) {
  const t2 = { name: "Sleipnir" }, n2 = re.getFirstMatch(ie, e4) || re.getFirstMatch(/(?:sleipnir)[\s/](\d+(\.?_?\d+)+)/i, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/k-meleon/i], describe(e4) {
  const t2 = { name: "K-Meleon" }, n2 = re.getFirstMatch(ie, e4) || re.getFirstMatch(/(?:k-meleon)[\s/](\d+(\.?_?\d+)+)/i, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/micromessenger/i], describe(e4) {
  const t2 = { name: "WeChat" }, n2 = re.getFirstMatch(/(?:micromessenger)[\s/](\d+(\.?_?\d+)+)/i, e4) || re.getFirstMatch(ie, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/qqbrowser/i], describe(e4) {
  const t2 = { name: /qqbrowserlite/i.test(e4) ? "QQ Browser Lite" : "QQ Browser" }, n2 = re.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\d+(\.?_?\d+)+)/i, e4) || re.getFirstMatch(ie, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/msie|trident/i], describe(e4) {
  const t2 = { name: "Internet Explorer" }, n2 = re.getFirstMatch(/(?:msie |rv:)(\d+(\.?_?\d+)+)/i, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/\sedg\//i], describe(e4) {
  const t2 = { name: "Microsoft Edge" }, n2 = re.getFirstMatch(/\sedg\/(\d+(\.?_?\d+)+)/i, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/edg([ea]|ios)/i], describe(e4) {
  const t2 = { name: "Microsoft Edge" }, n2 = re.getSecondMatch(/edg([ea]|ios)\/(\d+(\.?_?\d+)+)/i, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/vivaldi/i], describe(e4) {
  const t2 = { name: "Vivaldi" }, n2 = re.getFirstMatch(/vivaldi\/(\d+(\.?_?\d+)+)/i, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/seamonkey/i], describe(e4) {
  const t2 = { name: "SeaMonkey" }, n2 = re.getFirstMatch(/seamonkey\/(\d+(\.?_?\d+)+)/i, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/sailfish/i], describe(e4) {
  const t2 = { name: "Sailfish" }, n2 = re.getFirstMatch(/sailfish\s?browser\/(\d+(\.\d+)?)/i, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/silk/i], describe(e4) {
  const t2 = { name: "Amazon Silk" }, n2 = re.getFirstMatch(/silk\/(\d+(\.?_?\d+)+)/i, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/phantom/i], describe(e4) {
  const t2 = { name: "PhantomJS" }, n2 = re.getFirstMatch(/phantomjs\/(\d+(\.?_?\d+)+)/i, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/slimerjs/i], describe(e4) {
  const t2 = { name: "SlimerJS" }, n2 = re.getFirstMatch(/slimerjs\/(\d+(\.?_?\d+)+)/i, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/blackberry|\bbb\d+/i, /rim\stablet/i], describe(e4) {
  const t2 = { name: "BlackBerry" }, n2 = re.getFirstMatch(ie, e4) || re.getFirstMatch(/blackberry[\d]+\/(\d+(\.?_?\d+)+)/i, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/(web|hpw)[o0]s/i], describe(e4) {
  const t2 = { name: "WebOS Browser" }, n2 = re.getFirstMatch(ie, e4) || re.getFirstMatch(/w(?:eb)?[o0]sbrowser\/(\d+(\.?_?\d+)+)/i, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/bada/i], describe(e4) {
  const t2 = { name: "Bada" }, n2 = re.getFirstMatch(/dolfin\/(\d+(\.?_?\d+)+)/i, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/tizen/i], describe(e4) {
  const t2 = { name: "Tizen" }, n2 = re.getFirstMatch(/(?:tizen\s?)?browser\/(\d+(\.?_?\d+)+)/i, e4) || re.getFirstMatch(ie, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/qupzilla/i], describe(e4) {
  const t2 = { name: "QupZilla" }, n2 = re.getFirstMatch(/(?:qupzilla)[\s/](\d+(\.?_?\d+)+)/i, e4) || re.getFirstMatch(ie, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/firefox|iceweasel|fxios/i], describe(e4) {
  const t2 = { name: "Firefox" }, n2 = re.getFirstMatch(/(?:firefox|iceweasel|fxios)[\s/](\d+(\.?_?\d+)+)/i, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/electron/i], describe(e4) {
  const t2 = { name: "Electron" }, n2 = re.getFirstMatch(/(?:electron)\/(\d+(\.?_?\d+)+)/i, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/MiuiBrowser/i], describe(e4) {
  const t2 = { name: "Miui" }, n2 = re.getFirstMatch(/(?:MiuiBrowser)[\s/](\d+(\.?_?\d+)+)/i, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/chromium/i], describe(e4) {
  const t2 = { name: "Chromium" }, n2 = re.getFirstMatch(/(?:chromium)[\s/](\d+(\.?_?\d+)+)/i, e4) || re.getFirstMatch(ie, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/chrome|crios|crmo/i], describe(e4) {
  const t2 = { name: "Chrome" }, n2 = re.getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.?_?\d+)+)/i, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/GSA/i], describe(e4) {
  const t2 = { name: "Google Search" }, n2 = re.getFirstMatch(/(?:GSA)\/(\d+(\.?_?\d+)+)/i, e4);
  return n2 && (t2.version = n2), t2;
} }, { test(e4) {
  const t2 = !e4.test(/like android/i), n2 = e4.test(/android/i);
  return t2 && n2;
}, describe(e4) {
  const t2 = { name: "Android Browser" }, n2 = re.getFirstMatch(ie, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/playstation 4/i], describe(e4) {
  const t2 = { name: "PlayStation 4" }, n2 = re.getFirstMatch(ie, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/safari|applewebkit/i], describe(e4) {
  const t2 = { name: "Safari" }, n2 = re.getFirstMatch(ie, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/.*/i], describe(e4) {
  const t2 = -1 !== e4.search("\\(") ? /^(.*)\/(.*)[ \t]\((.*)/ : /^(.*)\/(.*) /;
  return { name: re.getFirstMatch(t2, e4), version: re.getSecondMatch(t2, e4) };
} }];
var ae = [{ test: [/Roku\/DVP/], describe(e4) {
  const t2 = re.getFirstMatch(/Roku\/DVP-(\d+\.\d+)/i, e4);
  return { name: te.Roku, version: t2 };
} }, { test: [/windows phone/i], describe(e4) {
  const t2 = re.getFirstMatch(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i, e4);
  return { name: te.WindowsPhone, version: t2 };
} }, { test: [/windows /i], describe(e4) {
  const t2 = re.getFirstMatch(/Windows ((NT|XP)( \d\d?.\d)?)/i, e4), n2 = re.getWindowsVersionName(t2);
  return { name: te.Windows, version: t2, versionName: n2 };
} }, { test: [/Macintosh(.*?) FxiOS(.*?)\//], describe(e4) {
  const t2 = { name: te.iOS }, n2 = re.getSecondMatch(/(Version\/)(\d[\d.]+)/, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/macintosh/i], describe(e4) {
  const t2 = re.getFirstMatch(/mac os x (\d+(\.?_?\d+)+)/i, e4).replace(/[_\s]/g, "."), n2 = re.getMacOSVersionName(t2), r2 = { name: te.MacOS, version: t2 };
  return n2 && (r2.versionName = n2), r2;
} }, { test: [/(ipod|iphone|ipad)/i], describe(e4) {
  const t2 = re.getFirstMatch(/os (\d+([_\s]\d+)*) like mac os x/i, e4).replace(/[_\s]/g, ".");
  return { name: te.iOS, version: t2 };
} }, { test(e4) {
  const t2 = !e4.test(/like android/i), n2 = e4.test(/android/i);
  return t2 && n2;
}, describe(e4) {
  const t2 = re.getFirstMatch(/android[\s/-](\d+(\.\d+)*)/i, e4), n2 = re.getAndroidVersionName(t2), r2 = { name: te.Android, version: t2 };
  return n2 && (r2.versionName = n2), r2;
} }, { test: [/(web|hpw)[o0]s/i], describe(e4) {
  const t2 = re.getFirstMatch(/(?:web|hpw)[o0]s\/(\d+(\.\d+)*)/i, e4), n2 = { name: te.WebOS };
  return t2 && t2.length && (n2.version = t2), n2;
} }, { test: [/blackberry|\bbb\d+/i, /rim\stablet/i], describe(e4) {
  const t2 = re.getFirstMatch(/rim\stablet\sos\s(\d+(\.\d+)*)/i, e4) || re.getFirstMatch(/blackberry\d+\/(\d+([_\s]\d+)*)/i, e4) || re.getFirstMatch(/\bbb(\d+)/i, e4);
  return { name: te.BlackBerry, version: t2 };
} }, { test: [/bada/i], describe(e4) {
  const t2 = re.getFirstMatch(/bada\/(\d+(\.\d+)*)/i, e4);
  return { name: te.Bada, version: t2 };
} }, { test: [/tizen/i], describe(e4) {
  const t2 = re.getFirstMatch(/tizen[/\s](\d+(\.\d+)*)/i, e4);
  return { name: te.Tizen, version: t2 };
} }, { test: [/linux/i], describe: () => ({ name: te.Linux }) }, { test: [/CrOS/], describe: () => ({ name: te.ChromeOS }) }, { test: [/PlayStation 4/], describe(e4) {
  const t2 = re.getFirstMatch(/PlayStation 4[/\s](\d+(\.\d+)*)/i, e4);
  return { name: te.PlayStation4, version: t2 };
} }];
var se = [{ test: [/googlebot/i], describe: () => ({ type: "bot", vendor: "Google" }) }, { test: [/huawei/i], describe(e4) {
  const t2 = re.getFirstMatch(/(can-l01)/i, e4) && "Nova", n2 = { type: ee.mobile, vendor: "Huawei" };
  return t2 && (n2.model = t2), n2;
} }, { test: [/nexus\s*(?:7|8|9|10).*/i], describe: () => ({ type: ee.tablet, vendor: "Nexus" }) }, { test: [/ipad/i], describe: () => ({ type: ee.tablet, vendor: "Apple", model: "iPad" }) }, { test: [/Macintosh(.*?) FxiOS(.*?)\//], describe: () => ({ type: ee.tablet, vendor: "Apple", model: "iPad" }) }, { test: [/kftt build/i], describe: () => ({ type: ee.tablet, vendor: "Amazon", model: "Kindle Fire HD 7" }) }, { test: [/silk/i], describe: () => ({ type: ee.tablet, vendor: "Amazon" }) }, { test: [/tablet(?! pc)/i], describe: () => ({ type: ee.tablet }) }, { test(e4) {
  const t2 = e4.test(/ipod|iphone/i), n2 = e4.test(/like (ipod|iphone)/i);
  return t2 && !n2;
}, describe(e4) {
  const t2 = re.getFirstMatch(/(ipod|iphone)/i, e4);
  return { type: ee.mobile, vendor: "Apple", model: t2 };
} }, { test: [/nexus\s*[0-6].*/i, /galaxy nexus/i], describe: () => ({ type: ee.mobile, vendor: "Nexus" }) }, { test: [/[^-]mobi/i], describe: () => ({ type: ee.mobile }) }, { test: (e4) => "blackberry" === e4.getBrowserName(true), describe: () => ({ type: ee.mobile, vendor: "BlackBerry" }) }, { test: (e4) => "bada" === e4.getBrowserName(true), describe: () => ({ type: ee.mobile }) }, { test: (e4) => "windows phone" === e4.getBrowserName(), describe: () => ({ type: ee.mobile, vendor: "Microsoft" }) }, { test(e4) {
  const t2 = Number(String(e4.getOSVersion()).split(".")[0]);
  return "android" === e4.getOSName(true) && t2 >= 3;
}, describe: () => ({ type: ee.tablet }) }, { test: (e4) => "android" === e4.getOSName(true), describe: () => ({ type: ee.mobile }) }, { test: (e4) => "macos" === e4.getOSName(true), describe: () => ({ type: ee.desktop, vendor: "Apple" }) }, { test: (e4) => "windows" === e4.getOSName(true), describe: () => ({ type: ee.desktop }) }, { test: (e4) => "linux" === e4.getOSName(true), describe: () => ({ type: ee.desktop }) }, { test: (e4) => "playstation 4" === e4.getOSName(true), describe: () => ({ type: ee.tv }) }, { test: (e4) => "roku" === e4.getOSName(true), describe: () => ({ type: ee.tv }) }];
var ce = [{ test: (e4) => "microsoft edge" === e4.getBrowserName(true), describe(e4) {
  if (/\sedg\//i.test(e4)) return { name: ne.Blink };
  const t2 = re.getFirstMatch(/edge\/(\d+(\.?_?\d+)+)/i, e4);
  return { name: ne.EdgeHTML, version: t2 };
} }, { test: [/trident/i], describe(e4) {
  const t2 = { name: ne.Trident }, n2 = re.getFirstMatch(/trident\/(\d+(\.?_?\d+)+)/i, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: (e4) => e4.test(/presto/i), describe(e4) {
  const t2 = { name: ne.Presto }, n2 = re.getFirstMatch(/presto\/(\d+(\.?_?\d+)+)/i, e4);
  return n2 && (t2.version = n2), t2;
} }, { test(e4) {
  const t2 = e4.test(/gecko/i), n2 = e4.test(/like gecko/i);
  return t2 && !n2;
}, describe(e4) {
  const t2 = { name: ne.Gecko }, n2 = re.getFirstMatch(/gecko\/(\d+(\.?_?\d+)+)/i, e4);
  return n2 && (t2.version = n2), t2;
} }, { test: [/(apple)?webkit\/537\.36/i], describe: () => ({ name: ne.Blink }) }, { test: [/(apple)?webkit/i], describe(e4) {
  const t2 = { name: ne.WebKit }, n2 = re.getFirstMatch(/webkit\/(\d+(\.?_?\d+)+)/i, e4);
  return n2 && (t2.version = n2), t2;
} }];
var ue = class {
  constructor(e4, t2 = false) {
    if (null == e4 || "" === e4) throw new Error("UserAgent parameter can't be empty");
    this._ua = e4, this.parsedResult = {}, true !== t2 && this.parse();
  }
  getUA() {
    return this._ua;
  }
  test(e4) {
    return e4.test(this._ua);
  }
  parseBrowser() {
    this.parsedResult.browser = {};
    const e4 = re.find(oe, (e5) => {
      if ("function" == typeof e5.test) return e5.test(this);
      if (e5.test instanceof Array) return e5.test.some((e6) => this.test(e6));
      throw new Error("Browser's test function is not valid");
    });
    return e4 && (this.parsedResult.browser = e4.describe(this.getUA())), this.parsedResult.browser;
  }
  getBrowser() {
    return this.parsedResult.browser ? this.parsedResult.browser : this.parseBrowser();
  }
  getBrowserName(e4) {
    return e4 ? String(this.getBrowser().name).toLowerCase() || "" : this.getBrowser().name || "";
  }
  getBrowserVersion() {
    return this.getBrowser().version;
  }
  getOS() {
    return this.parsedResult.os ? this.parsedResult.os : this.parseOS();
  }
  parseOS() {
    this.parsedResult.os = {};
    const e4 = re.find(ae, (e5) => {
      if ("function" == typeof e5.test) return e5.test(this);
      if (e5.test instanceof Array) return e5.test.some((e6) => this.test(e6));
      throw new Error("Browser's test function is not valid");
    });
    return e4 && (this.parsedResult.os = e4.describe(this.getUA())), this.parsedResult.os;
  }
  getOSName(e4) {
    const { name: t2 } = this.getOS();
    return e4 ? String(t2).toLowerCase() || "" : t2 || "";
  }
  getOSVersion() {
    return this.getOS().version;
  }
  getPlatform() {
    return this.parsedResult.platform ? this.parsedResult.platform : this.parsePlatform();
  }
  getPlatformType(e4 = false) {
    const { type: t2 } = this.getPlatform();
    return e4 ? String(t2).toLowerCase() || "" : t2 || "";
  }
  parsePlatform() {
    this.parsedResult.platform = {};
    const e4 = re.find(se, (e5) => {
      if ("function" == typeof e5.test) return e5.test(this);
      if (e5.test instanceof Array) return e5.test.some((e6) => this.test(e6));
      throw new Error("Browser's test function is not valid");
    });
    return e4 && (this.parsedResult.platform = e4.describe(this.getUA())), this.parsedResult.platform;
  }
  getEngine() {
    return this.parsedResult.engine ? this.parsedResult.engine : this.parseEngine();
  }
  getEngineName(e4) {
    return e4 ? String(this.getEngine().name).toLowerCase() || "" : this.getEngine().name || "";
  }
  parseEngine() {
    this.parsedResult.engine = {};
    const e4 = re.find(ce, (e5) => {
      if ("function" == typeof e5.test) return e5.test(this);
      if (e5.test instanceof Array) return e5.test.some((e6) => this.test(e6));
      throw new Error("Browser's test function is not valid");
    });
    return e4 && (this.parsedResult.engine = e4.describe(this.getUA())), this.parsedResult.engine;
  }
  parse() {
    return this.parseBrowser(), this.parseOS(), this.parsePlatform(), this.parseEngine(), this;
  }
  getResult() {
    return re.assign({}, this.parsedResult);
  }
  satisfies(e4) {
    const t2 = {};
    let n2 = 0;
    const r2 = {};
    let i2 = 0;
    if (Object.keys(e4).forEach((o2) => {
      const a2 = e4[o2];
      "string" == typeof a2 ? (r2[o2] = a2, i2 += 1) : "object" == typeof a2 && (t2[o2] = a2, n2 += 1);
    }), n2 > 0) {
      const e5 = Object.keys(t2), n3 = re.find(e5, (e6) => this.isOS(e6));
      if (n3) {
        const e6 = this.satisfies(t2[n3]);
        if (void 0 !== e6) return e6;
      }
      const r3 = re.find(e5, (e6) => this.isPlatform(e6));
      if (r3) {
        const e6 = this.satisfies(t2[r3]);
        if (void 0 !== e6) return e6;
      }
    }
    if (i2 > 0) {
      const e5 = Object.keys(r2), t3 = re.find(e5, (e6) => this.isBrowser(e6, true));
      if (void 0 !== t3) return this.compareVersion(r2[t3]);
    }
  }
  isBrowser(e4, t2 = false) {
    const n2 = this.getBrowserName().toLowerCase();
    let r2 = e4.toLowerCase();
    const i2 = re.getBrowserTypeByAlias(r2);
    return t2 && i2 && (r2 = i2.toLowerCase()), r2 === n2;
  }
  compareVersion(e4) {
    let t2 = [0], n2 = e4, r2 = false;
    const i2 = this.getBrowserVersion();
    if ("string" == typeof i2) return ">" === e4[0] || "<" === e4[0] ? (n2 = e4.substr(1), "=" === e4[1] ? (r2 = true, n2 = e4.substr(2)) : t2 = [], ">" === e4[0] ? t2.push(1) : t2.push(-1)) : "=" === e4[0] ? n2 = e4.substr(1) : "~" === e4[0] && (r2 = true, n2 = e4.substr(1)), t2.indexOf(re.compareVersions(i2, n2, r2)) > -1;
  }
  isOS(e4) {
    return this.getOSName(true) === String(e4).toLowerCase();
  }
  isPlatform(e4) {
    return this.getPlatformType(true) === String(e4).toLowerCase();
  }
  isEngine(e4) {
    return this.getEngineName(true) === String(e4).toLowerCase();
  }
  is(e4, t2 = false) {
    return this.isBrowser(e4, t2) || this.isOS(e4) || this.isPlatform(e4);
  }
  some(e4 = []) {
    return e4.some((e5) => this.is(e5));
  }
};
var le = class {
  static getParser(e4, t2 = false) {
    if ("string" != typeof e4) throw new Error("UserAgent should be a string");
    return new ue(e4, t2);
  }
  static parse(e4) {
    return new ue(e4).getResult();
  }
  static get BROWSER_MAP() {
    return Z;
  }
  static get ENGINE_MAP() {
    return ne;
  }
  static get OS_MAP() {
    return te;
  }
  static get PLATFORMS_MAP() {
    return ee;
  }
};
function de() {
  return Date.now() + Math.random().toString();
}
function he() {
  throw new Error("Method must be implemented in subclass");
}
function pe(e4) {
  return window._dailyConfig && window._dailyConfig.proxyUrl ? window._dailyConfig.proxyUrl + ("/" === window._dailyConfig.proxyUrl.slice(-1) ? "" : "/") + e4.substring(8) : e4;
}
function fe() {
  return window._dailyConfig && window._dailyConfig.callObjectBundleUrlOverride ? window._dailyConfig.callObjectBundleUrlOverride : pe("https://c.daily.co/call-machine/versioned/".concat("0.55.1", "/static/call-machine-object-bundle.js"));
}
function ve(e4) {
  try {
    new URL(e4);
  } catch (e5) {
    return false;
  }
  return true;
}
var ge = Object.prototype.toString;
function me(e4) {
  switch (ge.call(e4)) {
    case "[object Error]":
    case "[object Exception]":
    case "[object DOMException]":
      return true;
    default:
      return Ce(e4, Error);
  }
}
function ye(e4, t2) {
  return ge.call(e4) === `[object ${t2}]`;
}
function _e(e4) {
  return ye(e4, "ErrorEvent");
}
function be(e4) {
  return ye(e4, "DOMError");
}
function we(e4) {
  return ye(e4, "String");
}
function Se(e4) {
  return null === e4 || "object" != typeof e4 && "function" != typeof e4;
}
function ke(e4) {
  return ye(e4, "Object");
}
function Ee(e4) {
  return "undefined" != typeof Event && Ce(e4, Event);
}
function Me(e4) {
  return Boolean(e4 && e4.then && "function" == typeof e4.then);
}
function Ce(e4, t2) {
  try {
    return e4 instanceof t2;
  } catch (e5) {
    return false;
  }
}
function Te(e4, t2 = 0) {
  return "string" != typeof e4 || 0 === t2 || e4.length <= t2 ? e4 : `${e4.slice(0, t2)}...`;
}
function Oe(e4, t2) {
  if (!Array.isArray(e4)) return "";
  const n2 = [];
  for (let t3 = 0; t3 < e4.length; t3++) {
    const r2 = e4[t3];
    try {
      n2.push(String(r2));
    } catch (e5) {
      n2.push("[value cannot be serialized]");
    }
  }
  return n2.join(t2);
}
function je(e4, t2, n2 = false) {
  return !!we(e4) && (ye(t2, "RegExp") ? t2.test(e4) : !!we(t2) && (n2 ? e4 === t2 : e4.includes(t2)));
}
function Pe(e4, t2 = [], n2 = false) {
  return t2.some((t3) => je(e4, t3, n2));
}
function xe(e4, t2, n2 = 250, r2, i2, o2, a2) {
  if (!(o2.exception && o2.exception.values && a2 && Ce(a2.originalException, Error))) return;
  const s2 = o2.exception.values.length > 0 ? o2.exception.values[o2.exception.values.length - 1] : void 0;
  var c2, u2;
  s2 && (o2.exception.values = (c2 = Ae(e4, t2, i2, a2.originalException, r2, o2.exception.values, s2, 0), u2 = n2, c2.map((e5) => (e5.value && (e5.value = Te(e5.value, u2)), e5))));
}
function Ae(e4, t2, n2, r2, i2, o2, a2, s2) {
  if (o2.length >= n2 + 1) return o2;
  let c2 = [...o2];
  if (Ce(r2[i2], Error)) {
    De(a2, s2);
    const o3 = e4(t2, r2[i2]), u2 = c2.length;
    Le(o3, i2, u2, s2), c2 = Ae(e4, t2, n2, r2[i2], i2, [o3, ...c2], o3, u2);
  }
  return Array.isArray(r2.errors) && r2.errors.forEach((r3, o3) => {
    if (Ce(r3, Error)) {
      De(a2, s2);
      const u2 = e4(t2, r3), l2 = c2.length;
      Le(u2, `errors[${o3}]`, l2, s2), c2 = Ae(e4, t2, n2, r3, i2, [u2, ...c2], u2, l2);
    }
  }), c2;
}
function De(e4, t2) {
  e4.mechanism = e4.mechanism || { type: "generic", handled: true }, e4.mechanism = { ...e4.mechanism, is_exception_group: true, exception_id: t2 };
}
function Le(e4, t2, n2, r2) {
  e4.mechanism = e4.mechanism || { type: "generic", handled: true }, e4.mechanism = { ...e4.mechanism, type: "chained", source: t2, exception_id: n2, parent_id: r2 };
}
function Ne(e4) {
  return e4 && e4.Math == Math ? e4 : void 0;
}
var Ie = "object" == typeof globalThis && Ne(globalThis) || "object" == typeof window && Ne(window) || "object" == typeof self && Ne(self) || "object" == typeof global && Ne(global) || /* @__PURE__ */ function() {
  return this;
}() || {};
function Re() {
  return Ie;
}
function Be(e4, t2, n2) {
  const r2 = n2 || Ie, i2 = r2.__SENTRY__ = r2.__SENTRY__ || {};
  return i2[e4] || (i2[e4] = t2());
}
var Fe = Re();
var Ue = 80;
function Ve(e4, t2 = {}) {
  try {
    let n2 = e4;
    const r2 = 5, i2 = [];
    let o2 = 0, a2 = 0;
    const s2 = " > ", c2 = s2.length;
    let u2;
    const l2 = Array.isArray(t2) ? t2 : t2.keyAttrs, d2 = !Array.isArray(t2) && t2.maxStringLength || Ue;
    for (; n2 && o2++ < r2 && (u2 = $e(n2, l2), !("html" === u2 || o2 > 1 && a2 + i2.length * c2 + u2.length >= d2)); ) i2.push(u2), a2 += u2.length, n2 = n2.parentNode;
    return i2.reverse().join(s2);
  } catch (e5) {
    return "<unknown>";
  }
}
function $e(e4, t2) {
  const n2 = e4, r2 = [];
  let i2, o2, a2, s2, c2;
  if (!n2 || !n2.tagName) return "";
  r2.push(n2.tagName.toLowerCase());
  const u2 = t2 && t2.length ? t2.filter((e5) => n2.getAttribute(e5)).map((e5) => [e5, n2.getAttribute(e5)]) : null;
  if (u2 && u2.length) u2.forEach((e5) => {
    r2.push(`[${e5[0]}="${e5[1]}"]`);
  });
  else if (n2.id && r2.push(`#${n2.id}`), i2 = n2.className, i2 && we(i2)) for (o2 = i2.split(/\s+/), c2 = 0; c2 < o2.length; c2++) r2.push(`.${o2[c2]}`);
  const l2 = ["aria-label", "type", "name", "title", "alt"];
  for (c2 = 0; c2 < l2.length; c2++) a2 = l2[c2], s2 = n2.getAttribute(a2), s2 && r2.push(`[${a2}="${s2}"]`);
  return r2.join("");
}
var Ge = ["debug", "info", "warn", "error", "log", "assert", "trace"];
function qe(e4) {
  if (!("console" in Ie)) return e4();
  const t2 = Ie.console, n2 = {};
  Ge.forEach((e5) => {
    const r2 = t2[e5] && t2[e5].__sentry_original__;
    e5 in t2 && r2 && (n2[e5] = t2[e5], t2[e5] = r2);
  });
  try {
    return e4();
  } finally {
    Object.keys(n2).forEach((e5) => {
      t2[e5] = n2[e5];
    });
  }
}
function Ye() {
  let e4 = false;
  const t2 = { enable: () => {
    e4 = true;
  }, disable: () => {
    e4 = false;
  } };
  return "undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__ ? Ge.forEach((n2) => {
    t2[n2] = (...t3) => {
      e4 && qe(() => {
        Ie.console[n2](`Sentry Logger [${n2}]:`, ...t3);
      });
    };
  }) : Ge.forEach((e5) => {
    t2[e5] = () => {
    };
  }), t2;
}
var ze;
ze = "undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__ ? Be("logger", Ye) : Ye();
var Je = /^(?:(\w+):)\/\/(?:(\w+)(?::(\w+)?)?@)([\w.-]+)(?::(\d+))?\/(.+)/;
function We(e4, t2 = false) {
  const { host: n2, path: r2, pass: i2, port: o2, projectId: a2, protocol: s2, publicKey: c2 } = e4;
  return `${s2}://${c2}${t2 && i2 ? `:${i2}` : ""}@${n2}${o2 ? `:${o2}` : ""}/${r2 ? `${r2}/` : r2}${a2}`;
}
function He(e4) {
  return { protocol: e4.protocol, publicKey: e4.publicKey || "", pass: e4.pass || "", host: e4.host, port: e4.port || "", path: e4.path || "", projectId: e4.projectId };
}
function Ke(e4) {
  const t2 = "string" == typeof e4 ? function(e5) {
    const t3 = Je.exec(e5);
    if (!t3) return void console.error(`Invalid Sentry Dsn: ${e5}`);
    const [n2, r2, i2 = "", o2, a2 = "", s2] = t3.slice(1);
    let c2 = "", u2 = s2;
    const l2 = u2.split("/");
    if (l2.length > 1 && (c2 = l2.slice(0, -1).join("/"), u2 = l2.pop()), u2) {
      const e6 = u2.match(/^\d+/);
      e6 && (u2 = e6[0]);
    }
    return He({ host: o2, pass: i2, path: c2, projectId: u2, port: a2, protocol: n2, publicKey: r2 });
  }(e4) : He(e4);
  if (t2 && function(e5) {
    if ("undefined" != typeof __SENTRY_DEBUG__ && !__SENTRY_DEBUG__) return true;
    const { port: t3, projectId: n2, protocol: r2 } = e5;
    return !(["protocol", "publicKey", "host", "projectId"].find((t4) => !e5[t4] && (ze.error(`Invalid Sentry Dsn: ${t4} missing`), true)) || (n2.match(/^\d+$/) ? /* @__PURE__ */ function(e6) {
      return "http" === e6 || "https" === e6;
    }(r2) ? t3 && isNaN(parseInt(t3, 10)) && (ze.error(`Invalid Sentry Dsn: Invalid port ${t3}`), 1) : (ze.error(`Invalid Sentry Dsn: Invalid protocol ${r2}`), 1) : (ze.error(`Invalid Sentry Dsn: Invalid projectId ${n2}`), 1)));
  }(t2)) return t2;
}
var Qe = class extends Error {
  constructor(e4, t2 = "warn") {
    super(e4), this.message = e4, this.name = new.target.prototype.constructor.name, Object.setPrototypeOf(this, new.target.prototype), this.logLevel = t2;
  }
};
function Xe(e4, t2, n2) {
  if (!(t2 in e4)) return;
  const r2 = e4[t2], i2 = n2(r2);
  if ("function" == typeof i2) try {
    et(i2, r2);
  } catch (e5) {
  }
  e4[t2] = i2;
}
function Ze(e4, t2, n2) {
  Object.defineProperty(e4, t2, { value: n2, writable: true, configurable: true });
}
function et(e4, t2) {
  const n2 = t2.prototype || {};
  e4.prototype = t2.prototype = n2, Ze(e4, "__sentry_original__", t2);
}
function tt(e4) {
  return e4.__sentry_original__;
}
function nt(e4) {
  if (me(e4)) return { message: e4.message, name: e4.name, stack: e4.stack, ...it(e4) };
  if (Ee(e4)) {
    const t2 = { type: e4.type, target: rt(e4.target), currentTarget: rt(e4.currentTarget), ...it(e4) };
    return "undefined" != typeof CustomEvent && Ce(e4, CustomEvent) && (t2.detail = e4.detail), t2;
  }
  return e4;
}
function rt(e4) {
  try {
    return t2 = e4, "undefined" != typeof Element && Ce(t2, Element) ? Ve(e4) : Object.prototype.toString.call(e4);
  } catch (e5) {
    return "<unknown>";
  }
  var t2;
}
function it(e4) {
  if ("object" == typeof e4 && null !== e4) {
    const t2 = {};
    for (const n2 in e4) Object.prototype.hasOwnProperty.call(e4, n2) && (t2[n2] = e4[n2]);
    return t2;
  }
  return {};
}
function ot(e4) {
  return at(e4, /* @__PURE__ */ new Map());
}
function at(e4, t2) {
  if (ke(e4)) {
    const n2 = t2.get(e4);
    if (void 0 !== n2) return n2;
    const r2 = {};
    t2.set(e4, r2);
    for (const n3 of Object.keys(e4)) void 0 !== e4[n3] && (r2[n3] = at(e4[n3], t2));
    return r2;
  }
  if (Array.isArray(e4)) {
    const n2 = t2.get(e4);
    if (void 0 !== n2) return n2;
    const r2 = [];
    return t2.set(e4, r2), e4.forEach((e5) => {
      r2.push(at(e5, t2));
    }), r2;
  }
  return e4;
}
var st = "<anonymous>";
function ct(e4) {
  try {
    return e4 && "function" == typeof e4 && e4.name || st;
  } catch (e5) {
    return st;
  }
}
var ut = Re();
function lt(e4) {
  return e4 && /^function fetch\(\)\s+\{\s+\[native code\]\s+\}$/.test(e4.toString());
}
function dt() {
  if (!function() {
    if (!("fetch" in ut)) return false;
    try {
      return new Headers(), new Request("http://www.example.com"), new Response(), true;
    } catch (e5) {
      return false;
    }
  }()) return false;
  if (lt(ut.fetch)) return true;
  let e4 = false;
  const t2 = ut.document;
  if (t2 && "function" == typeof t2.createElement) try {
    const n2 = t2.createElement("iframe");
    n2.hidden = true, t2.head.appendChild(n2), n2.contentWindow && n2.contentWindow.fetch && (e4 = lt(n2.contentWindow.fetch)), t2.head.removeChild(n2);
  } catch (e5) {
    ("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && ze.warn("Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ", e5);
  }
  return e4;
}
var ht = Re();
var pt = Re();
var ft = "__sentry_xhr_v2__";
var vt = {};
var gt = {};
function mt(e4) {
  if (!gt[e4]) switch (gt[e4] = true, e4) {
    case "console":
      !function() {
        if (!("console" in pt)) return;
        Ge.forEach(function(e5) {
          e5 in pt.console && Xe(pt.console, e5, function(t2) {
            return function(...n2) {
              _t("console", { args: n2, level: e5 }), t2 && t2.apply(pt.console, n2);
            };
          });
        });
      }();
      break;
    case "dom":
      !function() {
        if (!("document" in pt)) return;
        const e5 = _t.bind(null, "dom"), t2 = Ct(e5, true);
        pt.document.addEventListener("click", t2, false), pt.document.addEventListener("keypress", t2, false), ["EventTarget", "Node"].forEach((t3) => {
          const n2 = pt[t3] && pt[t3].prototype;
          n2 && n2.hasOwnProperty && n2.hasOwnProperty("addEventListener") && (Xe(n2, "addEventListener", function(t4) {
            return function(n3, r2, i2) {
              if ("click" === n3 || "keypress" == n3) try {
                const r3 = this, o2 = r3.__sentry_instrumentation_handlers__ = r3.__sentry_instrumentation_handlers__ || {}, a2 = o2[n3] = o2[n3] || { refCount: 0 };
                if (!a2.handler) {
                  const r4 = Ct(e5);
                  a2.handler = r4, t4.call(this, n3, r4, i2);
                }
                a2.refCount++;
              } catch (e6) {
              }
              return t4.call(this, n3, r2, i2);
            };
          }), Xe(n2, "removeEventListener", function(e6) {
            return function(t4, n3, r2) {
              if ("click" === t4 || "keypress" == t4) try {
                const n4 = this, i2 = n4.__sentry_instrumentation_handlers__ || {}, o2 = i2[t4];
                o2 && (o2.refCount--, o2.refCount <= 0 && (e6.call(this, t4, o2.handler, r2), o2.handler = void 0, delete i2[t4]), 0 === Object.keys(i2).length && delete n4.__sentry_instrumentation_handlers__);
              } catch (e7) {
              }
              return e6.call(this, t4, n3, r2);
            };
          }));
        });
      }();
      break;
    case "xhr":
      !function() {
        if (!("XMLHttpRequest" in pt)) return;
        const e5 = XMLHttpRequest.prototype;
        Xe(e5, "open", function(e6) {
          return function(...t2) {
            const n2 = t2[1], r2 = this[ft] = { method: we(t2[0]) ? t2[0].toUpperCase() : t2[0], url: t2[1], request_headers: {} };
            we(n2) && "POST" === r2.method && n2.match(/sentry_key/) && (this.__sentry_own_request__ = true);
            const i2 = () => {
              const e7 = this[ft];
              if (e7 && 4 === this.readyState) {
                try {
                  e7.status_code = this.status;
                } catch (e8) {
                }
                _t("xhr", { args: t2, endTimestamp: Date.now(), startTimestamp: Date.now(), xhr: this });
              }
            };
            return "onreadystatechange" in this && "function" == typeof this.onreadystatechange ? Xe(this, "onreadystatechange", function(e7) {
              return function(...t3) {
                return i2(), e7.apply(this, t3);
              };
            }) : this.addEventListener("readystatechange", i2), Xe(this, "setRequestHeader", function(e7) {
              return function(...t3) {
                const [n3, r3] = t3, i3 = this[ft];
                return i3 && (i3.request_headers[n3.toLowerCase()] = r3), e7.apply(this, t3);
              };
            }), e6.apply(this, t2);
          };
        }), Xe(e5, "send", function(e6) {
          return function(...t2) {
            const n2 = this[ft];
            return n2 && void 0 !== t2[0] && (n2.body = t2[0]), _t("xhr", { args: t2, startTimestamp: Date.now(), xhr: this }), e6.apply(this, t2);
          };
        });
      }();
      break;
    case "fetch":
      !function() {
        if (!dt()) return;
        Xe(pt, "fetch", function(e5) {
          return function(...t2) {
            const { method: n2, url: r2 } = function(e6) {
              if (0 === e6.length) return { method: "GET", url: "" };
              if (2 === e6.length) {
                const [t4, n3] = e6;
                return { url: wt(t4), method: bt(n3, "method") ? String(n3.method).toUpperCase() : "GET" };
              }
              const t3 = e6[0];
              return { url: wt(t3), method: bt(t3, "method") ? String(t3.method).toUpperCase() : "GET" };
            }(t2), i2 = { args: t2, fetchData: { method: n2, url: r2 }, startTimestamp: Date.now() };
            return _t("fetch", { ...i2 }), e5.apply(pt, t2).then((e6) => (_t("fetch", { ...i2, endTimestamp: Date.now(), response: e6 }), e6), (e6) => {
              throw _t("fetch", { ...i2, endTimestamp: Date.now(), error: e6 }), e6;
            });
          };
        });
      }();
      break;
    case "history":
      !function() {
        if (!function() {
          const e6 = ht.chrome, t3 = e6 && e6.app && e6.app.runtime, n2 = "history" in ht && !!ht.history.pushState && !!ht.history.replaceState;
          return !t3 && n2;
        }()) return;
        const e5 = pt.onpopstate;
        function t2(e6) {
          return function(...t3) {
            const n2 = t3.length > 2 ? t3[2] : void 0;
            if (n2) {
              const e7 = St, t4 = String(n2);
              St = t4, _t("history", { from: e7, to: t4 });
            }
            return e6.apply(this, t3);
          };
        }
        pt.onpopstate = function(...t3) {
          const n2 = pt.location.href, r2 = St;
          if (St = n2, _t("history", { from: r2, to: n2 }), e5) try {
            return e5.apply(this, t3);
          } catch (e6) {
          }
        }, Xe(pt.history, "pushState", t2), Xe(pt.history, "replaceState", t2);
      }();
      break;
    case "error":
      Tt = pt.onerror, pt.onerror = function(e5, t2, n2, r2, i2) {
        return _t("error", { column: r2, error: i2, line: n2, msg: e5, url: t2 }), !(!Tt || Tt.__SENTRY_LOADER__) && Tt.apply(this, arguments);
      }, pt.onerror.__SENTRY_INSTRUMENTED__ = true;
      break;
    case "unhandledrejection":
      Ot = pt.onunhandledrejection, pt.onunhandledrejection = function(e5) {
        return _t("unhandledrejection", e5), !(Ot && !Ot.__SENTRY_LOADER__) || Ot.apply(this, arguments);
      }, pt.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;
      break;
    default:
      return void (("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && ze.warn("unknown instrumentation type:", e4));
  }
}
function yt(e4, t2) {
  vt[e4] = vt[e4] || [], vt[e4].push(t2), mt(e4);
}
function _t(e4, t2) {
  if (e4 && vt[e4]) for (const n2 of vt[e4] || []) try {
    n2(t2);
  } catch (t3) {
    ("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && ze.error(`Error while triggering instrumentation handler.
Type: ${e4}
Name: ${ct(n2)}
Error:`, t3);
  }
}
function bt(e4, t2) {
  return !!e4 && "object" == typeof e4 && !!e4[t2];
}
function wt(e4) {
  return "string" == typeof e4 ? e4 : e4 ? bt(e4, "url") ? e4.url : e4.toString ? e4.toString() : "" : "";
}
var St;
var kt = 1e3;
var Et;
var Mt;
function Ct(e4, t2 = false) {
  return (n2) => {
    if (!n2 || Mt === n2) return;
    if (function(e5) {
      if ("keypress" !== e5.type) return false;
      try {
        const t3 = e5.target;
        if (!t3 || !t3.tagName) return true;
        if ("INPUT" === t3.tagName || "TEXTAREA" === t3.tagName || t3.isContentEditable) return false;
      } catch (e6) {
      }
      return true;
    }(n2)) return;
    const r2 = "keypress" === n2.type ? "input" : n2.type;
    (void 0 === Et || function(e5, t3) {
      if (!e5) return true;
      if (e5.type !== t3.type) return true;
      try {
        if (e5.target !== t3.target) return true;
      } catch (e6) {
      }
      return false;
    }(Mt, n2)) && (e4({ event: n2, name: r2, global: t2 }), Mt = n2), clearTimeout(Et), Et = pt.setTimeout(() => {
      Et = void 0;
    }, kt);
  };
}
var Tt = null;
var Ot = null;
function jt() {
  const e4 = Ie, t2 = e4.crypto || e4.msCrypto;
  if (t2 && t2.randomUUID) return t2.randomUUID().replace(/-/g, "");
  const n2 = t2 && t2.getRandomValues ? () => t2.getRandomValues(new Uint8Array(1))[0] : () => 16 * Math.random();
  return ("10000000100040008000" + 1e11).replace(/[018]/g, (e5) => (e5 ^ (15 & n2()) >> e5 / 4).toString(16));
}
function Pt(e4) {
  return e4.exception && e4.exception.values ? e4.exception.values[0] : void 0;
}
function xt(e4) {
  const { message: t2, event_id: n2 } = e4;
  if (t2) return t2;
  const r2 = Pt(e4);
  return r2 ? r2.type && r2.value ? `${r2.type}: ${r2.value}` : r2.type || r2.value || n2 || "<unknown>" : n2 || "<unknown>";
}
function At(e4, t2, n2) {
  const r2 = e4.exception = e4.exception || {}, i2 = r2.values = r2.values || [], o2 = i2[0] = i2[0] || {};
  o2.value || (o2.value = t2 || ""), o2.type || (o2.type = n2 || "Error");
}
function Dt(e4, t2) {
  const n2 = Pt(e4);
  if (!n2) return;
  const r2 = n2.mechanism;
  if (n2.mechanism = { type: "generic", handled: true, ...r2, ...t2 }, t2 && "data" in t2) {
    const e5 = { ...r2 && r2.data, ...t2.data };
    n2.mechanism.data = e5;
  }
}
function Lt(e4) {
  if (e4 && e4.__sentry_captured__) return true;
  try {
    Ze(e4, "__sentry_captured__", true);
  } catch (e5) {
  }
  return false;
}
function Nt(e4, t2 = 100, n2 = 1 / 0) {
  try {
    return Rt("", e4, t2, n2);
  } catch (e5) {
    return { ERROR: `**non-serializable** (${e5})` };
  }
}
function It(e4, t2 = 3, n2 = 102400) {
  const r2 = Nt(e4, t2);
  return i2 = r2, function(e5) {
    return ~-encodeURI(e5).split(/%..|./).length;
  }(JSON.stringify(i2)) > n2 ? It(e4, t2 - 1, n2) : r2;
  var i2;
}
function Rt(e4, t2, n2 = 1 / 0, r2 = 1 / 0, i2 = /* @__PURE__ */ function() {
  const e5 = "function" == typeof WeakSet, t3 = e5 ? /* @__PURE__ */ new WeakSet() : [];
  return [function(n3) {
    if (e5) return !!t3.has(n3) || (t3.add(n3), false);
    for (let e6 = 0; e6 < t3.length; e6++) if (t3[e6] === n3) return true;
    return t3.push(n3), false;
  }, function(n3) {
    if (e5) t3.delete(n3);
    else for (let e6 = 0; e6 < t3.length; e6++) if (t3[e6] === n3) {
      t3.splice(e6, 1);
      break;
    }
  }];
}()) {
  const [o2, a2] = i2;
  if (null == t2 || ["number", "boolean", "string"].includes(typeof t2) && ("number" != typeof (s2 = t2) || s2 == s2)) return t2;
  var s2;
  const c2 = function(e5, t3) {
    try {
      if ("domain" === e5 && t3 && "object" == typeof t3 && t3._events) return "[Domain]";
      if ("domainEmitter" === e5) return "[DomainEmitter]";
      if ("undefined" != typeof global && t3 === global) return "[Global]";
      if ("undefined" != typeof window && t3 === window) return "[Window]";
      if ("undefined" != typeof document && t3 === document) return "[Document]";
      if (function(e6) {
        return ke(e6) && "nativeEvent" in e6 && "preventDefault" in e6 && "stopPropagation" in e6;
      }(t3)) return "[SyntheticEvent]";
      if ("number" == typeof t3 && t3 != t3) return "[NaN]";
      if ("function" == typeof t3) return `[Function: ${ct(t3)}]`;
      if ("symbol" == typeof t3) return `[${String(t3)}]`;
      if ("bigint" == typeof t3) return `[BigInt: ${String(t3)}]`;
      const n3 = function(e6) {
        const t4 = Object.getPrototypeOf(e6);
        return t4 ? t4.constructor.name : "null prototype";
      }(t3);
      return /^HTML(\w*)Element$/.test(n3) ? `[HTMLElement: ${n3}]` : `[object ${n3}]`;
    } catch (e6) {
      return `**non-serializable** (${e6})`;
    }
  }(e4, t2);
  if (!c2.startsWith("[object ")) return c2;
  if (t2.__sentry_skip_normalization__) return t2;
  const u2 = "number" == typeof t2.__sentry_override_normalization_depth__ ? t2.__sentry_override_normalization_depth__ : n2;
  if (0 === u2) return c2.replace("object ", "");
  if (o2(t2)) return "[Circular ~]";
  const l2 = t2;
  if (l2 && "function" == typeof l2.toJSON) try {
    return Rt("", l2.toJSON(), u2 - 1, r2, i2);
  } catch (e5) {
  }
  const d2 = Array.isArray(t2) ? [] : {};
  let h2 = 0;
  const p2 = nt(t2);
  for (const e5 in p2) {
    if (!Object.prototype.hasOwnProperty.call(p2, e5)) continue;
    if (h2 >= r2) {
      d2[e5] = "[MaxProperties ~]";
      break;
    }
    const t3 = p2[e5];
    d2[e5] = Rt(e5, t3, u2 - 1, r2, i2), h2++;
  }
  return a2(t2), d2;
}
var Bt;
function Ft(e4) {
  return new Vt((t2) => {
    t2(e4);
  });
}
function Ut(e4) {
  return new Vt((t2, n2) => {
    n2(e4);
  });
}
!function(e4) {
  e4[e4.PENDING = 0] = "PENDING";
  e4[e4.RESOLVED = 1] = "RESOLVED";
  e4[e4.REJECTED = 2] = "REJECTED";
}(Bt || (Bt = {}));
var Vt = class _Vt {
  __init() {
    this._state = Bt.PENDING;
  }
  __init2() {
    this._handlers = [];
  }
  constructor(e4) {
    _Vt.prototype.__init.call(this), _Vt.prototype.__init2.call(this), _Vt.prototype.__init3.call(this), _Vt.prototype.__init4.call(this), _Vt.prototype.__init5.call(this), _Vt.prototype.__init6.call(this);
    try {
      e4(this._resolve, this._reject);
    } catch (e5) {
      this._reject(e5);
    }
  }
  then(e4, t2) {
    return new _Vt((n2, r2) => {
      this._handlers.push([false, (t3) => {
        if (e4) try {
          n2(e4(t3));
        } catch (e5) {
          r2(e5);
        }
        else n2(t3);
      }, (e5) => {
        if (t2) try {
          n2(t2(e5));
        } catch (e6) {
          r2(e6);
        }
        else r2(e5);
      }]), this._executeHandlers();
    });
  }
  catch(e4) {
    return this.then((e5) => e5, e4);
  }
  finally(e4) {
    return new _Vt((t2, n2) => {
      let r2, i2;
      return this.then((t3) => {
        i2 = false, r2 = t3, e4 && e4();
      }, (t3) => {
        i2 = true, r2 = t3, e4 && e4();
      }).then(() => {
        i2 ? n2(r2) : t2(r2);
      });
    });
  }
  __init3() {
    this._resolve = (e4) => {
      this._setResult(Bt.RESOLVED, e4);
    };
  }
  __init4() {
    this._reject = (e4) => {
      this._setResult(Bt.REJECTED, e4);
    };
  }
  __init5() {
    this._setResult = (e4, t2) => {
      this._state === Bt.PENDING && (Me(t2) ? t2.then(this._resolve, this._reject) : (this._state = e4, this._value = t2, this._executeHandlers()));
    };
  }
  __init6() {
    this._executeHandlers = () => {
      if (this._state === Bt.PENDING) return;
      const e4 = this._handlers.slice();
      this._handlers = [], e4.forEach((e5) => {
        e5[0] || (this._state === Bt.RESOLVED && e5[1](this._value), this._state === Bt.REJECTED && e5[2](this._value), e5[0] = true);
      });
    };
  }
};
function $t(e4) {
  const t2 = [];
  function n2(e5) {
    return t2.splice(t2.indexOf(e5), 1)[0];
  }
  return { $: t2, add: function(r2) {
    if (!(void 0 === e4 || t2.length < e4)) return Ut(new Qe("Not adding Promise because buffer limit was reached."));
    const i2 = r2();
    return -1 === t2.indexOf(i2) && t2.push(i2), i2.then(() => n2(i2)).then(null, () => n2(i2).then(null, () => {
    })), i2;
  }, drain: function(e5) {
    return new Vt((n3, r2) => {
      let i2 = t2.length;
      if (!i2) return n3(true);
      const o2 = setTimeout(() => {
        e5 && e5 > 0 && n3(false);
      }, e5);
      t2.forEach((e6) => {
        Ft(e6).then(() => {
          --i2 || (clearTimeout(o2), n3(true));
        }, r2);
      });
    });
  } };
}
function Gt(e4) {
  if (!e4) return {};
  const t2 = e4.match(/^(([^:/?#]+):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$/);
  if (!t2) return {};
  const n2 = t2[6] || "", r2 = t2[8] || "";
  return { host: t2[4], path: t2[5], protocol: t2[2], search: n2, hash: r2, relative: t2[5] + n2 + r2 };
}
var qt = ["fatal", "error", "warning", "log", "info", "debug"];
var Yt = Re();
var zt = { nowSeconds: () => Date.now() / 1e3 };
var Jt = "undefined" != typeof __SENTRY_BROWSER_BUNDLE__ && __SENTRY_BROWSER_BUNDLE__ || "[object process]" !== Object.prototype.toString.call("undefined" != typeof process ? process : 0) ? function() {
  const { performance: e4 } = Yt;
  if (!e4 || !e4.now) return;
  return { now: () => e4.now(), timeOrigin: Date.now() - e4.now() };
}() : function() {
  try {
    return (e4 = module, t2 = "perf_hooks", e4.require(t2)).performance;
  } catch (e5) {
    return;
  }
  var e4, t2;
}();
var Wt = void 0 === Jt ? zt : { nowSeconds: () => (Jt.timeOrigin + Jt.now()) / 1e3 };
var Ht = zt.nowSeconds.bind(zt);
var Kt = Wt.nowSeconds.bind(Wt);
function Qt(e4, t2 = []) {
  return [e4, t2];
}
function Xt(e4, t2) {
  const [n2, r2] = e4;
  return [n2, [...r2, t2]];
}
function Zt(e4, t2) {
  const n2 = e4[1];
  for (const e5 of n2) {
    if (t2(e5, e5[0].type)) return true;
  }
  return false;
}
function en(e4, t2) {
  return (t2 || new TextEncoder()).encode(e4);
}
function tn(e4, t2) {
  const [n2, r2] = e4;
  let i2 = JSON.stringify(n2);
  function o2(e5) {
    "string" == typeof i2 ? i2 = "string" == typeof e5 ? i2 + e5 : [en(i2, t2), e5] : i2.push("string" == typeof e5 ? en(e5, t2) : e5);
  }
  for (const e5 of r2) {
    const [t3, n3] = e5;
    if (o2(`
${JSON.stringify(t3)}
`), "string" == typeof n3 || n3 instanceof Uint8Array) o2(n3);
    else {
      let e6;
      try {
        e6 = JSON.stringify(n3);
      } catch (t4) {
        e6 = JSON.stringify(Nt(n3));
      }
      o2(e6);
    }
  }
  return "string" == typeof i2 ? i2 : function(e5) {
    const t3 = e5.reduce((e6, t4) => e6 + t4.length, 0), n3 = new Uint8Array(t3);
    let r3 = 0;
    for (const t4 of e5) n3.set(t4, r3), r3 += t4.length;
    return n3;
  }(i2);
}
function nn(e4, t2) {
  const n2 = "string" == typeof e4.data ? en(e4.data, t2) : e4.data;
  return [ot({ type: "attachment", length: n2.length, filename: e4.filename, content_type: e4.contentType, attachment_type: e4.attachmentType }), n2];
}
(() => {
  const { performance: e4 } = Yt;
  if (!e4 || !e4.now) return;
  const t2 = 36e5, n2 = e4.now(), r2 = Date.now(), i2 = e4.timeOrigin ? Math.abs(e4.timeOrigin + n2 - r2) : t2, o2 = i2 < t2, a2 = e4.timing && e4.timing.navigationStart, s2 = "number" == typeof a2 ? Math.abs(a2 + n2 - r2) : t2;
  (o2 || s2 < t2) && (i2 <= s2 && e4.timeOrigin);
})();
var rn = { session: "session", sessions: "session", attachment: "attachment", transaction: "transaction", event: "error", client_report: "internal", user_report: "default", profile: "profile", replay_event: "replay", replay_recording: "replay", check_in: "monitor" };
function on(e4) {
  return rn[e4];
}
function an(e4) {
  if (!e4 || !e4.sdk) return;
  const { name: t2, version: n2 } = e4.sdk;
  return { name: t2, version: n2 };
}
var sn = 6e4;
function cn(e4, { statusCode: t2, headers: n2 }, r2 = Date.now()) {
  const i2 = { ...e4 }, o2 = n2 && n2["x-sentry-rate-limits"], a2 = n2 && n2["retry-after"];
  if (o2) for (const e5 of o2.trim().split(",")) {
    const [t3, n3] = e5.split(":", 2), o3 = parseInt(t3, 10), a3 = 1e3 * (isNaN(o3) ? 60 : o3);
    if (n3) for (const e6 of n3.split(";")) i2[e6] = r2 + a3;
    else i2.all = r2 + a3;
  }
  else a2 ? i2.all = r2 + function(e5, t3 = Date.now()) {
    const n3 = parseInt(`${e5}`, 10);
    if (!isNaN(n3)) return 1e3 * n3;
    const r3 = Date.parse(`${e5}`);
    return isNaN(r3) ? sn : r3 - t3;
  }(a2, r2) : 429 === t2 && (i2.all = r2 + 6e4);
  return i2;
}
var un = "production";
function ln(e4) {
  const t2 = Kt(), n2 = { sid: jt(), init: true, timestamp: t2, started: t2, duration: 0, status: "ok", errors: 0, ignoreDuration: false, toJSON: () => function(e5) {
    return ot({ sid: `${e5.sid}`, init: e5.init, started: new Date(1e3 * e5.started).toISOString(), timestamp: new Date(1e3 * e5.timestamp).toISOString(), status: e5.status, errors: e5.errors, did: "number" == typeof e5.did || "string" == typeof e5.did ? `${e5.did}` : void 0, duration: e5.duration, attrs: { release: e5.release, environment: e5.environment, ip_address: e5.ipAddress, user_agent: e5.userAgent } });
  }(n2) };
  return e4 && dn(n2, e4), n2;
}
function dn(e4, t2 = {}) {
  if (t2.user && (!e4.ipAddress && t2.user.ip_address && (e4.ipAddress = t2.user.ip_address), e4.did || t2.did || (e4.did = t2.user.id || t2.user.email || t2.user.username)), e4.timestamp = t2.timestamp || Kt(), t2.ignoreDuration && (e4.ignoreDuration = t2.ignoreDuration), t2.sid && (e4.sid = 32 === t2.sid.length ? t2.sid : jt()), void 0 !== t2.init && (e4.init = t2.init), !e4.did && t2.did && (e4.did = `${t2.did}`), "number" == typeof t2.started && (e4.started = t2.started), e4.ignoreDuration) e4.duration = void 0;
  else if ("number" == typeof t2.duration) e4.duration = t2.duration;
  else {
    const t3 = e4.timestamp - e4.started;
    e4.duration = t3 >= 0 ? t3 : 0;
  }
  t2.release && (e4.release = t2.release), t2.environment && (e4.environment = t2.environment), !e4.ipAddress && t2.ipAddress && (e4.ipAddress = t2.ipAddress), !e4.userAgent && t2.userAgent && (e4.userAgent = t2.userAgent), "number" == typeof t2.errors && (e4.errors = t2.errors), t2.status && (e4.status = t2.status);
}
var hn = class _hn {
  constructor() {
    this._notifyingListeners = false, this._scopeListeners = [], this._eventProcessors = [], this._breadcrumbs = [], this._attachments = [], this._user = {}, this._tags = {}, this._extra = {}, this._contexts = {}, this._sdkProcessingMetadata = {}, this._propagationContext = vn();
  }
  static clone(e4) {
    const t2 = new _hn();
    return e4 && (t2._breadcrumbs = [...e4._breadcrumbs], t2._tags = { ...e4._tags }, t2._extra = { ...e4._extra }, t2._contexts = { ...e4._contexts }, t2._user = e4._user, t2._level = e4._level, t2._span = e4._span, t2._session = e4._session, t2._transactionName = e4._transactionName, t2._fingerprint = e4._fingerprint, t2._eventProcessors = [...e4._eventProcessors], t2._requestSession = e4._requestSession, t2._attachments = [...e4._attachments], t2._sdkProcessingMetadata = { ...e4._sdkProcessingMetadata }, t2._propagationContext = { ...e4._propagationContext }), t2;
  }
  addScopeListener(e4) {
    this._scopeListeners.push(e4);
  }
  addEventProcessor(e4) {
    return this._eventProcessors.push(e4), this;
  }
  setUser(e4) {
    return this._user = e4 || {}, this._session && dn(this._session, { user: e4 }), this._notifyScopeListeners(), this;
  }
  getUser() {
    return this._user;
  }
  getRequestSession() {
    return this._requestSession;
  }
  setRequestSession(e4) {
    return this._requestSession = e4, this;
  }
  setTags(e4) {
    return this._tags = { ...this._tags, ...e4 }, this._notifyScopeListeners(), this;
  }
  setTag(e4, t2) {
    return this._tags = { ...this._tags, [e4]: t2 }, this._notifyScopeListeners(), this;
  }
  setExtras(e4) {
    return this._extra = { ...this._extra, ...e4 }, this._notifyScopeListeners(), this;
  }
  setExtra(e4, t2) {
    return this._extra = { ...this._extra, [e4]: t2 }, this._notifyScopeListeners(), this;
  }
  setFingerprint(e4) {
    return this._fingerprint = e4, this._notifyScopeListeners(), this;
  }
  setLevel(e4) {
    return this._level = e4, this._notifyScopeListeners(), this;
  }
  setTransactionName(e4) {
    return this._transactionName = e4, this._notifyScopeListeners(), this;
  }
  setContext(e4, t2) {
    return null === t2 ? delete this._contexts[e4] : this._contexts[e4] = t2, this._notifyScopeListeners(), this;
  }
  setSpan(e4) {
    return this._span = e4, this._notifyScopeListeners(), this;
  }
  getSpan() {
    return this._span;
  }
  getTransaction() {
    const e4 = this.getSpan();
    return e4 && e4.transaction;
  }
  setSession(e4) {
    return e4 ? this._session = e4 : delete this._session, this._notifyScopeListeners(), this;
  }
  getSession() {
    return this._session;
  }
  update(e4) {
    if (!e4) return this;
    if ("function" == typeof e4) {
      const t2 = e4(this);
      return t2 instanceof _hn ? t2 : this;
    }
    return e4 instanceof _hn ? (this._tags = { ...this._tags, ...e4._tags }, this._extra = { ...this._extra, ...e4._extra }, this._contexts = { ...this._contexts, ...e4._contexts }, e4._user && Object.keys(e4._user).length && (this._user = e4._user), e4._level && (this._level = e4._level), e4._fingerprint && (this._fingerprint = e4._fingerprint), e4._requestSession && (this._requestSession = e4._requestSession), e4._propagationContext && (this._propagationContext = e4._propagationContext)) : ke(e4) && (this._tags = { ...this._tags, ...e4.tags }, this._extra = { ...this._extra, ...e4.extra }, this._contexts = { ...this._contexts, ...e4.contexts }, e4.user && (this._user = e4.user), e4.level && (this._level = e4.level), e4.fingerprint && (this._fingerprint = e4.fingerprint), e4.requestSession && (this._requestSession = e4.requestSession), e4.propagationContext && (this._propagationContext = e4.propagationContext)), this;
  }
  clear() {
    return this._breadcrumbs = [], this._tags = {}, this._extra = {}, this._user = {}, this._contexts = {}, this._level = void 0, this._transactionName = void 0, this._fingerprint = void 0, this._requestSession = void 0, this._span = void 0, this._session = void 0, this._notifyScopeListeners(), this._attachments = [], this._propagationContext = vn(), this;
  }
  addBreadcrumb(e4, t2) {
    const n2 = "number" == typeof t2 ? t2 : 100;
    if (n2 <= 0) return this;
    const r2 = { timestamp: Ht(), ...e4 };
    return this._breadcrumbs = [...this._breadcrumbs, r2].slice(-n2), this._notifyScopeListeners(), this;
  }
  getLastBreadcrumb() {
    return this._breadcrumbs[this._breadcrumbs.length - 1];
  }
  clearBreadcrumbs() {
    return this._breadcrumbs = [], this._notifyScopeListeners(), this;
  }
  addAttachment(e4) {
    return this._attachments.push(e4), this;
  }
  getAttachments() {
    return this._attachments;
  }
  clearAttachments() {
    return this._attachments = [], this;
  }
  applyToEvent(e4, t2 = {}) {
    if (this._extra && Object.keys(this._extra).length && (e4.extra = { ...this._extra, ...e4.extra }), this._tags && Object.keys(this._tags).length && (e4.tags = { ...this._tags, ...e4.tags }), this._user && Object.keys(this._user).length && (e4.user = { ...this._user, ...e4.user }), this._contexts && Object.keys(this._contexts).length && (e4.contexts = { ...this._contexts, ...e4.contexts }), this._level && (e4.level = this._level), this._transactionName && (e4.transaction = this._transactionName), this._span) {
      e4.contexts = { trace: this._span.getTraceContext(), ...e4.contexts };
      const t3 = this._span.transaction;
      if (t3) {
        e4.sdkProcessingMetadata = { dynamicSamplingContext: t3.getDynamicSamplingContext(), ...e4.sdkProcessingMetadata };
        const n2 = t3.name;
        n2 && (e4.tags = { transaction: n2, ...e4.tags });
      }
    }
    return this._applyFingerprint(e4), e4.breadcrumbs = [...e4.breadcrumbs || [], ...this._breadcrumbs], e4.breadcrumbs = e4.breadcrumbs.length > 0 ? e4.breadcrumbs : void 0, e4.sdkProcessingMetadata = { ...e4.sdkProcessingMetadata, ...this._sdkProcessingMetadata, propagationContext: this._propagationContext }, this._notifyEventProcessors([...pn(), ...this._eventProcessors], e4, t2);
  }
  setSDKProcessingMetadata(e4) {
    return this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...e4 }, this;
  }
  setPropagationContext(e4) {
    return this._propagationContext = e4, this;
  }
  getPropagationContext() {
    return this._propagationContext;
  }
  _notifyEventProcessors(e4, t2, n2, r2 = 0) {
    return new Vt((i2, o2) => {
      const a2 = e4[r2];
      if (null === t2 || "function" != typeof a2) i2(t2);
      else {
        const s2 = a2({ ...t2 }, n2);
        ("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && a2.id && null === s2 && ze.log(`Event processor "${a2.id}" dropped event`), Me(s2) ? s2.then((t3) => this._notifyEventProcessors(e4, t3, n2, r2 + 1).then(i2)).then(null, o2) : this._notifyEventProcessors(e4, s2, n2, r2 + 1).then(i2).then(null, o2);
      }
    });
  }
  _notifyScopeListeners() {
    this._notifyingListeners || (this._notifyingListeners = true, this._scopeListeners.forEach((e4) => {
      e4(this);
    }), this._notifyingListeners = false);
  }
  _applyFingerprint(e4) {
    var t2;
    e4.fingerprint = e4.fingerprint ? (t2 = e4.fingerprint, Array.isArray(t2) ? t2 : [t2]) : [], this._fingerprint && (e4.fingerprint = e4.fingerprint.concat(this._fingerprint)), e4.fingerprint && !e4.fingerprint.length && delete e4.fingerprint;
  }
};
function pn() {
  return Be("globalEventProcessors", () => []);
}
function fn(e4) {
  pn().push(e4);
}
function vn() {
  return { traceId: jt(), spanId: jt().substring(16), sampled: false };
}
var gn = 4;
var mn = 100;
var yn = class {
  constructor(e4, t2 = new hn(), n2 = gn) {
    this._version = n2, this._stack = [{ scope: t2 }], e4 && this.bindClient(e4);
  }
  isOlderThan(e4) {
    return this._version < e4;
  }
  bindClient(e4) {
    this.getStackTop().client = e4, e4 && e4.setupIntegrations && e4.setupIntegrations();
  }
  pushScope() {
    const e4 = hn.clone(this.getScope());
    return this.getStack().push({ client: this.getClient(), scope: e4 }), e4;
  }
  popScope() {
    return !(this.getStack().length <= 1) && !!this.getStack().pop();
  }
  withScope(e4) {
    const t2 = this.pushScope();
    try {
      e4(t2);
    } finally {
      this.popScope();
    }
  }
  getClient() {
    return this.getStackTop().client;
  }
  getScope() {
    return this.getStackTop().scope;
  }
  getStack() {
    return this._stack;
  }
  getStackTop() {
    return this._stack[this._stack.length - 1];
  }
  captureException(e4, t2) {
    const n2 = this._lastEventId = t2 && t2.event_id ? t2.event_id : jt(), r2 = new Error("Sentry syntheticException");
    return this._withClient((i2, o2) => {
      i2.captureException(e4, { originalException: e4, syntheticException: r2, ...t2, event_id: n2 }, o2);
    }), n2;
  }
  captureMessage(e4, t2, n2) {
    const r2 = this._lastEventId = n2 && n2.event_id ? n2.event_id : jt(), i2 = new Error(e4);
    return this._withClient((o2, a2) => {
      o2.captureMessage(e4, t2, { originalException: e4, syntheticException: i2, ...n2, event_id: r2 }, a2);
    }), r2;
  }
  captureEvent(e4, t2) {
    const n2 = t2 && t2.event_id ? t2.event_id : jt();
    return e4.type || (this._lastEventId = n2), this._withClient((r2, i2) => {
      r2.captureEvent(e4, { ...t2, event_id: n2 }, i2);
    }), n2;
  }
  lastEventId() {
    return this._lastEventId;
  }
  addBreadcrumb(e4, t2) {
    const { scope: n2, client: r2 } = this.getStackTop();
    if (!r2) return;
    const { beforeBreadcrumb: i2 = null, maxBreadcrumbs: o2 = mn } = r2.getOptions && r2.getOptions() || {};
    if (o2 <= 0) return;
    const a2 = { timestamp: Ht(), ...e4 }, s2 = i2 ? qe(() => i2(a2, t2)) : a2;
    null !== s2 && (r2.emit && r2.emit("beforeAddBreadcrumb", s2, t2), n2.addBreadcrumb(s2, o2));
  }
  setUser(e4) {
    this.getScope().setUser(e4);
  }
  setTags(e4) {
    this.getScope().setTags(e4);
  }
  setExtras(e4) {
    this.getScope().setExtras(e4);
  }
  setTag(e4, t2) {
    this.getScope().setTag(e4, t2);
  }
  setExtra(e4, t2) {
    this.getScope().setExtra(e4, t2);
  }
  setContext(e4, t2) {
    this.getScope().setContext(e4, t2);
  }
  configureScope(e4) {
    const { scope: t2, client: n2 } = this.getStackTop();
    n2 && e4(t2);
  }
  run(e4) {
    const t2 = bn(this);
    try {
      e4(this);
    } finally {
      bn(t2);
    }
  }
  getIntegration(e4) {
    const t2 = this.getClient();
    if (!t2) return null;
    try {
      return t2.getIntegration(e4);
    } catch (t3) {
      return ("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && ze.warn(`Cannot retrieve integration ${e4.id} from the current Hub`), null;
    }
  }
  startTransaction(e4, t2) {
    const n2 = this._callExtensionMethod("startTransaction", e4, t2);
    return "undefined" != typeof __SENTRY_DEBUG__ && !__SENTRY_DEBUG__ || n2 || console.warn("Tracing extension 'startTransaction' has not been added. Call 'addTracingExtensions' before calling 'init':\nSentry.addTracingExtensions();\nSentry.init({...});\n"), n2;
  }
  traceHeaders() {
    return this._callExtensionMethod("traceHeaders");
  }
  captureSession(e4 = false) {
    if (e4) return this.endSession();
    this._sendSessionUpdate();
  }
  endSession() {
    const e4 = this.getStackTop().scope, t2 = e4.getSession();
    t2 && function(e5, t3) {
      let n2 = {};
      t3 ? n2 = { status: t3 } : "ok" === e5.status && (n2 = { status: "exited" }), dn(e5, n2);
    }(t2), this._sendSessionUpdate(), e4.setSession();
  }
  startSession(e4) {
    const { scope: t2, client: n2 } = this.getStackTop(), { release: r2, environment: i2 = un } = n2 && n2.getOptions() || {}, { userAgent: o2 } = Ie.navigator || {}, a2 = ln({ release: r2, environment: i2, user: t2.getUser(), ...o2 && { userAgent: o2 }, ...e4 }), s2 = t2.getSession && t2.getSession();
    return s2 && "ok" === s2.status && dn(s2, { status: "exited" }), this.endSession(), t2.setSession(a2), a2;
  }
  shouldSendDefaultPii() {
    const e4 = this.getClient(), t2 = e4 && e4.getOptions();
    return Boolean(t2 && t2.sendDefaultPii);
  }
  _sendSessionUpdate() {
    const { scope: e4, client: t2 } = this.getStackTop(), n2 = e4.getSession();
    n2 && t2 && t2.captureSession && t2.captureSession(n2);
  }
  _withClient(e4) {
    const { scope: t2, client: n2 } = this.getStackTop();
    n2 && e4(n2, t2);
  }
  _callExtensionMethod(e4, ...t2) {
    const n2 = _n().__SENTRY__;
    if (n2 && n2.extensions && "function" == typeof n2.extensions[e4]) return n2.extensions[e4].apply(this, t2);
    ("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && ze.warn(`Extension method ${e4} couldn't be found, doing nothing.`);
  }
};
function _n() {
  return Ie.__SENTRY__ = Ie.__SENTRY__ || { extensions: {}, hub: void 0 }, Ie;
}
function bn(e4) {
  const t2 = _n(), n2 = Sn(t2);
  return kn(t2, e4), n2;
}
function wn() {
  const e4 = _n();
  if (e4.__SENTRY__ && e4.__SENTRY__.acs) {
    const t2 = e4.__SENTRY__.acs.getCurrentHub();
    if (t2) return t2;
  }
  return function(e5 = _n()) {
    t2 = e5, t2 && t2.__SENTRY__ && t2.__SENTRY__.hub && !Sn(e5).isOlderThan(gn) || kn(e5, new yn());
    var t2;
    return Sn(e5);
  }(e4);
}
function Sn(e4) {
  return Be("hub", () => new yn(), e4);
}
function kn(e4, t2) {
  if (!e4) return false;
  return (e4.__SENTRY__ = e4.__SENTRY__ || {}).hub = t2, true;
}
var En = "7";
function Mn(e4, t2) {
  return n2 = { sentry_key: e4.publicKey, sentry_version: En, ...t2 && { sentry_client: `${t2.name}/${t2.version}` } }, Object.keys(n2).map((e5) => `${encodeURIComponent(e5)}=${encodeURIComponent(n2[e5])}`).join("&");
  var n2;
}
function Cn(e4, t2, n2, r2) {
  const i2 = an(n2), o2 = e4.type && "replay_event" !== e4.type ? e4.type : "event";
  !function(e5, t3) {
    t3 && (e5.sdk = e5.sdk || {}, e5.sdk.name = e5.sdk.name || t3.name, e5.sdk.version = e5.sdk.version || t3.version, e5.sdk.integrations = [...e5.sdk.integrations || [], ...t3.integrations || []], e5.sdk.packages = [...e5.sdk.packages || [], ...t3.packages || []]);
  }(e4, n2 && n2.sdk);
  const a2 = function(e5, t3, n3, r3) {
    const i3 = e5.sdkProcessingMetadata && e5.sdkProcessingMetadata.dynamicSamplingContext;
    return { event_id: e5.event_id, sent_at: (/* @__PURE__ */ new Date()).toISOString(), ...t3 && { sdk: t3 }, ...!!n3 && { dsn: We(r3) }, ...i3 && { trace: ot({ ...i3 }) } };
  }(e4, i2, r2, t2);
  delete e4.sdkProcessingMetadata;
  return Qt(a2, [[{ type: o2 }, e4]]);
}
var Tn = [];
function On(e4, t2) {
  t2[e4.name] = e4, -1 === Tn.indexOf(e4.name) && (e4.setupOnce(fn, wn), Tn.push(e4.name), ("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && ze.log(`Integration installed: ${e4.name}`));
}
function jn(e4, t2, n2, r2) {
  const { normalizeDepth: i2 = 3, normalizeMaxBreadth: o2 = 1e3 } = e4, a2 = { ...t2, event_id: t2.event_id || n2.event_id || jt(), timestamp: t2.timestamp || Ht() }, s2 = n2.integrations || e4.integrations.map((e5) => e5.name);
  !function(e5, t3) {
    const { environment: n3, release: r3, dist: i3, maxValueLength: o3 = 250 } = t3;
    "environment" in e5 || (e5.environment = "environment" in t3 ? n3 : un);
    void 0 === e5.release && void 0 !== r3 && (e5.release = r3);
    void 0 === e5.dist && void 0 !== i3 && (e5.dist = i3);
    e5.message && (e5.message = Te(e5.message, o3));
    const a3 = e5.exception && e5.exception.values && e5.exception.values[0];
    a3 && a3.value && (a3.value = Te(a3.value, o3));
    const s3 = e5.request;
    s3 && s3.url && (s3.url = Te(s3.url, o3));
  }(a2, e4), function(e5, t3) {
    t3.length > 0 && (e5.sdk = e5.sdk || {}, e5.sdk.integrations = [...e5.sdk.integrations || [], ...t3]);
  }(a2, s2), void 0 === t2.type && function(e5, t3) {
    const n3 = Ie._sentryDebugIds;
    if (!n3) return;
    let r3;
    const i3 = Pn.get(t3);
    i3 ? r3 = i3 : (r3 = /* @__PURE__ */ new Map(), Pn.set(t3, r3));
    const o3 = Object.keys(n3).reduce((e6, i4) => {
      let o4;
      const a3 = r3.get(i4);
      a3 ? o4 = a3 : (o4 = t3(i4), r3.set(i4, o4));
      for (let t4 = o4.length - 1; t4 >= 0; t4--) {
        const r4 = o4[t4];
        if (r4.filename) {
          e6[r4.filename] = n3[i4];
          break;
        }
      }
      return e6;
    }, {});
    try {
      e5.exception.values.forEach((e6) => {
        e6.stacktrace.frames.forEach((e7) => {
          e7.filename && (e7.debug_id = o3[e7.filename]);
        });
      });
    } catch (e6) {
    }
  }(a2, e4.stackParser);
  let c2 = r2;
  n2.captureContext && (c2 = hn.clone(c2).update(n2.captureContext));
  let u2 = Ft(a2);
  if (c2) {
    if (c2.getAttachments) {
      const e5 = [...n2.attachments || [], ...c2.getAttachments()];
      e5.length && (n2.attachments = e5);
    }
    u2 = c2.applyToEvent(a2, n2);
  }
  return u2.then((e5) => (e5 && function(e6) {
    const t3 = {};
    try {
      e6.exception.values.forEach((e7) => {
        e7.stacktrace.frames.forEach((e8) => {
          e8.debug_id && (e8.abs_path ? t3[e8.abs_path] = e8.debug_id : e8.filename && (t3[e8.filename] = e8.debug_id), delete e8.debug_id);
        });
      });
    } catch (e7) {
    }
    if (0 === Object.keys(t3).length) return;
    e6.debug_meta = e6.debug_meta || {}, e6.debug_meta.images = e6.debug_meta.images || [];
    const n3 = e6.debug_meta.images;
    Object.keys(t3).forEach((e7) => {
      n3.push({ type: "sourcemap", code_file: e7, debug_id: t3[e7] });
    });
  }(e5), "number" == typeof i2 && i2 > 0 ? function(e6, t3, n3) {
    if (!e6) return null;
    const r3 = { ...e6, ...e6.breadcrumbs && { breadcrumbs: e6.breadcrumbs.map((e7) => ({ ...e7, ...e7.data && { data: Nt(e7.data, t3, n3) } })) }, ...e6.user && { user: Nt(e6.user, t3, n3) }, ...e6.contexts && { contexts: Nt(e6.contexts, t3, n3) }, ...e6.extra && { extra: Nt(e6.extra, t3, n3) } };
    e6.contexts && e6.contexts.trace && r3.contexts && (r3.contexts.trace = e6.contexts.trace, e6.contexts.trace.data && (r3.contexts.trace.data = Nt(e6.contexts.trace.data, t3, n3)));
    e6.spans && (r3.spans = e6.spans.map((e7) => (e7.data && (e7.data = Nt(e7.data, t3, n3)), e7)));
    return r3;
  }(e5, i2, o2) : e5));
}
var Pn = /* @__PURE__ */ new WeakMap();
var xn = "Not capturing exception because it's already been captured.";
var An = class _An {
  __init() {
    this._integrations = {};
  }
  __init2() {
    this._integrationsInitialized = false;
  }
  __init3() {
    this._numProcessing = 0;
  }
  __init4() {
    this._outcomes = {};
  }
  __init5() {
    this._hooks = {};
  }
  constructor(e4) {
    if (_An.prototype.__init.call(this), _An.prototype.__init2.call(this), _An.prototype.__init3.call(this), _An.prototype.__init4.call(this), _An.prototype.__init5.call(this), this._options = e4, e4.dsn ? this._dsn = Ke(e4.dsn) : ("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && ze.warn("No DSN provided, client will not do anything."), this._dsn) {
      const t2 = function(e5, t3 = {}) {
        const n2 = "string" == typeof t3 ? t3 : t3.tunnel, r2 = "string" != typeof t3 && t3._metadata ? t3._metadata.sdk : void 0;
        return n2 || `${function(e6) {
          return `${function(e7) {
            const t4 = e7.protocol ? `${e7.protocol}:` : "", n3 = e7.port ? `:${e7.port}` : "";
            return `${t4}//${e7.host}${n3}${e7.path ? `/${e7.path}` : ""}/api/`;
          }(e6)}${e6.projectId}/envelope/`;
        }(e5)}?${Mn(e5, r2)}`;
      }(this._dsn, e4);
      this._transport = e4.transport({ recordDroppedEvent: this.recordDroppedEvent.bind(this), ...e4.transportOptions, url: t2 });
    }
  }
  captureException(e4, t2, n2) {
    if (Lt(e4)) return void (("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && ze.log(xn));
    let r2 = t2 && t2.event_id;
    return this._process(this.eventFromException(e4, t2).then((e5) => this._captureEvent(e5, t2, n2)).then((e5) => {
      r2 = e5;
    })), r2;
  }
  captureMessage(e4, t2, n2, r2) {
    let i2 = n2 && n2.event_id;
    const o2 = Se(e4) ? this.eventFromMessage(String(e4), t2, n2) : this.eventFromException(e4, n2);
    return this._process(o2.then((e5) => this._captureEvent(e5, n2, r2)).then((e5) => {
      i2 = e5;
    })), i2;
  }
  captureEvent(e4, t2, n2) {
    if (t2 && t2.originalException && Lt(t2.originalException)) return void (("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && ze.log(xn));
    let r2 = t2 && t2.event_id;
    return this._process(this._captureEvent(e4, t2, n2).then((e5) => {
      r2 = e5;
    })), r2;
  }
  captureSession(e4) {
    this._isEnabled() ? "string" != typeof e4.release ? ("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && ze.warn("Discarded session because of missing or non-string release") : (this.sendSession(e4), dn(e4, { init: false })) : ("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && ze.warn("SDK not enabled, will not capture session.");
  }
  getDsn() {
    return this._dsn;
  }
  getOptions() {
    return this._options;
  }
  getSdkMetadata() {
    return this._options._metadata;
  }
  getTransport() {
    return this._transport;
  }
  flush(e4) {
    const t2 = this._transport;
    return t2 ? this._isClientDoneProcessing(e4).then((n2) => t2.flush(e4).then((e5) => n2 && e5)) : Ft(true);
  }
  close(e4) {
    return this.flush(e4).then((e5) => (this.getOptions().enabled = false, e5));
  }
  setupIntegrations() {
    this._isEnabled() && !this._integrationsInitialized && (this._integrations = function(e4) {
      const t2 = {};
      return e4.forEach((e5) => {
        e5 && On(e5, t2);
      }), t2;
    }(this._options.integrations), this._integrationsInitialized = true);
  }
  getIntegrationById(e4) {
    return this._integrations[e4];
  }
  getIntegration(e4) {
    try {
      return this._integrations[e4.id] || null;
    } catch (t2) {
      return ("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && ze.warn(`Cannot retrieve integration ${e4.id} from the current Client`), null;
    }
  }
  addIntegration(e4) {
    On(e4, this._integrations);
  }
  sendEvent(e4, t2 = {}) {
    if (this._dsn) {
      let n2 = Cn(e4, this._dsn, this._options._metadata, this._options.tunnel);
      for (const e5 of t2.attachments || []) n2 = Xt(n2, nn(e5, this._options.transportOptions && this._options.transportOptions.textEncoder));
      const r2 = this._sendEnvelope(n2);
      r2 && r2.then((t3) => this.emit("afterSendEvent", e4, t3), null);
    }
  }
  sendSession(e4) {
    if (this._dsn) {
      const t2 = function(e5, t3, n2, r2) {
        const i2 = an(n2);
        return Qt({ sent_at: (/* @__PURE__ */ new Date()).toISOString(), ...i2 && { sdk: i2 }, ...!!r2 && { dsn: We(t3) } }, ["aggregates" in e5 ? [{ type: "sessions" }, e5] : [{ type: "session" }, e5.toJSON()]]);
      }(e4, this._dsn, this._options._metadata, this._options.tunnel);
      this._sendEnvelope(t2);
    }
  }
  recordDroppedEvent(e4, t2, n2) {
    if (this._options.sendClientReports) {
      const n3 = `${e4}:${t2}`;
      ("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && ze.log(`Adding outcome: "${n3}"`), this._outcomes[n3] = this._outcomes[n3] + 1 || 1;
    }
  }
  on(e4, t2) {
    this._hooks[e4] || (this._hooks[e4] = []), this._hooks[e4].push(t2);
  }
  emit(e4, ...t2) {
    this._hooks[e4] && this._hooks[e4].forEach((e5) => e5(...t2));
  }
  _updateSessionFromEvent(e4, t2) {
    let n2 = false, r2 = false;
    const i2 = t2.exception && t2.exception.values;
    if (i2) {
      r2 = true;
      for (const e5 of i2) {
        const t3 = e5.mechanism;
        if (t3 && false === t3.handled) {
          n2 = true;
          break;
        }
      }
    }
    const o2 = "ok" === e4.status;
    (o2 && 0 === e4.errors || o2 && n2) && (dn(e4, { ...n2 && { status: "crashed" }, errors: e4.errors || Number(r2 || n2) }), this.captureSession(e4));
  }
  _isClientDoneProcessing(e4) {
    return new Vt((t2) => {
      let n2 = 0;
      const r2 = setInterval(() => {
        0 == this._numProcessing ? (clearInterval(r2), t2(true)) : (n2 += 1, e4 && n2 >= e4 && (clearInterval(r2), t2(false)));
      }, 1);
    });
  }
  _isEnabled() {
    return false !== this.getOptions().enabled && void 0 !== this._dsn;
  }
  _prepareEvent(e4, t2, n2) {
    const r2 = this.getOptions(), i2 = Object.keys(this._integrations);
    return !t2.integrations && i2.length > 0 && (t2.integrations = i2), jn(r2, e4, t2, n2).then((e5) => {
      if (null === e5) return e5;
      const { propagationContext: t3 } = e5.sdkProcessingMetadata || {};
      if (!(e5.contexts && e5.contexts.trace) && t3) {
        const { traceId: r3, spanId: i3, parentSpanId: o2, dsc: a2 } = t3;
        e5.contexts = { trace: { trace_id: r3, span_id: i3, parent_span_id: o2 }, ...e5.contexts };
        const s2 = a2 || function(e6, t4, n3) {
          const r4 = t4.getOptions(), { publicKey: i4 } = t4.getDsn() || {}, { segment: o3 } = n3 && n3.getUser() || {}, a3 = ot({ environment: r4.environment || un, release: r4.release, user_segment: o3, public_key: i4, trace_id: e6 });
          return t4.emit && t4.emit("createDsc", a3), a3;
        }(r3, this, n2);
        e5.sdkProcessingMetadata = { dynamicSamplingContext: s2, ...e5.sdkProcessingMetadata };
      }
      return e5;
    });
  }
  _captureEvent(e4, t2 = {}, n2) {
    return this._processEvent(e4, t2, n2).then((e5) => e5.event_id, (e5) => {
      if ("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) {
        const t3 = e5;
        "log" === t3.logLevel ? ze.log(t3.message) : ze.warn(t3);
      }
    });
  }
  _processEvent(e4, t2, n2) {
    const r2 = this.getOptions(), { sampleRate: i2 } = r2;
    if (!this._isEnabled()) return Ut(new Qe("SDK not enabled, will not capture event.", "log"));
    const o2 = Ln(e4), a2 = Dn(e4), s2 = e4.type || "error", c2 = `before send for type \`${s2}\``;
    if (a2 && "number" == typeof i2 && Math.random() > i2) return this.recordDroppedEvent("sample_rate", "error", e4), Ut(new Qe(`Discarding event because it's not included in the random sample (sampling rate = ${i2})`, "log"));
    const u2 = "replay_event" === s2 ? "replay" : s2;
    return this._prepareEvent(e4, t2, n2).then((n3) => {
      if (null === n3) throw this.recordDroppedEvent("event_processor", u2, e4), new Qe("An event processor returned `null`, will not send event.", "log");
      if (t2.data && true === t2.data.__sentry__) return n3;
      const i3 = function(e5, t3, n4) {
        const { beforeSend: r3, beforeSendTransaction: i4 } = e5;
        if (Dn(t3) && r3) return r3(t3, n4);
        if (Ln(t3) && i4) return i4(t3, n4);
        return t3;
      }(r2, n3, t2);
      return function(e5, t3) {
        const n4 = `${t3} must return \`null\` or a valid event.`;
        if (Me(e5)) return e5.then((e6) => {
          if (!ke(e6) && null !== e6) throw new Qe(n4);
          return e6;
        }, (e6) => {
          throw new Qe(`${t3} rejected with ${e6}`);
        });
        if (!ke(e5) && null !== e5) throw new Qe(n4);
        return e5;
      }(i3, c2);
    }).then((r3) => {
      if (null === r3) throw this.recordDroppedEvent("before_send", u2, e4), new Qe(`${c2} returned \`null\`, will not send event.`, "log");
      const i3 = n2 && n2.getSession();
      !o2 && i3 && this._updateSessionFromEvent(i3, r3);
      const a3 = r3.transaction_info;
      if (o2 && a3 && r3.transaction !== e4.transaction) {
        const e5 = "custom";
        r3.transaction_info = { ...a3, source: e5 };
      }
      return this.sendEvent(r3, t2), r3;
    }).then(null, (e5) => {
      if (e5 instanceof Qe) throw e5;
      throw this.captureException(e5, { data: { __sentry__: true }, originalException: e5 }), new Qe(`Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.
Reason: ${e5}`);
    });
  }
  _process(e4) {
    this._numProcessing++, e4.then((e5) => (this._numProcessing--, e5), (e5) => (this._numProcessing--, e5));
  }
  _sendEnvelope(e4) {
    if (this._transport && this._dsn) return this.emit("beforeEnvelope", e4), this._transport.send(e4).then(null, (e5) => {
      ("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && ze.error("Error while sending event:", e5);
    });
    ("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && ze.error("Transport disabled");
  }
  _clearOutcomes() {
    const e4 = this._outcomes;
    return this._outcomes = {}, Object.keys(e4).map((t2) => {
      const [n2, r2] = t2.split(":");
      return { reason: n2, category: r2, quantity: e4[t2] };
    });
  }
};
function Dn(e4) {
  return void 0 === e4.type;
}
function Ln(e4) {
  return "transaction" === e4.type;
}
var Nn = 30;
function In(e4, t2, n2 = $t(e4.bufferSize || Nn)) {
  let r2 = {};
  function i2(i3) {
    const o2 = [];
    if (Zt(i3, (t3, n3) => {
      const i4 = on(n3);
      if (function(e5, t4, n4 = Date.now()) {
        return function(e6, t5) {
          return e6[t5] || e6.all || 0;
        }(e5, t4) > n4;
      }(r2, i4)) {
        const r3 = Rn(t3, n3);
        e4.recordDroppedEvent("ratelimit_backoff", i4, r3);
      } else o2.push(t3);
    }), 0 === o2.length) return Ft();
    const a2 = Qt(i3[0], o2), s2 = (t3) => {
      Zt(a2, (n3, r3) => {
        const i4 = Rn(n3, r3);
        e4.recordDroppedEvent(t3, on(r3), i4);
      });
    };
    return n2.add(() => t2({ body: tn(a2, e4.textEncoder) }).then((e5) => (void 0 !== e5.statusCode && (e5.statusCode < 200 || e5.statusCode >= 300) && ("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && ze.warn(`Sentry responded with status code ${e5.statusCode} to sent event.`), r2 = cn(r2, e5), e5), (e5) => {
      throw s2("network_error"), e5;
    })).then((e5) => e5, (e5) => {
      if (e5 instanceof Qe) return ("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && ze.error("Skipped sending event because buffer is full."), s2("queue_overflow"), Ft();
      throw e5;
    });
  }
  return i2.__sentry__baseTransport__ = true, { send: i2, flush: (e5) => n2.drain(e5) };
}
function Rn(e4, t2) {
  if ("event" === t2 || "transaction" === t2) return Array.isArray(e4) ? e4[1] : void 0;
}
var Bn = "7.60.1";
var Fn;
var Un = class _Un {
  constructor() {
    _Un.prototype.__init.call(this);
  }
  static __initStatic() {
    this.id = "FunctionToString";
  }
  __init() {
    this.name = _Un.id;
  }
  setupOnce() {
    Fn = Function.prototype.toString;
    try {
      Function.prototype.toString = function(...e4) {
        const t2 = tt(this) || this;
        return Fn.apply(t2, e4);
      };
    } catch (e4) {
    }
  }
};
Un.__initStatic();
var Vn = [/^Script error\.?$/, /^Javascript error: Script error\.? on line 0$/];
var $n = [/^.*healthcheck.*$/, /^.*healthy.*$/, /^.*live.*$/, /^.*ready.*$/, /^.*heartbeat.*$/, /^.*\/health$/, /^.*\/healthz$/];
var Gn = class _Gn {
  static __initStatic() {
    this.id = "InboundFilters";
  }
  __init() {
    this.name = _Gn.id;
  }
  constructor(e4 = {}) {
    this._options = e4, _Gn.prototype.__init.call(this);
  }
  setupOnce(e4, t2) {
    const n2 = (e5) => {
      const n3 = t2();
      if (n3) {
        const t3 = n3.getIntegration(_Gn);
        if (t3) {
          const r2 = n3.getClient(), i2 = r2 ? r2.getOptions() : {}, o2 = function(e6 = {}, t4 = {}) {
            return { allowUrls: [...e6.allowUrls || [], ...t4.allowUrls || []], denyUrls: [...e6.denyUrls || [], ...t4.denyUrls || []], ignoreErrors: [...e6.ignoreErrors || [], ...t4.ignoreErrors || [], ...e6.disableErrorDefaults ? [] : Vn], ignoreTransactions: [...e6.ignoreTransactions || [], ...t4.ignoreTransactions || [], ...e6.disableTransactionDefaults ? [] : $n], ignoreInternal: void 0 === e6.ignoreInternal || e6.ignoreInternal };
          }(t3._options, i2);
          return function(e6, t4) {
            if (t4.ignoreInternal && function(e7) {
              try {
                return "SentryError" === e7.exception.values[0].type;
              } catch (e8) {
              }
              return false;
            }(e6)) return ("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && ze.warn(`Event dropped due to being internal Sentry Error.
Event: ${xt(e6)}`), true;
            if (function(e7, t5) {
              if (e7.type || !t5 || !t5.length) return false;
              return function(e8) {
                if (e8.message) return [e8.message];
                if (e8.exception) {
                  const { values: t6 } = e8.exception;
                  try {
                    const { type: e9 = "", value: n4 = "" } = t6 && t6[t6.length - 1] || {};
                    return [`${n4}`, `${e9}: ${n4}`];
                  } catch (t7) {
                    return ("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && ze.error(`Cannot extract message for event ${xt(e8)}`), [];
                  }
                }
                return [];
              }(e7).some((e8) => Pe(e8, t5));
            }(e6, t4.ignoreErrors)) return ("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && ze.warn(`Event dropped due to being matched by \`ignoreErrors\` option.
Event: ${xt(e6)}`), true;
            if (function(e7, t5) {
              if ("transaction" !== e7.type || !t5 || !t5.length) return false;
              const n4 = e7.transaction;
              return !!n4 && Pe(n4, t5);
            }(e6, t4.ignoreTransactions)) return ("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && ze.warn(`Event dropped due to being matched by \`ignoreTransactions\` option.
Event: ${xt(e6)}`), true;
            if (function(e7, t5) {
              if (!t5 || !t5.length) return false;
              const n4 = qn(e7);
              return !!n4 && Pe(n4, t5);
            }(e6, t4.denyUrls)) return ("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && ze.warn(`Event dropped due to being matched by \`denyUrls\` option.
Event: ${xt(e6)}.
Url: ${qn(e6)}`), true;
            if (!function(e7, t5) {
              if (!t5 || !t5.length) return true;
              const n4 = qn(e7);
              return !n4 || Pe(n4, t5);
            }(e6, t4.allowUrls)) return ("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && ze.warn(`Event dropped due to not being matched by \`allowUrls\` option.
Event: ${xt(e6)}.
Url: ${qn(e6)}`), true;
            return false;
          }(e5, o2) ? null : e5;
        }
      }
      return e5;
    };
    n2.id = this.name, e4(n2);
  }
};
function qn(e4) {
  try {
    let t2;
    try {
      t2 = e4.exception.values[0].stacktrace.frames;
    } catch (e5) {
    }
    return t2 ? function(e5 = []) {
      for (let t3 = e5.length - 1; t3 >= 0; t3--) {
        const n2 = e5[t3];
        if (n2 && "<anonymous>" !== n2.filename && "[native code]" !== n2.filename) return n2.filename || null;
      }
      return null;
    }(t2) : null;
  } catch (t2) {
    return ("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && ze.error(`Cannot extract url for event ${xt(e4)}`), null;
  }
}
Gn.__initStatic();
var Yn = Object.freeze({ __proto__: null, FunctionToString: Un, InboundFilters: Gn });
var zn = Ie;
var Jn = 0;
function Wn() {
  return Jn > 0;
}
function Hn(e4, t2 = {}, n2) {
  if ("function" != typeof e4) return e4;
  try {
    const t3 = e4.__sentry_wrapped__;
    if (t3) return t3;
    if (tt(e4)) return e4;
  } catch (t3) {
    return e4;
  }
  const r2 = function() {
    const r3 = Array.prototype.slice.call(arguments);
    try {
      n2 && "function" == typeof n2 && n2.apply(this, arguments);
      const i3 = r3.map((e5) => Hn(e5, t2));
      return e4.apply(this, i3);
    } catch (e5) {
      throw Jn++, setTimeout(() => {
        Jn--;
      }), i2 = (n3) => {
        var i3, o2;
        n3.addEventProcessor((e6) => (t2.mechanism && (At(e6, void 0, void 0), Dt(e6, t2.mechanism)), e6.extra = { ...e6.extra, arguments: r3 }, e6)), i3 = e5, wn().captureException(i3, { captureContext: o2 });
      }, wn().withScope(i2), e5;
    }
    var i2;
  };
  try {
    for (const t3 in e4) Object.prototype.hasOwnProperty.call(e4, t3) && (r2[t3] = e4[t3]);
  } catch (e5) {
  }
  et(r2, e4), Ze(e4, "__sentry_wrapped__", r2);
  try {
    Object.getOwnPropertyDescriptor(r2, "name").configurable && Object.defineProperty(r2, "name", { get: () => e4.name });
  } catch (e5) {
  }
  return r2;
}
function Kn(e4, t2) {
  const n2 = Xn(e4, t2), r2 = { type: t2 && t2.name, value: er(t2) };
  return n2.length && (r2.stacktrace = { frames: n2 }), void 0 === r2.type && "" === r2.value && (r2.value = "Unrecoverable error caught"), r2;
}
function Qn(e4, t2) {
  return { exception: { values: [Kn(e4, t2)] } };
}
function Xn(e4, t2) {
  const n2 = t2.stacktrace || t2.stack || "", r2 = function(e5) {
    if (e5) {
      if ("number" == typeof e5.framesToPop) return e5.framesToPop;
      if (Zn.test(e5.message)) return 1;
    }
    return 0;
  }(t2);
  try {
    return e4(n2, r2);
  } catch (e5) {
  }
  return [];
}
var Zn = /Minified React error #\d+;/i;
function er(e4) {
  const t2 = e4 && e4.message;
  return t2 ? t2.error && "string" == typeof t2.error.message ? t2.error.message : t2 : "No error message";
}
function tr(e4, t2, n2, r2, i2) {
  let o2;
  if (_e(t2) && t2.error) {
    return Qn(e4, t2.error);
  }
  if (be(t2) || ye(t2, "DOMException")) {
    const i3 = t2;
    if ("stack" in t2) o2 = Qn(e4, t2);
    else {
      const t3 = i3.name || (be(i3) ? "DOMError" : "DOMException"), a2 = i3.message ? `${t3}: ${i3.message}` : t3;
      o2 = nr(e4, a2, n2, r2), At(o2, a2);
    }
    return "code" in i3 && (o2.tags = { ...o2.tags, "DOMException.code": `${i3.code}` }), o2;
  }
  if (me(t2)) return Qn(e4, t2);
  if (ke(t2) || Ee(t2)) {
    return o2 = function(e5, t3, n3, r3) {
      const i3 = wn().getClient(), o3 = i3 && i3.getOptions().normalizeDepth, a2 = { exception: { values: [{ type: Ee(t3) ? t3.constructor.name : r3 ? "UnhandledRejection" : "Error", value: rr(t3, { isUnhandledRejection: r3 }) }] }, extra: { __serialized__: It(t3, o3) } };
      if (n3) {
        const t4 = Xn(e5, n3);
        t4.length && (a2.exception.values[0].stacktrace = { frames: t4 });
      }
      return a2;
    }(e4, t2, n2, i2), Dt(o2, { synthetic: true }), o2;
  }
  return o2 = nr(e4, t2, n2, r2), At(o2, `${t2}`, void 0), Dt(o2, { synthetic: true }), o2;
}
function nr(e4, t2, n2, r2) {
  const i2 = { message: t2 };
  if (r2 && n2) {
    const r3 = Xn(e4, n2);
    r3.length && (i2.exception = { values: [{ value: t2, stacktrace: { frames: r3 } }] });
  }
  return i2;
}
function rr(e4, { isUnhandledRejection: t2 }) {
  const n2 = function(e5, t3 = 40) {
    const n3 = Object.keys(nt(e5));
    if (n3.sort(), !n3.length) return "[object has no keys]";
    if (n3[0].length >= t3) return Te(n3[0], t3);
    for (let e6 = n3.length; e6 > 0; e6--) {
      const r3 = n3.slice(0, e6).join(", ");
      if (!(r3.length > t3)) return e6 === n3.length ? r3 : Te(r3, t3);
    }
    return "";
  }(e4), r2 = t2 ? "promise rejection" : "exception";
  if (_e(e4)) return `Event \`ErrorEvent\` captured as ${r2} with message \`${e4.message}\``;
  if (Ee(e4)) {
    return `Event \`${function(e5) {
      try {
        const t3 = Object.getPrototypeOf(e5);
        return t3 ? t3.constructor.name : void 0;
      } catch (e6) {
      }
    }(e4)}\` (type=${e4.type}) captured as ${r2}`;
  }
  return `Object captured as ${r2} with keys: ${n2}`;
}
var ir = 1024;
var or = "Breadcrumbs";
var ar = class _ar {
  static __initStatic() {
    this.id = or;
  }
  __init() {
    this.name = _ar.id;
  }
  constructor(e4) {
    _ar.prototype.__init.call(this), this.options = { console: true, dom: true, fetch: true, history: true, sentry: true, xhr: true, ...e4 };
  }
  setupOnce() {
    this.options.console && yt("console", sr), this.options.dom && yt("dom", /* @__PURE__ */ function(e4) {
      function t2(t3) {
        let n2, r2 = "object" == typeof e4 ? e4.serializeAttribute : void 0, i2 = "object" == typeof e4 && "number" == typeof e4.maxStringLength ? e4.maxStringLength : void 0;
        i2 && i2 > ir && (("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && ze.warn(`\`dom.maxStringLength\` cannot exceed 1024, but a value of ${i2} was configured. Sentry will use 1024 instead.`), i2 = ir), "string" == typeof r2 && (r2 = [r2]);
        try {
          const e5 = t3.event;
          n2 = function(e6) {
            return !!e6 && !!e6.target;
          }(e5) ? Ve(e5.target, { keyAttrs: r2, maxStringLength: i2 }) : Ve(e5, { keyAttrs: r2, maxStringLength: i2 });
        } catch (e5) {
          n2 = "<unknown>";
        }
        0 !== n2.length && wn().addBreadcrumb({ category: `ui.${t3.name}`, message: n2 }, { event: t3.event, name: t3.name, global: t3.global });
      }
      return t2;
    }(this.options.dom)), this.options.xhr && yt("xhr", cr), this.options.fetch && yt("fetch", ur), this.options.history && yt("history", lr);
  }
  addSentryBreadcrumb(e4) {
    this.options.sentry && wn().addBreadcrumb({ category: "sentry." + ("transaction" === e4.type ? "transaction" : "event"), event_id: e4.event_id, level: e4.level, message: xt(e4) }, { event: e4 });
  }
};
function sr(e4) {
  for (let t3 = 0; t3 < e4.args.length; t3++) if ("ref=Ref<" === e4.args[t3]) {
    e4.args[t3 + 1] = "viewRef";
    break;
  }
  const t2 = { category: "console", data: { arguments: e4.args, logger: "console" }, level: (n2 = e4.level, "warn" === n2 ? "warning" : qt.includes(n2) ? n2 : "log"), message: Oe(e4.args, " ") };
  var n2;
  if ("assert" === e4.level) {
    if (false !== e4.args[0]) return;
    t2.message = `Assertion failed: ${Oe(e4.args.slice(1), " ") || "console.assert"}`, t2.data.arguments = e4.args.slice(1);
  }
  wn().addBreadcrumb(t2, { input: e4.args, level: e4.level });
}
function cr(e4) {
  const { startTimestamp: t2, endTimestamp: n2 } = e4, r2 = e4.xhr[ft];
  if (!t2 || !n2 || !r2) return;
  const { method: i2, url: o2, status_code: a2, body: s2 } = r2, c2 = { method: i2, url: o2, status_code: a2 }, u2 = { xhr: e4.xhr, input: s2, startTimestamp: t2, endTimestamp: n2 };
  wn().addBreadcrumb({ category: "xhr", data: c2, type: "http" }, u2);
}
function ur(e4) {
  const { startTimestamp: t2, endTimestamp: n2 } = e4;
  if (n2 && (!e4.fetchData.url.match(/sentry_key/) || "POST" !== e4.fetchData.method)) if (e4.error) {
    const r2 = e4.fetchData, i2 = { data: e4.error, input: e4.args, startTimestamp: t2, endTimestamp: n2 };
    wn().addBreadcrumb({ category: "fetch", data: r2, level: "error", type: "http" }, i2);
  } else {
    const r2 = { ...e4.fetchData, status_code: e4.response && e4.response.status }, i2 = { input: e4.args, response: e4.response, startTimestamp: t2, endTimestamp: n2 };
    wn().addBreadcrumb({ category: "fetch", data: r2, type: "http" }, i2);
  }
}
function lr(e4) {
  let t2 = e4.from, n2 = e4.to;
  const r2 = Gt(zn.location.href);
  let i2 = Gt(t2);
  const o2 = Gt(n2);
  i2.path || (i2 = r2), r2.protocol === o2.protocol && r2.host === o2.host && (n2 = o2.relative), r2.protocol === i2.protocol && r2.host === i2.host && (t2 = i2.relative), wn().addBreadcrumb({ category: "navigation", data: { from: t2, to: n2 } });
}
ar.__initStatic();
var dr = class extends An {
  constructor(e4) {
    const t2 = zn.SENTRY_SDK_SOURCE || "npm";
    e4._metadata = e4._metadata || {}, e4._metadata.sdk = e4._metadata.sdk || { name: "sentry.javascript.browser", packages: [{ name: `${t2}:@sentry/browser`, version: Bn }], version: Bn }, super(e4), e4.sendClientReports && zn.document && zn.document.addEventListener("visibilitychange", () => {
      "hidden" === zn.document.visibilityState && this._flushOutcomes();
    });
  }
  eventFromException(e4, t2) {
    return function(e5, t3, n2, r2) {
      const i2 = tr(e5, t3, n2 && n2.syntheticException || void 0, r2);
      return Dt(i2), i2.level = "error", n2 && n2.event_id && (i2.event_id = n2.event_id), Ft(i2);
    }(this._options.stackParser, e4, t2, this._options.attachStacktrace);
  }
  eventFromMessage(e4, t2 = "info", n2) {
    return function(e5, t3, n3 = "info", r2, i2) {
      const o2 = nr(e5, t3, r2 && r2.syntheticException || void 0, i2);
      return o2.level = n3, r2 && r2.event_id && (o2.event_id = r2.event_id), Ft(o2);
    }(this._options.stackParser, e4, t2, n2, this._options.attachStacktrace);
  }
  sendEvent(e4, t2) {
    const n2 = this.getIntegrationById(or);
    n2 && n2.addSentryBreadcrumb && n2.addSentryBreadcrumb(e4), super.sendEvent(e4, t2);
  }
  captureUserFeedback(e4) {
    if (!this._isEnabled()) return void (("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && ze.warn("SDK not enabled, will not capture user feedback."));
    const t2 = function(e5, { metadata: t3, tunnel: n2, dsn: r2 }) {
      const i2 = { event_id: e5.event_id, sent_at: (/* @__PURE__ */ new Date()).toISOString(), ...t3 && t3.sdk && { sdk: { name: t3.sdk.name, version: t3.sdk.version } }, ...!!n2 && !!r2 && { dsn: We(r2) } }, o2 = /* @__PURE__ */ function(e6) {
        return [{ type: "user_report" }, e6];
      }(e5);
      return Qt(i2, [o2]);
    }(e4, { metadata: this.getSdkMetadata(), dsn: this.getDsn(), tunnel: this.getOptions().tunnel });
    this._sendEnvelope(t2);
  }
  _prepareEvent(e4, t2, n2) {
    return e4.platform = e4.platform || "javascript", super._prepareEvent(e4, t2, n2);
  }
  _flushOutcomes() {
    const e4 = this._clearOutcomes();
    if (0 === e4.length) return void (("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && ze.log("No outcomes to send"));
    if (!this._dsn) return void (("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && ze.log("No dsn provided, will not send outcomes"));
    ("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && ze.log("Sending outcomes:", e4);
    const t2 = (n2 = e4, Qt((r2 = this._options.tunnel && We(this._dsn)) ? { dsn: r2 } : {}, [[{ type: "client_report" }, { timestamp: i2 || Ht(), discarded_events: n2 }]]));
    var n2, r2, i2;
    this._sendEnvelope(t2);
  }
};
var hr;
function pr(e4, t2 = function() {
  if (hr) return hr;
  if (lt(zn.fetch)) return hr = zn.fetch.bind(zn);
  const e5 = zn.document;
  let t3 = zn.fetch;
  if (e5 && "function" == typeof e5.createElement) try {
    const n2 = e5.createElement("iframe");
    n2.hidden = true, e5.head.appendChild(n2);
    const r2 = n2.contentWindow;
    r2 && r2.fetch && (t3 = r2.fetch), e5.head.removeChild(n2);
  } catch (e6) {
    ("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && ze.warn("Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ", e6);
  }
  return hr = t3.bind(zn);
}()) {
  let n2 = 0, r2 = 0;
  return In(e4, function(i2) {
    const o2 = i2.body.length;
    n2 += o2, r2++;
    const a2 = { body: i2.body, method: "POST", referrerPolicy: "origin", headers: e4.headers, keepalive: n2 <= 6e4 && r2 < 15, ...e4.fetchOptions };
    try {
      return t2(e4.url, a2).then((e5) => (n2 -= o2, r2--, { statusCode: e5.status, headers: { "x-sentry-rate-limits": e5.headers.get("X-Sentry-Rate-Limits"), "retry-after": e5.headers.get("Retry-After") } }));
    } catch (e5) {
      return hr = void 0, n2 -= o2, r2--, Ut(e5);
    }
  });
}
var fr = class _fr {
  static __initStatic() {
    this.id = "GlobalHandlers";
  }
  __init() {
    this.name = _fr.id;
  }
  __init2() {
    this._installFunc = { onerror: vr, onunhandledrejection: gr };
  }
  constructor(e4) {
    _fr.prototype.__init.call(this), _fr.prototype.__init2.call(this), this._options = { onerror: true, onunhandledrejection: true, ...e4 };
  }
  setupOnce() {
    Error.stackTraceLimit = 50;
    const e4 = this._options;
    for (const n2 in e4) {
      const r2 = this._installFunc[n2];
      r2 && e4[n2] && (t2 = n2, ("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && ze.log(`Global Handler attached: ${t2}`), r2(), this._installFunc[n2] = void 0);
    }
    var t2;
  }
};
function vr() {
  yt("error", (e4) => {
    const [t2, n2, r2] = _r();
    if (!t2.getIntegration(fr)) return;
    const { msg: i2, url: o2, line: a2, column: s2, error: c2 } = e4;
    if (Wn() || c2 && c2.__sentry_own_request__) return;
    const u2 = void 0 === c2 && we(i2) ? function(e5, t3, n3, r3) {
      const i3 = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;
      let o3 = _e(e5) ? e5.message : e5, a3 = "Error";
      const s3 = o3.match(i3);
      s3 && (a3 = s3[1], o3 = s3[2]);
      const c3 = { exception: { values: [{ type: a3, value: o3 }] } };
      return mr(c3, t3, n3, r3);
    }(i2, o2, a2, s2) : mr(tr(n2, c2 || i2, void 0, r2, false), o2, a2, s2);
    u2.level = "error", yr(t2, c2, u2, "onerror");
  });
}
function gr() {
  yt("unhandledrejection", (e4) => {
    const [t2, n2, r2] = _r();
    if (!t2.getIntegration(fr)) return;
    let i2 = e4;
    try {
      "reason" in e4 ? i2 = e4.reason : "detail" in e4 && "reason" in e4.detail && (i2 = e4.detail.reason);
    } catch (e5) {
    }
    if (Wn() || i2 && i2.__sentry_own_request__) return true;
    const o2 = Se(i2) ? { exception: { values: [{ type: "UnhandledRejection", value: `Non-Error promise rejection captured with value: ${String(i2)}` }] } } : tr(n2, i2, void 0, r2, true);
    o2.level = "error", yr(t2, i2, o2, "onunhandledrejection");
  });
}
function mr(e4, t2, n2, r2) {
  const i2 = e4.exception = e4.exception || {}, o2 = i2.values = i2.values || [], a2 = o2[0] = o2[0] || {}, s2 = a2.stacktrace = a2.stacktrace || {}, c2 = s2.frames = s2.frames || [], u2 = isNaN(parseInt(r2, 10)) ? void 0 : r2, l2 = isNaN(parseInt(n2, 10)) ? void 0 : n2, d2 = we(t2) && t2.length > 0 ? t2 : function() {
    try {
      return Fe.document.location.href;
    } catch (e5) {
      return "";
    }
  }();
  return 0 === c2.length && c2.push({ colno: u2, filename: d2, function: "?", in_app: true, lineno: l2 }), e4;
}
function yr(e4, t2, n2, r2) {
  Dt(n2, { handled: false, type: r2 }), e4.captureEvent(n2, { originalException: t2 });
}
function _r() {
  const e4 = wn(), t2 = e4.getClient(), n2 = t2 && t2.getOptions() || { stackParser: () => [], attachStacktrace: false };
  return [e4, n2.stackParser, n2.attachStacktrace];
}
fr.__initStatic();
var br = ["EventTarget", "Window", "Node", "ApplicationCache", "AudioTrackList", "ChannelMergerNode", "CryptoOperation", "EventSource", "FileReader", "HTMLUnknownElement", "IDBDatabase", "IDBRequest", "IDBTransaction", "KeyOperation", "MediaController", "MessagePort", "ModalWindow", "Notification", "SVGElementInstance", "Screen", "TextTrack", "TextTrackCue", "TextTrackList", "WebSocket", "WebSocketWorker", "Worker", "XMLHttpRequest", "XMLHttpRequestEventTarget", "XMLHttpRequestUpload"];
var wr = class _wr {
  static __initStatic() {
    this.id = "TryCatch";
  }
  __init() {
    this.name = _wr.id;
  }
  constructor(e4) {
    _wr.prototype.__init.call(this), this._options = { XMLHttpRequest: true, eventTarget: true, requestAnimationFrame: true, setInterval: true, setTimeout: true, ...e4 };
  }
  setupOnce() {
    this._options.setTimeout && Xe(zn, "setTimeout", Sr), this._options.setInterval && Xe(zn, "setInterval", Sr), this._options.requestAnimationFrame && Xe(zn, "requestAnimationFrame", kr), this._options.XMLHttpRequest && "XMLHttpRequest" in zn && Xe(XMLHttpRequest.prototype, "send", Er);
    const e4 = this._options.eventTarget;
    if (e4) {
      (Array.isArray(e4) ? e4 : br).forEach(Mr);
    }
  }
};
function Sr(e4) {
  return function(...t2) {
    const n2 = t2[0];
    return t2[0] = Hn(n2, { mechanism: { data: { function: ct(e4) }, handled: true, type: "instrument" } }), e4.apply(this, t2);
  };
}
function kr(e4) {
  return function(t2) {
    return e4.apply(this, [Hn(t2, { mechanism: { data: { function: "requestAnimationFrame", handler: ct(e4) }, handled: true, type: "instrument" } })]);
  };
}
function Er(e4) {
  return function(...t2) {
    const n2 = this;
    return ["onload", "onerror", "onprogress", "onreadystatechange"].forEach((e5) => {
      e5 in n2 && "function" == typeof n2[e5] && Xe(n2, e5, function(t3) {
        const n3 = { mechanism: { data: { function: e5, handler: ct(t3) }, handled: true, type: "instrument" } }, r2 = tt(t3);
        return r2 && (n3.mechanism.data.handler = ct(r2)), Hn(t3, n3);
      });
    }), e4.apply(this, t2);
  };
}
function Mr(e4) {
  const t2 = zn, n2 = t2[e4] && t2[e4].prototype;
  n2 && n2.hasOwnProperty && n2.hasOwnProperty("addEventListener") && (Xe(n2, "addEventListener", function(t3) {
    return function(n3, r2, i2) {
      try {
        "function" == typeof r2.handleEvent && (r2.handleEvent = Hn(r2.handleEvent, { mechanism: { data: { function: "handleEvent", handler: ct(r2), target: e4 }, handled: true, type: "instrument" } }));
      } catch (e5) {
      }
      return t3.apply(this, [n3, Hn(r2, { mechanism: { data: { function: "addEventListener", handler: ct(r2), target: e4 }, handled: true, type: "instrument" } }), i2]);
    };
  }), Xe(n2, "removeEventListener", function(e5) {
    return function(t3, n3, r2) {
      const i2 = n3;
      try {
        const n4 = i2 && i2.__sentry_wrapped__;
        n4 && e5.call(this, t3, n4, r2);
      } catch (e6) {
      }
      return e5.call(this, t3, i2, r2);
    };
  }));
}
wr.__initStatic();
var Cr = class _Cr {
  static __initStatic() {
    this.id = "LinkedErrors";
  }
  __init() {
    this.name = _Cr.id;
  }
  constructor(e4 = {}) {
    _Cr.prototype.__init.call(this), this._key = e4.key || "cause", this._limit = e4.limit || 5;
  }
  setupOnce(e4, t2) {
    e4((e5, n2) => {
      const r2 = t2(), i2 = r2.getClient(), o2 = r2.getIntegration(_Cr);
      if (!i2 || !o2) return e5;
      const a2 = i2.getOptions();
      return xe(Kn, a2.stackParser, a2.maxValueLength, o2._key, o2._limit, e5, n2), e5;
    });
  }
};
Cr.__initStatic();
var Tr = class _Tr {
  constructor() {
    _Tr.prototype.__init.call(this);
  }
  static __initStatic() {
    this.id = "HttpContext";
  }
  __init() {
    this.name = _Tr.id;
  }
  setupOnce() {
    fn((e4) => {
      if (wn().getIntegration(_Tr)) {
        if (!zn.navigator && !zn.location && !zn.document) return e4;
        const t2 = e4.request && e4.request.url || zn.location && zn.location.href, { referrer: n2 } = zn.document || {}, { userAgent: r2 } = zn.navigator || {}, i2 = { ...e4.request && e4.request.headers, ...n2 && { Referer: n2 }, ...r2 && { "User-Agent": r2 } }, o2 = { ...e4.request, ...t2 && { url: t2 }, headers: i2 };
        return { ...e4, request: o2 };
      }
      return e4;
    });
  }
};
Tr.__initStatic();
var Or = class _Or {
  constructor() {
    _Or.prototype.__init.call(this);
  }
  static __initStatic() {
    this.id = "Dedupe";
  }
  __init() {
    this.name = _Or.id;
  }
  setupOnce(e4, t2) {
    const n2 = (e5) => {
      if (e5.type) return e5;
      const n3 = t2().getIntegration(_Or);
      if (n3) {
        try {
          if (function(e6, t3) {
            if (!t3) return false;
            if (function(e7, t4) {
              const n4 = e7.message, r2 = t4.message;
              if (!n4 && !r2) return false;
              if (n4 && !r2 || !n4 && r2) return false;
              if (n4 !== r2) return false;
              if (!Pr(e7, t4)) return false;
              if (!jr(e7, t4)) return false;
              return true;
            }(e6, t3)) return true;
            if (function(e7, t4) {
              const n4 = xr(t4), r2 = xr(e7);
              if (!n4 || !r2) return false;
              if (n4.type !== r2.type || n4.value !== r2.value) return false;
              if (!Pr(e7, t4)) return false;
              if (!jr(e7, t4)) return false;
              return true;
            }(e6, t3)) return true;
            return false;
          }(e5, n3._previousEvent)) return ("undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__) && ze.warn("Event dropped due to being a duplicate of previously captured event."), null;
        } catch (t3) {
          return n3._previousEvent = e5;
        }
        return n3._previousEvent = e5;
      }
      return e5;
    };
    n2.id = this.name, e4(n2);
  }
};
function jr(e4, t2) {
  let n2 = Ar(e4), r2 = Ar(t2);
  if (!n2 && !r2) return true;
  if (n2 && !r2 || !n2 && r2) return false;
  if (r2.length !== n2.length) return false;
  for (let e5 = 0; e5 < r2.length; e5++) {
    const t3 = r2[e5], i2 = n2[e5];
    if (t3.filename !== i2.filename || t3.lineno !== i2.lineno || t3.colno !== i2.colno || t3.function !== i2.function) return false;
  }
  return true;
}
function Pr(e4, t2) {
  let n2 = e4.fingerprint, r2 = t2.fingerprint;
  if (!n2 && !r2) return true;
  if (n2 && !r2 || !n2 && r2) return false;
  try {
    return !(n2.join("") !== r2.join(""));
  } catch (e5) {
    return false;
  }
}
function xr(e4) {
  return e4.exception && e4.exception.values && e4.exception.values[0];
}
function Ar(e4) {
  const t2 = e4.exception;
  if (t2) try {
    return t2.values[0].stacktrace.frames;
  } catch (e5) {
    return;
  }
}
Or.__initStatic();
var Dr = Object.freeze({ __proto__: null, Breadcrumbs: ar, Dedupe: Or, GlobalHandlers: fr, HttpContext: Tr, LinkedErrors: Cr, TryCatch: wr });
var Lr = {};
zn.Sentry && zn.Sentry.Integrations && (Lr = zn.Sentry.Integrations);
var Nr = { ...Lr, ...Yn, ...Dr };
var Ir = "new";
var Rr = "loading";
var Br = "loaded";
var Fr = "joining-meeting";
var Ur = "joined-meeting";
var Vr = "left-meeting";
var $r = "error";
var Gr = "blocked";
var qr = "off";
var Yr = "sendable";
var zr = "loading";
var Jr = "interrupted";
var Wr = "playable";
var Hr = "unknown";
var Kr = "full";
var Qr = "lobby";
var Xr = "none";
var Zr = "base";
var ei = "*";
var ti = "ejected";
var ni = "nbf-room";
var ri = "nbf-token";
var ii = "exp-room";
var oi = "exp-token";
var ai = "no-room";
var si = "meeting-full";
var ci = "end-of-life";
var ui = "not-allowed";
var li = "connection-error";
var di = "cam-in-use";
var hi = "mic-in-use";
var pi = "cam-mic-in-use";
var fi = "permissions";
var vi = "undefined-mediadevices";
var gi = "not-found";
var mi = "constraints";
var yi = "unknown";
var _i = "iframe-ready-for-launch-config";
var bi = "iframe-launch-config";
var wi = "theme-updated";
var Si = "loading";
var ki = "load-attempt-failed";
var Ei = "loaded";
var Mi = "started-camera";
var Ci = "camera-error";
var Ti = "joining-meeting";
var Oi = "joined-meeting";
var ji = "left-meeting";
var Pi = "available-devices-updated";
var xi = "participant-joined";
var Ai = "participant-updated";
var Di = "participant-left";
var Li = "participant-counts-updated";
var Ni = "access-state-updated";
var Ii = "meeting-session-summary-updated";
var Ri = "meeting-session-state-updated";
var Bi = "meeting-session-data-error";
var Fi = "waiting-participant-added";
var Ui = "waiting-participant-updated";
var Vi = "waiting-participant-removed";
var $i = "track-started";
var Gi = "track-stopped";
var qi = "transcription-started";
var Yi = "transcription-stopped";
var zi = "transcription-error";
var Ji = "recording-started";
var Wi = "recording-stopped";
var Hi = "recording-stats";
var Ki = "recording-error";
var Qi = "recording-upload-completed";
var Xi = "recording-data";
var Zi = "app-message";
var eo = "remote-media-player-started";
var to = "remote-media-player-updated";
var no = "remote-media-player-stopped";
var ro = "local-screen-share-started";
var io = "local-screen-share-stopped";
var oo = "active-speaker-change";
var ao = "active-speaker-mode-change";
var so = "network-quality-change";
var co = "network-connection";
var uo = "cpu-load-change";
var lo = "fullscreen";
var ho = "exited-fullscreen";
var po = "live-streaming-started";
var fo = "live-streaming-updated";
var vo = "live-streaming-stopped";
var go = "live-streaming-error";
var mo = "lang-updated";
var yo = "receive-settings-updated";
var _o = "input-settings-updated";
var bo = "nonfatal-error";
var wo = "error";
var So = 102400;
var ko = "iframe-call-message";
var Eo = "local-screen-start";
var Mo = "register-input-handler";
var Co = "daily-method-update-live-streaming-endpoints";
var To = "transmit-log";
var Oo = "daily-custom-track";
var jo = { NONE: "none", BGBLUR: "background-blur", BGIMAGE: "background-image" };
var Po = { NONE: "none", NOISE_CANCELLATION: "noise-cancellation" };
var xo = { PLAY: "play", PAUSE: "pause" };
var Ao = 10;
var Do = ["jpg", "png", "jpeg"];
var Lo = "add-endpoints";
var No = "remove-endpoints";
function Io() {
  return !Ro() && "undefined" != typeof window && window.navigator && window.navigator.userAgent ? window.navigator.userAgent : "";
}
function Ro() {
  return "undefined" != typeof navigator && navigator.product && "ReactNative" === navigator.product;
}
function Bo() {
  return navigator && navigator.mediaDevices && navigator.mediaDevices.getUserMedia;
}
function Fo() {
  return !!(navigator && navigator.mediaDevices && navigator.mediaDevices.getDisplayMedia) && (function(e4, t2) {
    if (!e4 || !t2) return true;
    switch (e4) {
      case "Chrome":
        return t2.major >= 75;
      case "Safari":
        return RTCRtpTransceiver.prototype.hasOwnProperty("currentDirection") && !(13 === t2.major && 0 === t2.minor && 0 === t2.point);
      case "Firefox":
        return t2.major >= 67;
    }
    return true;
  }(Jo(), function() {
    switch (Jo()) {
      case "Chrome":
        return Wo();
      case "Safari":
        return Ko();
      case "Firefox":
        return Qo();
      case "Edge":
        return function() {
          var e4 = 0, t2 = 0;
          if ("undefined" != typeof window) {
            var n2 = Io().match(/Edge\/(\d+).(\d+)/);
            if (n2) try {
              e4 = parseInt(n2[1]), t2 = parseInt(n2[2]);
            } catch (e5) {
            }
          }
          return { major: e4, minor: t2 };
        }();
    }
  }()) || Ro());
}
function Uo() {
  if (Ro()) return false;
  if (!document) return false;
  var e4 = document.createElement("iframe");
  return !!e4.requestFullscreen || !!e4.webkitRequestFullscreen;
}
var Vo = ["Chrome", "Firefox"];
function $o() {
  return !Ro() && (!zo() && Vo.includes(Jo()));
}
var Go = ["Chrome", "Firefox"];
function qo() {
  return !Ro() && (!zo() && ("undefined" != typeof AudioWorkletNode && Go.includes(Jo())));
}
function Yo() {
  return Bo() && !function() {
    var e4, t2 = Jo();
    if (!Io()) return true;
    switch (t2) {
      case "Chrome":
        return (e4 = Wo()).major && e4.major > 0 && e4.major < 61;
      case "Firefox":
        return (e4 = Qo()).major < 78;
      case "Safari":
        return (e4 = Ko()).major < 12;
      default:
        return true;
    }
  }();
}
function zo() {
  var e4, t2, n2 = Io(), r2 = n2.match(/Mac/) && (!Ro() && "undefined" != typeof window && null !== (e4 = window) && void 0 !== e4 && null !== (t2 = e4.navigator) && void 0 !== t2 && t2.maxTouchPoints ? window.navigator.maxTouchPoints : 0) >= 5;
  return !!(n2.match(/Mobi/) || n2.match(/Android/) || r2) || (!!Io().match(/DailyAnd\//) || void 0);
}
function Jo() {
  if ("undefined" != typeof window) {
    var e4 = Io();
    return Ho() ? "Safari" : e4.indexOf("Edge") > -1 ? "Edge" : e4.match(/Chrome\//) ? "Chrome" : e4.indexOf("Safari") > -1 ? "Safari" : e4.indexOf("Firefox") > -1 ? "Firefox" : e4.indexOf("MSIE") > -1 || e4.indexOf(".NET") > -1 ? "IE" : "Unknown Browser";
  }
}
function Wo() {
  var e4 = 0, t2 = 0, n2 = 0, r2 = 0, i2 = false;
  if ("undefined" != typeof window) {
    var o2 = Io(), a2 = o2.match(/Chrome\/(\d+).(\d+).(\d+).(\d+)/);
    if (a2) try {
      e4 = parseInt(a2[1]), t2 = parseInt(a2[2]), n2 = parseInt(a2[3]), r2 = parseInt(a2[4]), i2 = o2.indexOf("OPR/") > -1;
    } catch (e5) {
    }
  }
  return { major: e4, minor: t2, build: n2, patch: r2, opera: i2 };
}
function Ho() {
  return !!Io().match(/iPad|iPhone|iPod/i) && Bo();
}
function Ko() {
  var e4 = 0, t2 = 0, n2 = 0;
  if ("undefined" != typeof window) {
    var r2 = Io().match(/Version\/(\d+).(\d+)(.(\d+))?/);
    if (r2) try {
      e4 = parseInt(r2[1]), t2 = parseInt(r2[2]), n2 = parseInt(r2[4]);
    } catch (e5) {
    }
    else Ho() && (e4 = 14, t2 = 0, n2 = 3);
  }
  return { major: e4, minor: t2, point: n2 };
}
function Qo() {
  var e4 = 0, t2 = 0;
  if ("undefined" != typeof window) {
    var n2 = Io().match(/Firefox\/(\d+).(\d+)/);
    if (n2) try {
      e4 = parseInt(n2[1]), t2 = parseInt(n2[2]);
    } catch (e5) {
    }
  }
  return { major: e4, minor: t2 };
}
var Xo = function() {
  function e4() {
    r(this, e4);
  }
  return s(e4, [{ key: "addListenerForMessagesFromCallMachine", value: function(e5, t2, n2) {
    he();
  } }, { key: "addListenerForMessagesFromDailyJs", value: function(e5, t2, n2) {
    he();
  } }, { key: "sendMessageToCallMachine", value: function(e5, t2, n2, r2) {
    he();
  } }, { key: "sendMessageToDailyJs", value: function(e5, t2) {
    he();
  } }, { key: "removeListener", value: function(e5) {
    he();
  } }]), e4;
}();
function Zo(e4, t2) {
  var n2 = Object.keys(e4);
  if (Object.getOwnPropertySymbols) {
    var r2 = Object.getOwnPropertySymbols(e4);
    t2 && (r2 = r2.filter(function(t3) {
      return Object.getOwnPropertyDescriptor(e4, t3).enumerable;
    })), n2.push.apply(n2, r2);
  }
  return n2;
}
function ea(e4) {
  for (var t2 = 1; t2 < arguments.length; t2++) {
    var n2 = null != arguments[t2] ? arguments[t2] : {};
    t2 % 2 ? Zo(Object(n2), true).forEach(function(t3) {
      p(e4, t3, n2[t3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e4, Object.getOwnPropertyDescriptors(n2)) : Zo(Object(n2)).forEach(function(t3) {
      Object.defineProperty(e4, t3, Object.getOwnPropertyDescriptor(n2, t3));
    });
  }
  return e4;
}
function ta(e4) {
  var t2 = function() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if ("function" == typeof Proxy) return true;
    try {
      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      })), true;
    } catch (e5) {
      return false;
    }
  }();
  return function() {
    var n2, r2 = h(e4);
    if (t2) {
      var i2 = h(this).constructor;
      n2 = Reflect.construct(r2, arguments, i2);
    } else n2 = r2.apply(this, arguments);
    return d(this, n2);
  };
}
var na = function(e4) {
  l(n2, Xo);
  var t2 = ta(n2);
  function n2() {
    var e5;
    return r(this, n2), (e5 = t2.call(this))._wrappedListeners = {}, e5._messageCallbacks = {}, e5;
  }
  return s(n2, [{ key: "addListenerForMessagesFromCallMachine", value: function(e5, t3, n3) {
    var r2 = this, i2 = function(i3) {
      if (i3.data && "iframe-call-message" === i3.data.what && (!i3.data.callFrameId || i3.data.callFrameId === t3) && (!i3.data.from || "module" !== i3.data.from)) {
        var o2 = ea({}, i3.data);
        if (delete o2.from, o2.callbackStamp && r2._messageCallbacks[o2.callbackStamp]) {
          var a2 = o2.callbackStamp;
          r2._messageCallbacks[a2].call(n3, o2), delete r2._messageCallbacks[a2];
        }
        delete o2.what, delete o2.callbackStamp, e5.call(n3, o2);
      }
    };
    this._wrappedListeners[e5] = i2, window.addEventListener("message", i2);
  } }, { key: "addListenerForMessagesFromDailyJs", value: function(e5, t3, n3) {
    var r2 = function(r3) {
      if (!(!r3.data || r3.data.what !== ko || !r3.data.action || r3.data.from && "module" !== r3.data.from || r3.data.callFrameId && t3 && r3.data.callFrameId !== t3)) {
        var i2 = r3.data;
        e5.call(n3, i2);
      }
    };
    this._wrappedListeners[e5] = r2, window.addEventListener("message", r2);
  } }, { key: "sendMessageToCallMachine", value: function(e5, t3, n3, r2) {
    if (!r2) throw new Error("undefined callFrameId. Are you trying to use a DailyCall instance previously destroyed?");
    var i2 = ea({}, e5);
    if (i2.what = ko, i2.from = "module", i2.callFrameId = r2, t3) {
      var o2 = de();
      this._messageCallbacks[o2] = t3, i2.callbackStamp = o2;
    }
    (n3 ? n3.contentWindow : window).postMessage(i2, "*");
  } }, { key: "sendMessageToDailyJs", value: function(e5, t3) {
    e5.what = ko, e5.callFrameId = t3, e5.from = "embedded", window.postMessage(e5, "*");
  } }, { key: "removeListener", value: function(e5) {
    var t3 = this._wrappedListeners[e5];
    t3 && (window.removeEventListener("message", t3), delete this._wrappedListeners[e5]);
  } }, { key: "forwardPackagedMessageToCallMachine", value: function(e5, t3, n3) {
    var r2 = ea({}, e5);
    r2.callFrameId = n3, (t3 ? t3.contentWindow : window).postMessage(r2, "*");
  } }, { key: "addListenerForPackagedMessagesFromCallMachine", value: function(e5, t3) {
    var n3 = function(n4) {
      if (n4.data && "iframe-call-message" === n4.data.what && (!n4.data.callFrameId || n4.data.callFrameId === t3) && (!n4.data.from || "module" !== n4.data.from)) {
        var r2 = n4.data;
        e5(r2);
      }
    };
    return this._wrappedListeners[e5] = n3, window.addEventListener("message", n3), e5;
  } }, { key: "removeListenerForPackagedMessagesFromCallMachine", value: function(e5) {
    var t3 = this._wrappedListeners[e5];
    t3 && (window.removeEventListener("message", t3), delete this._wrappedListeners[e5]);
  } }]), n2;
}();
function ra(e4) {
  var t2 = function() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if ("function" == typeof Proxy) return true;
    try {
      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      })), true;
    } catch (e5) {
      return false;
    }
  }();
  return function() {
    var n2, r2 = h(e4);
    if (t2) {
      var i2 = h(this).constructor;
      n2 = Reflect.construct(r2, arguments, i2);
    } else n2 = r2.apply(this, arguments);
    return d(this, n2);
  };
}
var ia = function(e4) {
  l(n2, Xo);
  var t2 = ra(n2);
  function n2() {
    var e5;
    return r(this, n2), e5 = t2.call(this), global.callMachineToDailyJsEmitter = global.callMachineToDailyJsEmitter || new y.EventEmitter(), global.dailyJsToCallMachineEmitter = global.dailyJsToCallMachineEmitter || new y.EventEmitter(), e5._wrappedListeners = {}, e5._messageCallbacks = {}, e5;
  }
  return s(n2, [{ key: "addListenerForMessagesFromCallMachine", value: function(e5, t3, n3) {
    this._addListener(e5, global.callMachineToDailyJsEmitter, n3, "received call machine message");
  } }, { key: "addListenerForMessagesFromDailyJs", value: function(e5, t3, n3) {
    this._addListener(e5, global.dailyJsToCallMachineEmitter, n3, "received daily-js message");
  } }, { key: "sendMessageToCallMachine", value: function(e5, t3) {
    this._sendMessage(e5, global.dailyJsToCallMachineEmitter, "sending message to call machine", t3);
  } }, { key: "sendMessageToDailyJs", value: function(e5) {
    this._sendMessage(e5, global.callMachineToDailyJsEmitter, "sending message to daily-js");
  } }, { key: "removeListener", value: function(e5) {
    var t3 = this._wrappedListeners[e5];
    t3 && (global.callMachineToDailyJsEmitter.removeListener("message", t3), global.dailyJsToCallMachineEmitter.removeListener("message", t3), delete this._wrappedListeners[e5]);
  } }, { key: "_addListener", value: function(e5, t3, n3, r2) {
    var i2 = this, o2 = function(t4) {
      if (t4.callbackStamp && i2._messageCallbacks[t4.callbackStamp]) {
        var r3 = t4.callbackStamp;
        i2._messageCallbacks[r3].call(n3, t4), delete i2._messageCallbacks[r3];
      }
      e5.call(n3, t4);
    };
    this._wrappedListeners[e5] = o2, t3.addListener("message", o2);
  } }, { key: "_sendMessage", value: function(e5, t3, n3, r2) {
    if (r2) {
      var i2 = de();
      this._messageCallbacks[i2] = r2, e5.callbackStamp = i2;
    }
    t3.emit("message", e5);
  } }]), n2;
}();
var oa = Object.prototype.hasOwnProperty;
function aa(e4, t2, n2) {
  for (n2 of e4.keys()) if (sa(n2, t2)) return n2;
}
function sa(e4, t2) {
  var n2, r2, i2;
  if (e4 === t2) return true;
  if (e4 && t2 && (n2 = e4.constructor) === t2.constructor) {
    if (n2 === Date) return e4.getTime() === t2.getTime();
    if (n2 === RegExp) return e4.toString() === t2.toString();
    if (n2 === Array) {
      if ((r2 = e4.length) === t2.length) for (; r2-- && sa(e4[r2], t2[r2]); ) ;
      return -1 === r2;
    }
    if (n2 === Set) {
      if (e4.size !== t2.size) return false;
      for (r2 of e4) {
        if ((i2 = r2) && "object" == typeof i2 && !(i2 = aa(t2, i2))) return false;
        if (!t2.has(i2)) return false;
      }
      return true;
    }
    if (n2 === Map) {
      if (e4.size !== t2.size) return false;
      for (r2 of e4) {
        if ((i2 = r2[0]) && "object" == typeof i2 && !(i2 = aa(t2, i2))) return false;
        if (!sa(r2[1], t2.get(i2))) return false;
      }
      return true;
    }
    if (n2 === ArrayBuffer) e4 = new Uint8Array(e4), t2 = new Uint8Array(t2);
    else if (n2 === DataView) {
      if ((r2 = e4.byteLength) === t2.byteLength) for (; r2-- && e4.getInt8(r2) === t2.getInt8(r2); ) ;
      return -1 === r2;
    }
    if (ArrayBuffer.isView(e4)) {
      if ((r2 = e4.byteLength) === t2.byteLength) for (; r2-- && e4[r2] === t2[r2]; ) ;
      return -1 === r2;
    }
    if (!n2 || "object" == typeof e4) {
      for (n2 in r2 = 0, e4) {
        if (oa.call(e4, n2) && ++r2 && !oa.call(t2, n2)) return false;
        if (!(n2 in t2) || !sa(e4[n2], t2[n2])) return false;
      }
      return Object.keys(t2).length === r2;
    }
  }
  return e4 != e4 && t2 != t2;
}
var ca = "replace";
var ua = "shallow-merge";
var la = [ca, ua];
var da = function() {
  function e4() {
    var t2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, n2 = t2.data, i2 = t2.mergeStrategy, o2 = void 0 === i2 ? ca : i2;
    r(this, e4), e4._validateMergeStrategy(o2), e4._validateData(n2, o2), this.mergeStrategy = o2, this.data = n2;
  }
  return s(e4, [{ key: "isNoOp", value: function() {
    return e4.isNoOpUpdate(this.data, this.mergeStrategy);
  } }], [{ key: "isNoOpUpdate", value: function(e5, t2) {
    return 0 === Object.keys(e5).length && t2 === ua;
  } }, { key: "_validateMergeStrategy", value: function(e5) {
    if (!la.includes(e5)) throw Error("Unrecognized mergeStrategy provided. Options are: [".concat(la, "]"));
  } }, { key: "_validateData", value: function(e5, t2) {
    if (!function(e6) {
      if (null == e6 || "object" !== i(e6)) return false;
      var t3 = Object.getPrototypeOf(e6);
      return null == t3 || t3 === Object.prototype;
    }(e5)) throw Error("Meeting session data must be a plain (map-like) object");
    var n2;
    try {
      if (n2 = JSON.stringify(e5), t2 === ca) {
        var r2 = JSON.parse(n2);
        sa(r2, e5) || console.warn("The meeting session data provided will be modified when serialized.", r2, e5);
      } else if (t2 === ua) {
        for (var o2 in e5) if (Object.hasOwnProperty.call(e5, o2) && void 0 !== e5[o2]) {
          var a2 = JSON.parse(JSON.stringify(e5[o2]));
          sa(e5[o2], a2) || console.warn("At least one key in the meeting session data provided will be modified when serialized.", a2, e5[o2]);
        }
      }
    } catch (e6) {
      throw Error("Meeting session data must be serializable to JSON: ".concat(e6));
    }
    if (n2.length > So) throw Error("Meeting session data is too large (".concat(n2.length, " characters). Maximum size suppported is ").concat(So, "."));
  } }]), e4;
}();
function ha(e4, t2, n2) {
  return ha = function() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if ("function" == typeof Proxy) return true;
    try {
      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      })), true;
    } catch (e5) {
      return false;
    }
  }() ? Reflect.construct.bind() : function(e5, t3, n3) {
    var r2 = [null];
    r2.push.apply(r2, t3);
    var i2 = new (Function.bind.apply(e5, r2))();
    return n3 && u(i2, n3.prototype), i2;
  }, ha.apply(null, arguments);
}
function pa(e4) {
  var t2 = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
  return pa = function(e5) {
    if (null === e5 || (n2 = e5, -1 === Function.toString.call(n2).indexOf("[native code]"))) return e5;
    var n2;
    if ("function" != typeof e5) throw new TypeError("Super expression must either be null or a function");
    if (void 0 !== t2) {
      if (t2.has(e5)) return t2.get(e5);
      t2.set(e5, r2);
    }
    function r2() {
      return ha(e5, arguments, h(this).constructor);
    }
    return r2.prototype = Object.create(e5.prototype, { constructor: { value: r2, enumerable: false, writable: true, configurable: true } }), u(r2, e5);
  }, pa(e4);
}
function fa(e4) {
  var t2 = function() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if ("function" == typeof Proxy) return true;
    try {
      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      })), true;
    } catch (e5) {
      return false;
    }
  }();
  return function() {
    var n2, r2 = h(e4);
    if (t2) {
      var i2 = h(this).constructor;
      n2 = Reflect.construct(r2, arguments, i2);
    } else n2 = r2.apply(this, arguments);
    return d(this, n2);
  };
}
var va = function() {
  function e4() {
    r(this, e4), this._currentLoad = null;
  }
  return s(e4, [{ key: "load", value: function(e5, t2, n2, r2) {
    if (this.loaded) return window._dailyCallObjectSetup(e5), void n2(true);
    !function(e6, t3) {
      window._dailyConfig || (window._dailyConfig = {}), window._dailyConfig.callFrameId = e6, window._dailyConfig.avoidEval = t3;
    }(e5, t2), this._currentLoad && this._currentLoad.cancel(), this._currentLoad = new ga(function() {
      n2(false);
    }, r2), this._currentLoad.start();
  } }, { key: "cancel", value: function() {
    this._currentLoad && this._currentLoad.cancel();
  } }, { key: "loaded", get: function() {
    return this._currentLoad && this._currentLoad.succeeded;
  } }]), e4;
}();
var ga = function() {
  function e4(t2, n2) {
    r(this, e4), this._attemptsRemaining = 3, this._currentAttempt = null, this._successCallback = t2, this._failureCallback = n2;
  }
  return s(e4, [{ key: "start", value: function() {
    var e5 = this;
    if (!this._currentAttempt) {
      this._currentAttempt = new _a(this._successCallback, function t2(n2) {
        e5._currentAttempt.cancelled || (e5._attemptsRemaining--, e5._failureCallback(n2, e5._attemptsRemaining > 0), e5._attemptsRemaining <= 0 || setTimeout(function() {
          e5._currentAttempt.cancelled || (e5._currentAttempt = new _a(e5._successCallback, t2), e5._currentAttempt.start());
        }, 3e3));
      }), this._currentAttempt.start();
    }
  } }, { key: "cancel", value: function() {
    this._currentAttempt && this._currentAttempt.cancel();
  } }, { key: "cancelled", get: function() {
    return this._currentAttempt && this._currentAttempt.cancelled;
  } }, { key: "succeeded", get: function() {
    return this._currentAttempt && this._currentAttempt.succeeded;
  } }]), e4;
}();
var ma = function(e4) {
  l(n2, pa(Error));
  var t2 = fa(n2);
  function n2() {
    return r(this, n2), t2.apply(this, arguments);
  }
  return s(n2);
}();
var ya = 2e4;
var _a = function() {
  function e4(t3, n2) {
    r(this, e4), this._loadAttemptImpl = Ro() || !_dailyConfig.avoidEval ? new ba(t3, n2) : new wa(t3, n2);
  }
  var t2;
  return s(e4, [{ key: "start", value: (t2 = n(function* () {
    return this._loadAttemptImpl.start();
  }), function() {
    return t2.apply(this, arguments);
  }) }, { key: "cancel", value: function() {
    this._loadAttemptImpl.cancel();
  } }, { key: "cancelled", get: function() {
    return this._loadAttemptImpl.cancelled;
  } }, { key: "succeeded", get: function() {
    return this._loadAttemptImpl.succeeded;
  } }]), e4;
}();
var ba = function() {
  function e4(t3, n2) {
    r(this, e4), this.cancelled = false, this.succeeded = false, this._networkTimedOut = false, this._networkTimeout = null, this._iosCache = "undefined" != typeof iOSCallObjectBundleCache && iOSCallObjectBundleCache, this._refetchHeaders = null, this._successCallback = t3, this._failureCallback = n2;
  }
  var t2, i2, o2, a2;
  return s(e4, [{ key: "start", value: (a2 = n(function* () {
    var e5 = fe();
    !(yield this._tryLoadFromIOSCache(e5)) && this._loadFromNetwork(e5);
  }), function() {
    return a2.apply(this, arguments);
  }) }, { key: "cancel", value: function() {
    clearTimeout(this._networkTimeout), this.cancelled = true;
  } }, { key: "_tryLoadFromIOSCache", value: (o2 = n(function* (e5) {
    if (!this._iosCache) return false;
    try {
      var t3 = yield this._iosCache.get(e5);
      return !!this.cancelled || !!t3 && (t3.code ? (Function('"use strict";' + t3.code)(), this.succeeded = true, this._successCallback(), true) : (this._refetchHeaders = t3.refetchHeaders, false));
    } catch (e6) {
      return false;
    }
  }), function(e5) {
    return o2.apply(this, arguments);
  }) }, { key: "_loadFromNetwork", value: (i2 = n(function* (e5) {
    var t3 = this;
    this._networkTimeout = setTimeout(function() {
      t3._networkTimedOut = true, t3._failureCallback("Timed out (>".concat(ya, " ms) when loading call object bundle ").concat(e5));
    }, ya);
    try {
      var n2 = this._refetchHeaders ? { headers: this._refetchHeaders } : {}, r2 = yield fetch(e5, n2);
      if (clearTimeout(this._networkTimeout), this.cancelled || this._networkTimedOut) throw new ma();
      var i3 = yield this._getBundleCodeFromResponse(e5, r2);
      if (this.cancelled) throw new ma();
      Function('"use strict";' + i3)(), this._iosCache && this._iosCache.set(e5, i3, r2.headers), this.succeeded = true, this._successCallback();
    } catch (t4) {
      if (clearTimeout(this._networkTimeout), t4 instanceof ma || this.cancelled || this._networkTimedOut) return;
      this._failureCallback("Failed to load call object bundle ".concat(e5, ": ").concat(t4));
    }
  }), function(e5) {
    return i2.apply(this, arguments);
  }) }, { key: "_getBundleCodeFromResponse", value: (t2 = n(function* (e5, t3) {
    if (t3.ok) return yield t3.text();
    if (this._iosCache && 304 === t3.status) return (yield this._iosCache.renew(e5, t3.headers)).code;
    throw new Error("Received ".concat(t3.status, " response"));
  }), function(e5, n2) {
    return t2.apply(this, arguments);
  }) }]), e4;
}();
var wa = function() {
  function e4(t3, n2) {
    r(this, e4), this.cancelled = false, this.succeeded = false, this._successCallback = t3, this._failureCallback = n2, this._attemptId = de(), this._networkTimeout = null, this._scriptElement = null;
  }
  var t2;
  return s(e4, [{ key: "start", value: (t2 = n(function* () {
    window._dailyCallMachineLoadWaitlist || (window._dailyCallMachineLoadWaitlist = /* @__PURE__ */ new Set());
    var e5 = fe();
    "object" === ("undefined" == typeof document ? "undefined" : i(document)) ? this._startLoading(e5) : this._failureCallback("Call object bundle must be loaded in a DOM/web context");
  }), function() {
    return t2.apply(this, arguments);
  }) }, { key: "cancel", value: function() {
    this._stopLoading(), this.cancelled = true;
  } }, { key: "_startLoading", value: function(e5) {
    var t3 = this;
    this._signUpForCallMachineLoadWaitlist(), this._networkTimeout = setTimeout(function() {
      t3._stopLoading(), t3._failureCallback("Timed out (>".concat(ya, " ms) when loading call object bundle ").concat(e5));
    }, ya);
    var r2 = document.getElementsByTagName("head")[0], i2 = document.createElement("script");
    this._scriptElement = i2, i2.onload = n(function* () {
      t3._stopLoading(), t3.succeeded = true, t3._successCallback();
    }), i2.onerror = function() {
      var e6 = n(function* (e7) {
        t3._stopLoading(), t3._failureCallback("Failed to load call object bundle ".concat(e7.target.src));
      });
      return function(t4) {
        return e6.apply(this, arguments);
      };
    }(), i2.src = e5, r2.appendChild(i2);
  } }, { key: "_stopLoading", value: function() {
    this._withdrawFromCallMachineLoadWaitlist(), clearTimeout(this._networkTimeout), this._scriptElement && (this._scriptElement.onload = null, this._scriptElement.onerror = null);
  } }, { key: "_signUpForCallMachineLoadWaitlist", value: function() {
    window._dailyCallMachineLoadWaitlist.add(this._attemptId);
  } }, { key: "_withdrawFromCallMachineLoadWaitlist", value: function() {
    window._dailyCallMachineLoadWaitlist.delete(this._attemptId);
  } }]), e4;
}();
var Sa = function(e4, t2) {
  for (var n2 = -1, r2 = null == e4 ? 0 : e4.length, i2 = 0, o2 = []; ++n2 < r2; ) {
    var a2 = e4[n2];
    t2(a2, n2, e4) && (o2[i2++] = a2);
  }
  return o2;
};
var ka = function(e4) {
  return function(t2, n2, r2) {
    for (var i2 = -1, o2 = Object(t2), a2 = r2(t2), s2 = a2.length; s2--; ) {
      var c2 = a2[e4 ? s2 : ++i2];
      if (false === n2(o2[c2], c2, o2)) break;
    }
    return t2;
  };
};
var Ea = ka();
var Ma = function(e4, t2) {
  for (var n2 = -1, r2 = Array(e4); ++n2 < e4; ) r2[n2] = t2(n2);
  return r2;
};
var Ca = "object" == typeof m && m && m.Object === Object && m;
var Ta = Ca;
var Oa = "object" == typeof self && self && self.Object === Object && self;
var ja = Ta || Oa || Function("return this")();
var Pa = ja.Symbol;
var xa = Pa;
var Aa = Object.prototype;
var Da = Aa.hasOwnProperty;
var La = Aa.toString;
var Na = xa ? xa.toStringTag : void 0;
var Ia = function(e4) {
  var t2 = Da.call(e4, Na), n2 = e4[Na];
  try {
    e4[Na] = void 0;
    var r2 = true;
  } catch (e5) {
  }
  var i2 = La.call(e4);
  return r2 && (t2 ? e4[Na] = n2 : delete e4[Na]), i2;
};
var Ra = Object.prototype.toString;
var Ba = Ia;
var Fa = function(e4) {
  return Ra.call(e4);
};
var Ua = Pa ? Pa.toStringTag : void 0;
var Va = function(e4) {
  return null == e4 ? void 0 === e4 ? "[object Undefined]" : "[object Null]" : Ua && Ua in Object(e4) ? Ba(e4) : Fa(e4);
};
var $a = function(e4) {
  return null != e4 && "object" == typeof e4;
};
var Ga = Va;
var qa = $a;
var Ya = function(e4) {
  return qa(e4) && "[object Arguments]" == Ga(e4);
};
var za = $a;
var Ja = Object.prototype;
var Wa = Ja.hasOwnProperty;
var Ha = Ja.propertyIsEnumerable;
var Ka = Ya(/* @__PURE__ */ function() {
  return arguments;
}()) ? Ya : function(e4) {
  return za(e4) && Wa.call(e4, "callee") && !Ha.call(e4, "callee");
};
var Qa = Array.isArray;
var Xa = {};
var Za = function() {
  return false;
};
!function(e4, t2) {
  var n2 = ja, r2 = Za, i2 = t2 && !t2.nodeType && t2, o2 = i2 && e4 && !e4.nodeType && e4, a2 = o2 && o2.exports === i2 ? n2.Buffer : void 0, s2 = (a2 ? a2.isBuffer : void 0) || r2;
  e4.exports = s2;
}({ get exports() {
  return Xa;
}, set exports(e4) {
  Xa = e4;
} }, Xa);
var es = /^(?:0|[1-9]\d*)$/;
var ts = function(e4, t2) {
  var n2 = typeof e4;
  return !!(t2 = null == t2 ? 9007199254740991 : t2) && ("number" == n2 || "symbol" != n2 && es.test(e4)) && e4 > -1 && e4 % 1 == 0 && e4 < t2;
};
var ns = function(e4) {
  return "number" == typeof e4 && e4 > -1 && e4 % 1 == 0 && e4 <= 9007199254740991;
};
var rs = Va;
var is = ns;
var os = $a;
var as = {};
as["[object Float32Array]"] = as["[object Float64Array]"] = as["[object Int8Array]"] = as["[object Int16Array]"] = as["[object Int32Array]"] = as["[object Uint8Array]"] = as["[object Uint8ClampedArray]"] = as["[object Uint16Array]"] = as["[object Uint32Array]"] = true, as["[object Arguments]"] = as["[object Array]"] = as["[object ArrayBuffer]"] = as["[object Boolean]"] = as["[object DataView]"] = as["[object Date]"] = as["[object Error]"] = as["[object Function]"] = as["[object Map]"] = as["[object Number]"] = as["[object Object]"] = as["[object RegExp]"] = as["[object Set]"] = as["[object String]"] = as["[object WeakMap]"] = false;
var ss = function(e4) {
  return os(e4) && is(e4.length) && !!as[rs(e4)];
};
var cs = function(e4) {
  return function(t2) {
    return e4(t2);
  };
};
var us = {};
!function(e4, t2) {
  var n2 = Ca, r2 = t2 && !t2.nodeType && t2, i2 = r2 && e4 && !e4.nodeType && e4, o2 = i2 && i2.exports === r2 && n2.process, a2 = function() {
    try {
      var e5 = i2 && i2.require && i2.require("util").types;
      return e5 || o2 && o2.binding && o2.binding("util");
    } catch (e6) {
    }
  }();
  e4.exports = a2;
}({ get exports() {
  return us;
}, set exports(e4) {
  us = e4;
} }, us);
var ls = ss;
var ds = cs;
var hs = us && us.isTypedArray;
var ps = hs ? ds(hs) : ls;
var fs = Ma;
var vs = Ka;
var gs = Qa;
var ms = Xa;
var ys = ts;
var _s = ps;
var bs = Object.prototype.hasOwnProperty;
var ws = function(e4, t2) {
  var n2 = gs(e4), r2 = !n2 && vs(e4), i2 = !n2 && !r2 && ms(e4), o2 = !n2 && !r2 && !i2 && _s(e4), a2 = n2 || r2 || i2 || o2, s2 = a2 ? fs(e4.length, String) : [], c2 = s2.length;
  for (var u2 in e4) !t2 && !bs.call(e4, u2) || a2 && ("length" == u2 || i2 && ("offset" == u2 || "parent" == u2) || o2 && ("buffer" == u2 || "byteLength" == u2 || "byteOffset" == u2) || ys(u2, c2)) || s2.push(u2);
  return s2;
};
var Ss = Object.prototype;
var ks = function(e4) {
  var t2 = e4 && e4.constructor;
  return e4 === ("function" == typeof t2 && t2.prototype || Ss);
};
var Es = /* @__PURE__ */ function(e4, t2) {
  return function(n2) {
    return e4(t2(n2));
  };
}(Object.keys, Object);
var Ms = ks;
var Cs = Es;
var Ts = Object.prototype.hasOwnProperty;
var Os = function(e4) {
  var t2 = typeof e4;
  return null != e4 && ("object" == t2 || "function" == t2);
};
var js = Va;
var Ps = Os;
var xs = function(e4) {
  if (!Ps(e4)) return false;
  var t2 = js(e4);
  return "[object Function]" == t2 || "[object GeneratorFunction]" == t2 || "[object AsyncFunction]" == t2 || "[object Proxy]" == t2;
};
var As = xs;
var Ds = ns;
var Ls = function(e4) {
  return null != e4 && Ds(e4.length) && !As(e4);
};
var Ns = ws;
var Is = function(e4) {
  if (!Ms(e4)) return Cs(e4);
  var t2 = [];
  for (var n2 in Object(e4)) Ts.call(e4, n2) && "constructor" != n2 && t2.push(n2);
  return t2;
};
var Rs = Ls;
var Bs = function(e4) {
  return Rs(e4) ? Ns(e4) : Is(e4);
};
var Fs = Ea;
var Us = Bs;
var Vs = Ls;
var $s = function(e4, t2) {
  return function(n2, r2) {
    if (null == n2) return n2;
    if (!Vs(n2)) return e4(n2, r2);
    for (var i2 = n2.length, o2 = t2 ? i2 : -1, a2 = Object(n2); (t2 ? o2-- : ++o2 < i2) && false !== r2(a2[o2], o2, a2); ) ;
    return n2;
  };
};
var Gs = $s(function(e4, t2) {
  return e4 && Fs(e4, t2, Us);
});
var qs = Gs;
var Ys = function(e4, t2) {
  var n2 = [];
  return qs(e4, function(e5, r2, i2) {
    t2(e5, r2, i2) && n2.push(e5);
  }), n2;
};
var zs = function() {
  this.__data__ = [], this.size = 0;
};
var Js = function(e4, t2) {
  return e4 === t2 || e4 != e4 && t2 != t2;
};
var Ws = Js;
var Hs = function(e4, t2) {
  for (var n2 = e4.length; n2--; ) if (Ws(e4[n2][0], t2)) return n2;
  return -1;
};
var Ks = Hs;
var Qs = Array.prototype.splice;
var Xs = function(e4) {
  var t2 = this.__data__, n2 = Ks(t2, e4);
  return !(n2 < 0) && (n2 == t2.length - 1 ? t2.pop() : Qs.call(t2, n2, 1), --this.size, true);
};
var Zs = Hs;
var ec = function(e4) {
  var t2 = this.__data__, n2 = Zs(t2, e4);
  return n2 < 0 ? void 0 : t2[n2][1];
};
var tc = Hs;
var nc = Hs;
var rc = function(e4, t2) {
  var n2 = this.__data__, r2 = nc(n2, e4);
  return r2 < 0 ? (++this.size, n2.push([e4, t2])) : n2[r2][1] = t2, this;
};
var ic = zs;
var oc = Xs;
var ac = ec;
var sc = function(e4) {
  return tc(this.__data__, e4) > -1;
};
var cc = rc;
function uc(e4) {
  var t2 = -1, n2 = null == e4 ? 0 : e4.length;
  for (this.clear(); ++t2 < n2; ) {
    var r2 = e4[t2];
    this.set(r2[0], r2[1]);
  }
}
uc.prototype.clear = ic, uc.prototype.delete = oc, uc.prototype.get = ac, uc.prototype.has = sc, uc.prototype.set = cc;
var lc = uc;
var dc = lc;
var hc = function() {
  this.__data__ = new dc(), this.size = 0;
};
var pc = function(e4) {
  var t2 = this.__data__, n2 = t2.delete(e4);
  return this.size = t2.size, n2;
};
var fc = function(e4) {
  return this.__data__.get(e4);
};
var vc;
var gc = function(e4) {
  return this.__data__.has(e4);
};
var mc = ja["__core-js_shared__"];
var yc = (vc = /[^.]+$/.exec(mc && mc.keys && mc.keys.IE_PROTO || "")) ? "Symbol(src)_1." + vc : "";
var _c = function(e4) {
  return !!yc && yc in e4;
};
var bc = Function.prototype.toString;
var wc = function(e4) {
  if (null != e4) {
    try {
      return bc.call(e4);
    } catch (e5) {
    }
    try {
      return e4 + "";
    } catch (e5) {
    }
  }
  return "";
};
var Sc = xs;
var kc = _c;
var Ec = Os;
var Mc = wc;
var Cc = /^\[object .+?Constructor\]$/;
var Tc = Function.prototype;
var Oc = Object.prototype;
var jc = Tc.toString;
var Pc = Oc.hasOwnProperty;
var xc = RegExp("^" + jc.call(Pc).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
var Ac = function(e4) {
  return !(!Ec(e4) || kc(e4)) && (Sc(e4) ? xc : Cc).test(Mc(e4));
};
var Dc = function(e4, t2) {
  return null == e4 ? void 0 : e4[t2];
};
var Lc = function(e4, t2) {
  var n2 = Dc(e4, t2);
  return Ac(n2) ? n2 : void 0;
};
var Nc = Lc(ja, "Map");
var Ic = Lc(Object, "create");
var Rc = Ic;
var Bc = function() {
  this.__data__ = Rc ? Rc(null) : {}, this.size = 0;
};
var Fc = function(e4) {
  var t2 = this.has(e4) && delete this.__data__[e4];
  return this.size -= t2 ? 1 : 0, t2;
};
var Uc = Ic;
var Vc = Object.prototype.hasOwnProperty;
var $c = function(e4) {
  var t2 = this.__data__;
  if (Uc) {
    var n2 = t2[e4];
    return "__lodash_hash_undefined__" === n2 ? void 0 : n2;
  }
  return Vc.call(t2, e4) ? t2[e4] : void 0;
};
var Gc = Ic;
var qc = Object.prototype.hasOwnProperty;
var Yc = Ic;
var zc = Bc;
var Jc = Fc;
var Wc = $c;
var Hc = function(e4) {
  var t2 = this.__data__;
  return Gc ? void 0 !== t2[e4] : qc.call(t2, e4);
};
var Kc = function(e4, t2) {
  var n2 = this.__data__;
  return this.size += this.has(e4) ? 0 : 1, n2[e4] = Yc && void 0 === t2 ? "__lodash_hash_undefined__" : t2, this;
};
function Qc(e4) {
  var t2 = -1, n2 = null == e4 ? 0 : e4.length;
  for (this.clear(); ++t2 < n2; ) {
    var r2 = e4[t2];
    this.set(r2[0], r2[1]);
  }
}
Qc.prototype.clear = zc, Qc.prototype.delete = Jc, Qc.prototype.get = Wc, Qc.prototype.has = Hc, Qc.prototype.set = Kc;
var Xc = Qc;
var Zc = lc;
var eu = Nc;
var tu = function(e4) {
  var t2 = typeof e4;
  return "string" == t2 || "number" == t2 || "symbol" == t2 || "boolean" == t2 ? "__proto__" !== e4 : null === e4;
};
var nu = function(e4, t2) {
  var n2 = e4.__data__;
  return tu(t2) ? n2["string" == typeof t2 ? "string" : "hash"] : n2.map;
};
var ru = nu;
var iu = nu;
var ou = nu;
var au = nu;
var su = function() {
  this.size = 0, this.__data__ = { hash: new Xc(), map: new (eu || Zc)(), string: new Xc() };
};
var cu = function(e4) {
  var t2 = ru(this, e4).delete(e4);
  return this.size -= t2 ? 1 : 0, t2;
};
var uu = function(e4) {
  return iu(this, e4).get(e4);
};
var lu = function(e4) {
  return ou(this, e4).has(e4);
};
var du = function(e4, t2) {
  var n2 = au(this, e4), r2 = n2.size;
  return n2.set(e4, t2), this.size += n2.size == r2 ? 0 : 1, this;
};
function hu(e4) {
  var t2 = -1, n2 = null == e4 ? 0 : e4.length;
  for (this.clear(); ++t2 < n2; ) {
    var r2 = e4[t2];
    this.set(r2[0], r2[1]);
  }
}
hu.prototype.clear = su, hu.prototype.delete = cu, hu.prototype.get = uu, hu.prototype.has = lu, hu.prototype.set = du;
var pu = hu;
var fu = lc;
var vu = Nc;
var gu = pu;
var mu = lc;
var yu = hc;
var _u = pc;
var bu = fc;
var wu = gc;
var Su = function(e4, t2) {
  var n2 = this.__data__;
  if (n2 instanceof fu) {
    var r2 = n2.__data__;
    if (!vu || r2.length < 199) return r2.push([e4, t2]), this.size = ++n2.size, this;
    n2 = this.__data__ = new gu(r2);
  }
  return n2.set(e4, t2), this.size = n2.size, this;
};
function ku(e4) {
  var t2 = this.__data__ = new mu(e4);
  this.size = t2.size;
}
ku.prototype.clear = yu, ku.prototype.delete = _u, ku.prototype.get = bu, ku.prototype.has = wu, ku.prototype.set = Su;
var Eu = ku;
var Mu = pu;
var Cu = function(e4) {
  return this.__data__.set(e4, "__lodash_hash_undefined__"), this;
};
var Tu = function(e4) {
  return this.__data__.has(e4);
};
function Ou(e4) {
  var t2 = -1, n2 = null == e4 ? 0 : e4.length;
  for (this.__data__ = new Mu(); ++t2 < n2; ) this.add(e4[t2]);
}
Ou.prototype.add = Ou.prototype.push = Cu, Ou.prototype.has = Tu;
var ju = function(e4, t2) {
  for (var n2 = -1, r2 = null == e4 ? 0 : e4.length; ++n2 < r2; ) if (t2(e4[n2], n2, e4)) return true;
  return false;
};
var Pu = Ou;
var xu = ju;
var Au = function(e4, t2) {
  return e4.has(t2);
};
var Du = function(e4, t2, n2, r2, i2, o2) {
  var a2 = 1 & n2, s2 = e4.length, c2 = t2.length;
  if (s2 != c2 && !(a2 && c2 > s2)) return false;
  var u2 = o2.get(e4), l2 = o2.get(t2);
  if (u2 && l2) return u2 == t2 && l2 == e4;
  var d2 = -1, h2 = true, p2 = 2 & n2 ? new Pu() : void 0;
  for (o2.set(e4, t2), o2.set(t2, e4); ++d2 < s2; ) {
    var f2 = e4[d2], v2 = t2[d2];
    if (r2) var g2 = a2 ? r2(v2, f2, d2, t2, e4, o2) : r2(f2, v2, d2, e4, t2, o2);
    if (void 0 !== g2) {
      if (g2) continue;
      h2 = false;
      break;
    }
    if (p2) {
      if (!xu(t2, function(e5, t3) {
        if (!Au(p2, t3) && (f2 === e5 || i2(f2, e5, n2, r2, o2))) return p2.push(t3);
      })) {
        h2 = false;
        break;
      }
    } else if (f2 !== v2 && !i2(f2, v2, n2, r2, o2)) {
      h2 = false;
      break;
    }
  }
  return o2.delete(e4), o2.delete(t2), h2;
};
var Lu = function(e4) {
  var t2 = -1, n2 = Array(e4.size);
  return e4.forEach(function(e5, r2) {
    n2[++t2] = [r2, e5];
  }), n2;
};
var Nu = function(e4) {
  var t2 = -1, n2 = Array(e4.size);
  return e4.forEach(function(e5) {
    n2[++t2] = e5;
  }), n2;
};
var Iu = ja.Uint8Array;
var Ru = Js;
var Bu = Du;
var Fu = Lu;
var Uu = Nu;
var Vu = Pa ? Pa.prototype : void 0;
var $u = Vu ? Vu.valueOf : void 0;
var Gu = function(e4, t2, n2, r2, i2, o2, a2) {
  switch (n2) {
    case "[object DataView]":
      if (e4.byteLength != t2.byteLength || e4.byteOffset != t2.byteOffset) return false;
      e4 = e4.buffer, t2 = t2.buffer;
    case "[object ArrayBuffer]":
      return !(e4.byteLength != t2.byteLength || !o2(new Iu(e4), new Iu(t2)));
    case "[object Boolean]":
    case "[object Date]":
    case "[object Number]":
      return Ru(+e4, +t2);
    case "[object Error]":
      return e4.name == t2.name && e4.message == t2.message;
    case "[object RegExp]":
    case "[object String]":
      return e4 == t2 + "";
    case "[object Map]":
      var s2 = Fu;
    case "[object Set]":
      var c2 = 1 & r2;
      if (s2 || (s2 = Uu), e4.size != t2.size && !c2) return false;
      var u2 = a2.get(e4);
      if (u2) return u2 == t2;
      r2 |= 2, a2.set(e4, t2);
      var l2 = Bu(s2(e4), s2(t2), r2, i2, o2, a2);
      return a2.delete(e4), l2;
    case "[object Symbol]":
      if ($u) return $u.call(e4) == $u.call(t2);
  }
  return false;
};
var qu = function(e4, t2) {
  for (var n2 = -1, r2 = t2.length, i2 = e4.length; ++n2 < r2; ) e4[i2 + n2] = t2[n2];
  return e4;
};
var Yu = qu;
var zu = Qa;
var Ju = function(e4, t2, n2) {
  var r2 = t2(e4);
  return zu(e4) ? r2 : Yu(r2, n2(e4));
};
var Wu = Sa;
var Hu = function() {
  return [];
};
var Ku = Object.prototype.propertyIsEnumerable;
var Qu = Object.getOwnPropertySymbols;
var Xu = Ju;
var Zu = Qu ? function(e4) {
  return null == e4 ? [] : (e4 = Object(e4), Wu(Qu(e4), function(t2) {
    return Ku.call(e4, t2);
  }));
} : Hu;
var el = Bs;
var tl = function(e4) {
  return Xu(e4, el, Zu);
};
var nl = Object.prototype.hasOwnProperty;
var rl = function(e4, t2, n2, r2, i2, o2) {
  var a2 = 1 & n2, s2 = tl(e4), c2 = s2.length;
  if (c2 != tl(t2).length && !a2) return false;
  for (var u2 = c2; u2--; ) {
    var l2 = s2[u2];
    if (!(a2 ? l2 in t2 : nl.call(t2, l2))) return false;
  }
  var d2 = o2.get(e4), h2 = o2.get(t2);
  if (d2 && h2) return d2 == t2 && h2 == e4;
  var p2 = true;
  o2.set(e4, t2), o2.set(t2, e4);
  for (var f2 = a2; ++u2 < c2; ) {
    var v2 = e4[l2 = s2[u2]], g2 = t2[l2];
    if (r2) var m2 = a2 ? r2(g2, v2, l2, t2, e4, o2) : r2(v2, g2, l2, e4, t2, o2);
    if (!(void 0 === m2 ? v2 === g2 || i2(v2, g2, n2, r2, o2) : m2)) {
      p2 = false;
      break;
    }
    f2 || (f2 = "constructor" == l2);
  }
  if (p2 && !f2) {
    var y2 = e4.constructor, _2 = t2.constructor;
    y2 == _2 || !("constructor" in e4) || !("constructor" in t2) || "function" == typeof y2 && y2 instanceof y2 && "function" == typeof _2 && _2 instanceof _2 || (p2 = false);
  }
  return o2.delete(e4), o2.delete(t2), p2;
};
var il = Lc(ja, "DataView");
var ol = Nc;
var al = Lc(ja, "Promise");
var sl = Lc(ja, "Set");
var cl = Lc(ja, "WeakMap");
var ul = Va;
var ll = wc;
var dl = "[object Map]";
var hl = "[object Promise]";
var pl = "[object Set]";
var fl = "[object WeakMap]";
var vl = "[object DataView]";
var gl = ll(il);
var ml = ll(ol);
var yl = ll(al);
var _l = ll(sl);
var bl = ll(cl);
var wl = ul;
(il && wl(new il(new ArrayBuffer(1))) != vl || ol && wl(new ol()) != dl || al && wl(al.resolve()) != hl || sl && wl(new sl()) != pl || cl && wl(new cl()) != fl) && (wl = function(e4) {
  var t2 = ul(e4), n2 = "[object Object]" == t2 ? e4.constructor : void 0, r2 = n2 ? ll(n2) : "";
  if (r2) switch (r2) {
    case gl:
      return vl;
    case ml:
      return dl;
    case yl:
      return hl;
    case _l:
      return pl;
    case bl:
      return fl;
  }
  return t2;
});
var Sl = Eu;
var kl = Du;
var El = Gu;
var Ml = rl;
var Cl = wl;
var Tl = Qa;
var Ol = Xa;
var jl = ps;
var Pl = "[object Arguments]";
var xl = "[object Array]";
var Al = "[object Object]";
var Dl = Object.prototype.hasOwnProperty;
var Ll = function(e4, t2, n2, r2, i2, o2) {
  var a2 = Tl(e4), s2 = Tl(t2), c2 = a2 ? xl : Cl(e4), u2 = s2 ? xl : Cl(t2), l2 = (c2 = c2 == Pl ? Al : c2) == Al, d2 = (u2 = u2 == Pl ? Al : u2) == Al, h2 = c2 == u2;
  if (h2 && Ol(e4)) {
    if (!Ol(t2)) return false;
    a2 = true, l2 = false;
  }
  if (h2 && !l2) return o2 || (o2 = new Sl()), a2 || jl(e4) ? kl(e4, t2, n2, r2, i2, o2) : El(e4, t2, c2, n2, r2, i2, o2);
  if (!(1 & n2)) {
    var p2 = l2 && Dl.call(e4, "__wrapped__"), f2 = d2 && Dl.call(t2, "__wrapped__");
    if (p2 || f2) {
      var v2 = p2 ? e4.value() : e4, g2 = f2 ? t2.value() : t2;
      return o2 || (o2 = new Sl()), i2(v2, g2, n2, r2, o2);
    }
  }
  return !!h2 && (o2 || (o2 = new Sl()), Ml(e4, t2, n2, r2, i2, o2));
};
var Nl = $a;
var Il = function e2(t2, n2, r2, i2, o2) {
  return t2 === n2 || (null == t2 || null == n2 || !Nl(t2) && !Nl(n2) ? t2 != t2 && n2 != n2 : Ll(t2, n2, r2, i2, e2, o2));
};
var Rl = Eu;
var Bl = Il;
var Fl = function(e4, t2, n2, r2) {
  var i2 = n2.length, o2 = i2, a2 = !r2;
  if (null == e4) return !o2;
  for (e4 = Object(e4); i2--; ) {
    var s2 = n2[i2];
    if (a2 && s2[2] ? s2[1] !== e4[s2[0]] : !(s2[0] in e4)) return false;
  }
  for (; ++i2 < o2; ) {
    var c2 = (s2 = n2[i2])[0], u2 = e4[c2], l2 = s2[1];
    if (a2 && s2[2]) {
      if (void 0 === u2 && !(c2 in e4)) return false;
    } else {
      var d2 = new Rl();
      if (r2) var h2 = r2(u2, l2, c2, e4, t2, d2);
      if (!(void 0 === h2 ? Bl(l2, u2, 3, r2, d2) : h2)) return false;
    }
  }
  return true;
};
var Ul = Os;
var Vl = function(e4) {
  return e4 == e4 && !Ul(e4);
};
var $l = Vl;
var Gl = Bs;
var ql = function(e4, t2) {
  return function(n2) {
    return null != n2 && (n2[e4] === t2 && (void 0 !== t2 || e4 in Object(n2)));
  };
};
var Yl = Fl;
var zl = function(e4) {
  for (var t2 = Gl(e4), n2 = t2.length; n2--; ) {
    var r2 = t2[n2], i2 = e4[r2];
    t2[n2] = [r2, i2, $l(i2)];
  }
  return t2;
};
var Jl = ql;
var Wl = function(e4) {
  var t2 = zl(e4);
  return 1 == t2.length && t2[0][2] ? Jl(t2[0][0], t2[0][1]) : function(n2) {
    return n2 === e4 || Yl(n2, e4, t2);
  };
};
var Hl = Va;
var Kl = $a;
var Ql = function(e4) {
  return "symbol" == typeof e4 || Kl(e4) && "[object Symbol]" == Hl(e4);
};
var Xl = Qa;
var Zl = Ql;
var ed = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
var td = /^\w*$/;
var nd = function(e4, t2) {
  if (Xl(e4)) return false;
  var n2 = typeof e4;
  return !("number" != n2 && "symbol" != n2 && "boolean" != n2 && null != e4 && !Zl(e4)) || (td.test(e4) || !ed.test(e4) || null != t2 && e4 in Object(t2));
};
var rd = pu;
function id(e4, t2) {
  if ("function" != typeof e4 || null != t2 && "function" != typeof t2) throw new TypeError("Expected a function");
  var n2 = function() {
    var r2 = arguments, i2 = t2 ? t2.apply(this, r2) : r2[0], o2 = n2.cache;
    if (o2.has(i2)) return o2.get(i2);
    var a2 = e4.apply(this, r2);
    return n2.cache = o2.set(i2, a2) || o2, a2;
  };
  return n2.cache = new (id.Cache || rd)(), n2;
}
id.Cache = rd;
var od = id;
var ad = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
var sd = /\\(\\)?/g;
var cd = function(e4) {
  var t2 = od(e4, function(e5) {
    return 500 === n2.size && n2.clear(), e5;
  }), n2 = t2.cache;
  return t2;
}(function(e4) {
  var t2 = [];
  return 46 === e4.charCodeAt(0) && t2.push(""), e4.replace(ad, function(e5, n2, r2, i2) {
    t2.push(r2 ? i2.replace(sd, "$1") : n2 || e5);
  }), t2;
});
var ud = function(e4, t2) {
  for (var n2 = -1, r2 = null == e4 ? 0 : e4.length, i2 = Array(r2); ++n2 < r2; ) i2[n2] = t2(e4[n2], n2, e4);
  return i2;
};
var ld = ud;
var dd = Qa;
var hd = Ql;
var pd = Pa ? Pa.prototype : void 0;
var fd = pd ? pd.toString : void 0;
var vd = function e3(t2) {
  if ("string" == typeof t2) return t2;
  if (dd(t2)) return ld(t2, e3) + "";
  if (hd(t2)) return fd ? fd.call(t2) : "";
  var n2 = t2 + "";
  return "0" == n2 && 1 / t2 == -Infinity ? "-0" : n2;
};
var gd = vd;
var md = Qa;
var yd = nd;
var _d = cd;
var bd = function(e4) {
  return null == e4 ? "" : gd(e4);
};
var wd = function(e4, t2) {
  return md(e4) ? e4 : yd(e4, t2) ? [e4] : _d(bd(e4));
};
var Sd = Ql;
var kd = function(e4) {
  if ("string" == typeof e4 || Sd(e4)) return e4;
  var t2 = e4 + "";
  return "0" == t2 && 1 / e4 == -Infinity ? "-0" : t2;
};
var Ed = wd;
var Md = kd;
var Cd = function(e4, t2) {
  for (var n2 = 0, r2 = (t2 = Ed(t2, e4)).length; null != e4 && n2 < r2; ) e4 = e4[Md(t2[n2++])];
  return n2 && n2 == r2 ? e4 : void 0;
};
var Td = Cd;
var Od = wd;
var jd = Ka;
var Pd = Qa;
var xd = ts;
var Ad = ns;
var Dd = kd;
var Ld = function(e4, t2, n2) {
  for (var r2 = -1, i2 = (t2 = Od(t2, e4)).length, o2 = false; ++r2 < i2; ) {
    var a2 = Dd(t2[r2]);
    if (!(o2 = null != e4 && n2(e4, a2))) break;
    e4 = e4[a2];
  }
  return o2 || ++r2 != i2 ? o2 : !!(i2 = null == e4 ? 0 : e4.length) && Ad(i2) && xd(a2, i2) && (Pd(e4) || jd(e4));
};
var Nd = function(e4, t2) {
  return null != e4 && t2 in Object(e4);
};
var Id = Ld;
var Rd = Il;
var Bd = function(e4, t2, n2) {
  var r2 = null == e4 ? void 0 : Td(e4, t2);
  return void 0 === r2 ? n2 : r2;
};
var Fd = function(e4, t2) {
  return null != e4 && Id(e4, t2, Nd);
};
var Ud = nd;
var Vd = Vl;
var $d = ql;
var Gd = kd;
var qd = function(e4) {
  return e4;
};
var Yd = Cd;
var zd = function(e4) {
  return function(t2) {
    return null == t2 ? void 0 : t2[e4];
  };
};
var Jd = function(e4) {
  return function(t2) {
    return Yd(t2, e4);
  };
};
var Wd = nd;
var Hd = kd;
var Kd = Wl;
var Qd = function(e4, t2) {
  return Ud(e4) && Vd(t2) ? $d(Gd(e4), t2) : function(n2) {
    var r2 = Bd(n2, e4);
    return void 0 === r2 && r2 === t2 ? Fd(n2, e4) : Rd(t2, r2, 3);
  };
};
var Xd = qd;
var Zd = Qa;
var eh = function(e4) {
  return Wd(e4) ? zd(Hd(e4)) : Jd(e4);
};
var th = function(e4) {
  return "function" == typeof e4 ? e4 : null == e4 ? Xd : "object" == typeof e4 ? Zd(e4) ? Qd(e4[0], e4[1]) : Kd(e4) : eh(e4);
};
var nh = Sa;
var rh = Ys;
var ih = th;
var oh = Qa;
var ah = function(e4, t2) {
  return (oh(e4) ? nh : rh)(e4, ih(t2));
};
var sh = Gs;
var ch = Ls;
var uh = function(e4, t2) {
  var n2 = -1, r2 = ch(e4) ? Array(e4.length) : [];
  return sh(e4, function(e5, i2, o2) {
    r2[++n2] = t2(e5, i2, o2);
  }), r2;
};
var lh = Ql;
var dh = function(e4, t2) {
  if (e4 !== t2) {
    var n2 = void 0 !== e4, r2 = null === e4, i2 = e4 == e4, o2 = lh(e4), a2 = void 0 !== t2, s2 = null === t2, c2 = t2 == t2, u2 = lh(t2);
    if (!s2 && !u2 && !o2 && e4 > t2 || o2 && a2 && c2 && !s2 && !u2 || r2 && a2 && c2 || !n2 && c2 || !i2) return 1;
    if (!r2 && !o2 && !u2 && e4 < t2 || u2 && n2 && i2 && !r2 && !o2 || s2 && n2 && i2 || !a2 && i2 || !c2) return -1;
  }
  return 0;
};
var hh = function(e4, t2, n2) {
  for (var r2 = -1, i2 = e4.criteria, o2 = t2.criteria, a2 = i2.length, s2 = n2.length; ++r2 < a2; ) {
    var c2 = dh(i2[r2], o2[r2]);
    if (c2) return r2 >= s2 ? c2 : c2 * ("desc" == n2[r2] ? -1 : 1);
  }
  return e4.index - t2.index;
};
var ph = ud;
var fh = Cd;
var vh = th;
var gh = uh;
var mh = function(e4, t2) {
  var n2 = e4.length;
  for (e4.sort(t2); n2--; ) e4[n2] = e4[n2].value;
  return e4;
};
var yh = cs;
var _h = hh;
var bh = qd;
var wh = Qa;
var Sh = function(e4, t2, n2) {
  t2 = t2.length ? ph(t2, function(e5) {
    return wh(e5) ? function(t3) {
      return fh(t3, 1 === e5.length ? e5[0] : e5);
    } : e5;
  }) : [bh];
  var r2 = -1;
  t2 = ph(t2, yh(vh));
  var i2 = gh(e4, function(e5, n3, i3) {
    return { criteria: ph(t2, function(t3) {
      return t3(e5);
    }), index: ++r2, value: e5 };
  });
  return mh(i2, function(e5, t3) {
    return _h(e5, t3, n2);
  });
};
var kh = Sh;
var Eh = Qa;
var Mh = function(e4, t2, n2, r2) {
  return null == e4 ? [] : (Eh(t2) || (t2 = null == t2 ? [] : [t2]), Eh(n2 = r2 ? void 0 : n2) || (n2 = null == n2 ? [] : [n2]), kh(e4, t2, n2));
};
var Ch = function(e4, t2, n2) {
  return true === jh(e4.local, t2, n2);
};
var Th = function(e4, t2, n2) {
  return e4.local.streams && e4.local.streams[t2] && e4.local.streams[t2].stream && e4.local.streams[t2].stream["get".concat("video" === n2 ? "Video" : "Audio", "Tracks")]()[0];
};
var Oh = function(e4, t2, n2, r2) {
  var i2 = Ph(e4, t2, n2, r2);
  return i2 && i2.pendingTrack;
};
var jh = function(e4, t2, n2) {
  if (!e4) return false;
  var r2 = function(e5) {
    switch (e5) {
      case "avatar":
        return true;
      case "staged":
        return e5;
      default:
        return !!e5;
    }
  }, i2 = e4.public.subscribedTracks;
  return i2 && i2[t2] ? -1 === ["cam-audio", "cam-video", "screen-video", "screen-audio", "rmpAudio", "rmpVideo"].indexOf(n2) && i2[t2].custom ? [true, "staged"].includes(i2[t2].custom) ? r2(i2[t2].custom) : r2(i2[t2].custom[n2]) : r2(i2[t2][n2]) : !i2 || r2(i2.ALL);
};
var Ph = function(e4, t2, n2, r2) {
  var i2 = Mh(ah(e4.streams, function(e5) {
    return e5.participantId === t2 && e5.type === n2 && e5.pendingTrack && e5.pendingTrack.kind === r2;
  }), "starttime", "desc");
  return i2 && i2[0];
};
var xh = function(e4, t2) {
  var n2 = e4.local.public.customTracks;
  if (n2 && n2[t2]) return n2[t2].track;
};
function Ah(e4) {
  for (var t2 = store.getState(), n2 = 0, r2 = ["cam", "screen"]; n2 < r2.length; n2++) for (var i2 = r2[n2], o2 = 0, a2 = ["video", "audio"]; o2 < a2.length; o2++) {
    var s2 = a2[o2], c2 = "cam" === i2 ? s2 : "screen".concat(s2.charAt(0).toUpperCase() + s2.slice(1)), u2 = e4.tracks[c2];
    if (u2) {
      var l2 = e4.local ? Th(t2, i2, s2) : Oh(t2, e4.session_id, i2, s2);
      "playable" === u2.state && (u2.track = l2), u2.persistentTrack = l2;
    }
  }
}
function Dh(e4) {
  try {
    var t2 = store.getState();
    for (var n2 in e4.tracks) if (!Lh(n2)) {
      var r2 = e4.tracks[n2].kind;
      if (r2) {
        var i2 = e4.tracks[n2];
        if (i2) {
          var o2 = e4.local ? xh(t2, n2) : Oh(t2, e4.session_id, n2, r2);
          "playable" === i2.state && (e4.tracks[n2].track = o2), i2.persistentTrack = o2;
        }
      } else console.error("unknown type for custom track");
    }
  } catch (e5) {
    console.error(e5);
  }
}
function Lh(e4) {
  return ["video", "audio", "screenVideo", "screenAudio"].includes(e4);
}
function Nh(e4, t2) {
  var n2 = store.getState();
  if (e4.local) {
    if (e4.audio) try {
      e4.audioTrack = n2.local.streams.cam.stream.getAudioTracks()[0], e4.audioTrack || (e4.audio = false);
    } catch (e5) {
    }
    if (e4.video) try {
      e4.videoTrack = n2.local.streams.cam.stream.getVideoTracks()[0], e4.videoTrack || (e4.video = false);
    } catch (e5) {
    }
    if (e4.screen) try {
      e4.screenVideoTrack = n2.local.streams.screen.stream.getVideoTracks()[0], e4.screenAudioTrack = n2.local.streams.screen.stream.getAudioTracks()[0], e4.screenVideoTrack || e4.screenAudioTrack || (e4.screen = false);
    } catch (e5) {
    }
  } else {
    var r2 = true;
    try {
      var i2 = n2.participants[e4.session_id];
      i2 && i2.public && i2.public.rtcType && "peer-to-peer" === i2.public.rtcType.impl && i2.private && !["connected", "completed"].includes(i2.private.peeringState) && (r2 = false);
    } catch (e5) {
      console.error(e5);
    }
    if (!r2) return e4.audio = false, e4.audioTrack = false, e4.video = false, e4.videoTrack = false, e4.screen = false, void (e4.screenTrack = false);
    try {
      n2.streams;
      if (e4.audio && Ch(n2, e4.session_id, "cam-audio")) {
        var o2 = Oh(n2, e4.session_id, "cam", "audio");
        o2 && (t2 && t2.audioTrack && t2.audioTrack.id === o2.id ? e4.audioTrack = o2 : o2.muted || (e4.audioTrack = o2)), e4.audioTrack || (e4.audio = false);
      }
      if (e4.video && Ch(n2, e4.session_id, "cam-video")) {
        var a2 = Oh(n2, e4.session_id, "cam", "video");
        a2 && (t2 && t2.videoTrack && t2.videoTrack.id === a2.id ? e4.videoTrack = a2 : a2.muted || (e4.videoTrack = a2)), e4.videoTrack || (e4.video = false);
      }
      if (e4.screen && Ch(n2, e4.session_id, "screen-audio")) {
        var s2 = Oh(n2, e4.session_id, "screen", "audio");
        s2 && (t2 && t2.screenAudioTrack && t2.screenAudioTrack.id === s2.id ? e4.screenAudioTrack = s2 : s2.muted || (e4.screenAudioTrack = s2));
      }
      if (e4.screen && Ch(n2, e4.session_id, "screen-video")) {
        var c2 = Oh(n2, e4.session_id, "screen", "video");
        c2 && (t2 && t2.screenVideoTrack && t2.screenVideoTrack.id === c2.id ? e4.screenVideoTrack = c2 : c2.muted || (e4.screenVideoTrack = c2));
      }
      e4.screenVideoTrack || e4.screenAudioTrack || (e4.screen = false);
    } catch (e5) {
      console.error("unexpected error matching up tracks", e5);
    }
  }
}
function Ih(e4, t2) {
  var n2 = "undefined" != typeof Symbol && e4[Symbol.iterator] || e4["@@iterator"];
  if (!n2) {
    if (Array.isArray(e4) || (n2 = function(e5, t3) {
      if (!e5) return;
      if ("string" == typeof e5) return Rh(e5, t3);
      var n3 = Object.prototype.toString.call(e5).slice(8, -1);
      "Object" === n3 && e5.constructor && (n3 = e5.constructor.name);
      if ("Map" === n3 || "Set" === n3) return Array.from(e5);
      if ("Arguments" === n3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3)) return Rh(e5, t3);
    }(e4)) || t2 && e4 && "number" == typeof e4.length) {
      n2 && (e4 = n2);
      var r2 = 0, i2 = function() {
      };
      return { s: i2, n: function() {
        return r2 >= e4.length ? { done: true } : { done: false, value: e4[r2++] };
      }, e: function(e5) {
        throw e5;
      }, f: i2 };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o2, a2 = true, s2 = false;
  return { s: function() {
    n2 = n2.call(e4);
  }, n: function() {
    var e5 = n2.next();
    return a2 = e5.done, e5;
  }, e: function(e5) {
    s2 = true, o2 = e5;
  }, f: function() {
    try {
      a2 || null == n2.return || n2.return();
    } finally {
      if (s2) throw o2;
    }
  } };
}
function Rh(e4, t2) {
  (null == t2 || t2 > e4.length) && (t2 = e4.length);
  for (var n2 = 0, r2 = new Array(t2); n2 < t2; n2++) r2[n2] = e4[n2];
  return r2;
}
var Bh = /* @__PURE__ */ new Map();
var Fh = null;
function Uh(e4, t2) {
  var n2 = "undefined" != typeof Symbol && e4[Symbol.iterator] || e4["@@iterator"];
  if (!n2) {
    if (Array.isArray(e4) || (n2 = function(e5, t3) {
      if (!e5) return;
      if ("string" == typeof e5) return Vh(e5, t3);
      var n3 = Object.prototype.toString.call(e5).slice(8, -1);
      "Object" === n3 && e5.constructor && (n3 = e5.constructor.name);
      if ("Map" === n3 || "Set" === n3) return Array.from(e5);
      if ("Arguments" === n3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3)) return Vh(e5, t3);
    }(e4)) || t2 && e4 && "number" == typeof e4.length) {
      n2 && (e4 = n2);
      var r2 = 0, i2 = function() {
      };
      return { s: i2, n: function() {
        return r2 >= e4.length ? { done: true } : { done: false, value: e4[r2++] };
      }, e: function(e5) {
        throw e5;
      }, f: i2 };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o2, a2 = true, s2 = false;
  return { s: function() {
    n2 = n2.call(e4);
  }, n: function() {
    var e5 = n2.next();
    return a2 = e5.done, e5;
  }, e: function(e5) {
    s2 = true, o2 = e5;
  }, f: function() {
    try {
      a2 || null == n2.return || n2.return();
    } finally {
      if (s2) throw o2;
    }
  } };
}
function Vh(e4, t2) {
  (null == t2 || t2 > e4.length) && (t2 = e4.length);
  for (var n2 = 0, r2 = new Array(t2); n2 < t2; n2++) r2[n2] = e4[n2];
  return r2;
}
var $h = /* @__PURE__ */ new Map();
var Gh = null;
var qh = 3e3;
function Yh(e4) {
  Jh() ? function(e5) {
    Bh.has(e5) || (Bh.set(e5, {}), navigator.mediaDevices.enumerateDevices().then(function(t2) {
      Bh.has(e5) && (Bh.get(e5).lastDevicesString = JSON.stringify(t2), Fh || (Fh = function() {
        var e6 = n(function* () {
          var e7, t3 = yield navigator.mediaDevices.enumerateDevices(), n2 = Ih(Bh.keys());
          try {
            for (n2.s(); !(e7 = n2.n()).done; ) {
              var r2 = e7.value, i2 = JSON.stringify(t3);
              i2 !== Bh.get(r2).lastDevicesString && (Bh.get(r2).lastDevicesString = i2, r2(t3));
            }
          } catch (e8) {
            n2.e(e8);
          } finally {
            n2.f();
          }
        });
        return function() {
          return e6.apply(this, arguments);
        };
      }(), navigator.mediaDevices.addEventListener("devicechange", Fh)));
    }));
  }(e4) : function(e5) {
    $h.has(e5) || ($h.set(e5, {}), navigator.mediaDevices.enumerateDevices().then(function(t2) {
      $h.has(e5) && ($h.get(e5).lastDevicesString = JSON.stringify(t2), Gh || (Gh = setInterval(n(function* () {
        var e6, t3 = yield navigator.mediaDevices.enumerateDevices(), n2 = Uh($h.keys());
        try {
          for (n2.s(); !(e6 = n2.n()).done; ) {
            var r2 = e6.value, i2 = JSON.stringify(t3);
            i2 !== $h.get(r2).lastDevicesString && ($h.get(r2).lastDevicesString = i2, r2(t3));
          }
        } catch (e7) {
          n2.e(e7);
        } finally {
          n2.f();
        }
      }), qh)));
    }));
  }(e4);
}
function zh(e4) {
  Jh() ? function(e5) {
    Bh.has(e5) && (Bh.delete(e5), 0 === Bh.size && Fh && (navigator.mediaDevices.removeEventListener("devicechange", Fh), Fh = null));
  }(e4) : function(e5) {
    $h.has(e5) && ($h.delete(e5), 0 === $h.size && Gh && (clearInterval(Gh), Gh = null));
  }(e4);
}
function Jh() {
  return Ro() || void 0 !== navigator.mediaDevices.ondevicechange;
}
var Wh = /* @__PURE__ */ new Set();
function Hh(e4, t2) {
  var n2 = t2.isLocalScreenVideo;
  return e4 && "live" === e4.readyState && !function(e5, t3) {
    return (!t3.isLocalScreenVideo || "Chrome" !== Jo()) && e5.muted && !Wh.has(e5.id);
  }(e4, { isLocalScreenVideo: n2 });
}
var Kh;
var Qh = ["preserveIframe"];
function Xh(e4, t2) {
  var n2 = Object.keys(e4);
  if (Object.getOwnPropertySymbols) {
    var r2 = Object.getOwnPropertySymbols(e4);
    t2 && (r2 = r2.filter(function(t3) {
      return Object.getOwnPropertyDescriptor(e4, t3).enumerable;
    })), n2.push.apply(n2, r2);
  }
  return n2;
}
function Zh(e4) {
  for (var t2 = 1; t2 < arguments.length; t2++) {
    var n2 = null != arguments[t2] ? arguments[t2] : {};
    t2 % 2 ? Xh(Object(n2), true).forEach(function(t3) {
      p(e4, t3, n2[t3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e4, Object.getOwnPropertyDescriptors(n2)) : Xh(Object(n2)).forEach(function(t3) {
      Object.defineProperty(e4, t3, Object.getOwnPropertyDescriptor(n2, t3));
    });
  }
  return e4;
}
function ep(e4) {
  var t2 = function() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if ("function" == typeof Proxy) return true;
    try {
      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      })), true;
    } catch (e5) {
      return false;
    }
  }();
  return function() {
    var n2, r2 = h(e4);
    if (t2) {
      var i2 = h(this).constructor;
      n2 = Reflect.construct(r2, arguments, i2);
    } else n2 = r2.apply(this, arguments);
    return d(this, n2);
  };
}
function tp(e4, t2) {
  var n2 = "undefined" != typeof Symbol && e4[Symbol.iterator] || e4["@@iterator"];
  if (!n2) {
    if (Array.isArray(e4) || (n2 = function(e5, t3) {
      if (!e5) return;
      if ("string" == typeof e5) return np(e5, t3);
      var n3 = Object.prototype.toString.call(e5).slice(8, -1);
      "Object" === n3 && e5.constructor && (n3 = e5.constructor.name);
      if ("Map" === n3 || "Set" === n3) return Array.from(e5);
      if ("Arguments" === n3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3)) return np(e5, t3);
    }(e4)) || t2 && e4 && "number" == typeof e4.length) {
      n2 && (e4 = n2);
      var r2 = 0, i2 = function() {
      };
      return { s: i2, n: function() {
        return r2 >= e4.length ? { done: true } : { done: false, value: e4[r2++] };
      }, e: function(e5) {
        throw e5;
      }, f: i2 };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o2, a2 = true, s2 = false;
  return { s: function() {
    n2 = n2.call(e4);
  }, n: function() {
    var e5 = n2.next();
    return a2 = e5.done, e5;
  }, e: function(e5) {
    s2 = true, o2 = e5;
  }, f: function() {
    try {
      a2 || null == n2.return || n2.return();
    } finally {
      if (s2) throw o2;
    }
  } };
}
function np(e4, t2) {
  (null == t2 || t2 > e4.length) && (t2 = e4.length);
  for (var n2 = 0, r2 = new Array(t2); n2 < t2; n2++) r2[n2] = e4[n2];
  return r2;
}
var rp = "video";
var ip = "voice";
var op = Ro() ? { data: {} } : { data: {}, topology: "none" };
var ap = { present: 0, hidden: 0 };
var sp = { maxBitrate: { min: 1e5, max: 25e5 }, maxFramerate: { min: 1, max: 30 }, scaleResolutionDownBy: { min: 1, max: 8 } };
var cp = Object.keys(sp);
var up = ["state", "volume", "simulcastEncodings"];
var lp = { androidInCallNotification: { title: "string", subtitle: "string", iconName: "string", disableForCustomOverride: "boolean" }, disableAutoDeviceManagement: { audio: "boolean", video: "boolean" } };
var dp = { id: { iconPath: "string", iconPathDarkMode: "string", label: "string", tooltip: "string" } };
var hp = { id: { allow: "string", controlledBy: "'*' | 'owners' | string[]", csp: "string", iconURL: "string", label: "string", loading: "'eager' | 'lazy'", location: "'main' | 'sidebar'", name: "string", referrerPolicy: "string", sandbox: "string", src: "string", srcdoc: "string", shared: "string[] | 'owners' | boolean" } };
var pp = { customIntegrations: { validate: Pp, help: Op() }, customTrayButtons: { validate: jp, help: "customTrayButtons should be a dictionary of the type ".concat(JSON.stringify(dp)) }, url: { validate: function(e4) {
  return "string" == typeof e4;
}, help: "url should be a string" }, baseUrl: { validate: function(e4) {
  return "string" == typeof e4;
}, help: "baseUrl should be a string" }, token: { validate: function(e4) {
  return "string" == typeof e4;
}, help: "token should be a string", queryString: "t" }, dailyConfig: { validate: function(e4, t2) {
  try {
    return t2.validateDailyConfig(e4), window._dailyConfig || (window._dailyConfig = {}), window._dailyConfig.experimentalGetUserMediaConstraintsModify = e4.experimentalGetUserMediaConstraintsModify, window._dailyConfig.userMediaVideoConstraints = e4.userMediaVideoConstraints, window._dailyConfig.userMediaAudioConstraints = e4.userMediaAudioConstraints, window._dailyConfig.callObjectBundleUrlOverride = e4.callObjectBundleUrlOverride, window._dailyConfig.proxyUrl = e4.proxyUrl, window._dailyConfig.iceConfig = e4.iceConfig, true;
  } catch (e5) {
    console.error("Failed to validate dailyConfig", e5);
  }
  return false;
}, help: "Unsupported dailyConfig. Check error logs for detailed info." }, reactNativeConfig: { validate: function(e4) {
  return xp(e4, lp);
}, help: "reactNativeConfig should look like ".concat(JSON.stringify(lp), ", all fields optional") }, lang: { validate: function(e4) {
  return ["de", "en-us", "en", "es", "fi", "fr", "it", "jp", "ka", "nl", "no", "pl", "pt", "pt-BR", "ru", "sv", "tr", "user"].includes(e4);
}, help: "language not supported. Options are: de, en-us, en, es, fi, fr, it, jp, ka, nl, no, pl, pt, pt-BR, ru, sv, tr, user" }, userName: true, userData: { validate: function(e4) {
  try {
    return Sp(e4), true;
  } catch (e5) {
    return console.error(e5), false;
  }
}, help: "invalid userData type provided" }, startVideoOff: true, startAudioOff: true, activeSpeakerMode: true, showLeaveButton: true, showLocalVideo: true, showParticipantsBar: true, showFullscreenButton: true, showUserNameChangeUI: true, iframeStyle: true, customLayout: true, cssFile: true, cssText: true, bodyClass: true, videoSource: { validate: function(e4, t2) {
  return t2._preloadCache.videoDeviceId = e4, true;
} }, audioSource: { validate: function(e4, t2) {
  return t2._preloadCache.audioDeviceId = e4, true;
} }, subscribeToTracksAutomatically: { validate: function(e4, t2) {
  return t2._preloadCache.subscribeToTracksAutomatically = e4, true;
} }, theme: { validate: function(e4) {
  var t2 = ["accent", "accentText", "background", "backgroundAccent", "baseText", "border", "mainAreaBg", "mainAreaBgAccent", "mainAreaText", "supportiveText"], n2 = function(e5) {
    for (var n3 = 0, r2 = Object.keys(e5); n3 < r2.length; n3++) {
      var i2 = r2[n3];
      if (!t2.includes(i2)) return console.error('unsupported color "'.concat(i2, '". Valid colors: ').concat(t2.join(", "))), false;
      if (!e5[i2].match(/^#[0-9a-f]{6}|#[0-9a-f]{3}$/i)) return console.error("".concat(i2, ' theme color should be provided in valid hex color format. Received: "').concat(e5[i2], '"')), false;
    }
    return true;
  };
  return "object" === i(e4) && ("light" in e4 && "dark" in e4 || "colors" in e4) ? "light" in e4 && "dark" in e4 ? "colors" in e4.light ? "colors" in e4.dark ? n2(e4.light.colors) && n2(e4.dark.colors) : (console.error('Dark theme is missing "colors" property.', e4), false) : (console.error('Light theme is missing "colors" property.', e4), false) : n2(e4.colors) : (console.error('Theme must contain either both "light" and "dark" properties, or "colors".', e4), false);
}, help: "unsupported theme configuration. Check error logs for detailed info." }, layoutConfig: { validate: function(e4) {
  if ("grid" in e4) {
    var t2 = e4.grid;
    if ("maxTilesPerPage" in t2) {
      if (!Number.isInteger(t2.maxTilesPerPage)) return console.error("grid.maxTilesPerPage should be an integer. You passed ".concat(t2.maxTilesPerPage, ".")), false;
      if (t2.maxTilesPerPage > 49) return console.error("grid.maxTilesPerPage can't be larger than 49 without sacrificing browser performance. Please contact us at https://www.daily.co/contact to talk about your use case."), false;
    }
    if ("minTilesPerPage" in t2) {
      if (!Number.isInteger(t2.minTilesPerPage)) return console.error("grid.minTilesPerPage should be an integer. You passed ".concat(t2.minTilesPerPage, ".")), false;
      if (t2.minTilesPerPage < 1) return console.error("grid.minTilesPerPage can't be lower than 1."), false;
      if ("maxTilesPerPage" in t2 && t2.minTilesPerPage > t2.maxTilesPerPage) return console.error("grid.minTilesPerPage can't be higher than grid.maxTilesPerPage."), false;
    }
  }
  return true;
}, help: "unsupported layoutConfig. Check error logs for detailed info." }, receiveSettings: { validate: function(e4) {
  return kp(e4, { allowAllParticipantsKey: false });
}, help: Tp({ allowAllParticipantsKey: false }) }, sendSettings: { validate: function(e4, t2) {
  return !!function(e5, t3) {
    try {
      return t3.validateUpdateSendSettings(e5), true;
    } catch (e6) {
      return console.error("Failed to validate send settings", e6), false;
    }
  }(e4, t2) && (t2._preloadCache.sendSettings = e4, true);
}, help: "Invalid sendSettings provided. Check error logs for detailed info." }, inputSettings: { validate: function(e4, t2) {
  return !!Ep(e4) && (t2._preloadCache.inputSettings || (t2._preloadCache.inputSettings = {}), Mp(e4), e4.audio && (t2._preloadCache.inputSettings.audio = e4.audio), e4.video && (t2._preloadCache.inputSettings.video = e4.video), true);
}, help: Cp() }, layout: { validate: function(e4) {
  return "custom-v1" === e4 || "browser" === e4 || "none" === e4;
}, help: 'layout may only be set to "custom-v1"', queryString: "layout" }, emb: { queryString: "emb" }, embHref: { queryString: "embHref" }, dailyJsVersion: { queryString: "dailyJsVersion" }, proxy: { queryString: "proxy" }, strictMode: true };
var fp = { styles: { validate: function(e4) {
  for (var t2 in e4) if ("cam" !== t2 && "screen" !== t2) return false;
  if (e4.cam) {
    for (var n2 in e4.cam) if ("div" !== n2 && "video" !== n2) return false;
  }
  if (e4.screen) {
    for (var r2 in e4.screen) if ("div" !== r2 && "video" !== r2) return false;
  }
  return true;
}, help: "styles format should be a subset of: { cam: {div: {}, video: {}}, screen: {div: {}, video: {}} }" }, setSubscribedTracks: { validate: function(e4, t2) {
  if (t2._preloadCache.subscribeToTracksAutomatically) return false;
  var n2 = [true, false, "staged"];
  if (n2.includes(e4) || !Ro() && "avatar" === e4) return true;
  var r2 = ["audio", "video", "screenAudio", "screenVideo", "rmpAudio", "rmpVideo"];
  return function e5(t3) {
    var i2 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
    for (var o2 in t3) if ("custom" === o2) {
      if (!n2.includes(t3[o2]) && !e5(t3[o2], true)) return false;
    } else {
      var a2 = !i2 && !r2.includes(o2), s2 = !n2.includes(t3[o2]);
      if (a2 || s2) return false;
    }
    return true;
  }(e4);
}, help: "setSubscribedTracks cannot be used when setSubscribeToTracksAutomatically is enabled, and should be of the form: " + "true".concat(Ro() ? "" : " | 'avatar'", " | false | 'staged' | { [audio: true|false|'staged'], [video: true|false|'staged'], [screenAudio: true|false|'staged'], [screenVideo: true|false|'staged'] }") }, setAudio: true, setVideo: true, setScreenShare: { validate: function(e4) {
  return false === e4;
}, help: "setScreenShare must be false, as it's only meant for stopping remote participants' screen shares" }, eject: true, updatePermissions: { validate: function(e4) {
  for (var t2 = 0, n2 = Object.entries(e4); t2 < n2.length; t2++) {
    var r2 = v(n2[t2], 2), i2 = r2[0], o2 = r2[1];
    switch (i2) {
      case "hasPresence":
        if ("boolean" != typeof o2) return false;
        break;
      case "canSend":
        if (o2 instanceof Set || o2 instanceof Array) {
          var a2, s2 = ["video", "audio", "screenVideo", "screenAudio", "customVideo", "customAudio"], c2 = tp(o2);
          try {
            for (c2.s(); !(a2 = c2.n()).done; ) {
              var u2 = a2.value;
              if (!s2.includes(u2)) return false;
            }
          } catch (e5) {
            c2.e(e5);
          } finally {
            c2.f();
          }
        } else if ("boolean" != typeof o2) return false;
        o2 instanceof Array && (e4.canSend = new Set(o2));
        break;
      case "canAdmin":
        if (o2 instanceof Set || o2 instanceof Array) {
          var l2, d2 = ["participants", "streaming", "transcription"], h2 = tp(o2);
          try {
            for (h2.s(); !(l2 = h2.n()).done; ) {
              var p2 = l2.value;
              if (!d2.includes(p2)) return false;
            }
          } catch (e5) {
            h2.e(e5);
          } finally {
            h2.f();
          }
        } else if ("boolean" != typeof o2) return false;
        o2 instanceof Array && (e4.canAdmin = new Set(o2));
        break;
      default:
        return false;
    }
  }
  return true;
}, help: "updatePermissions can take hasPresence, canSend, and canAdmin permissions. hasPresence must be a boolean. canSend can be a boolean or an Array or Set of media types (video, audio, screenVideo, screenAudio, customVideo, customAudio). canAdmin can be a boolean or an Array or Set of admin types (participants, streaming, transcription)." } };
var vp = function(t2) {
  l(z2, y);
  var o2, a2, u2, d2, h2, f2, g2, m2, _2, b2, w2, S2, k2, E2, M2, C2, T2, O2, j2, P2, x2, A2, D2, L2, N2, I2, R2, B2, F2, U2, V2, $2, G2, q2, Y2 = ep(z2);
  function z2(e4) {
    var t3, n2, i2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    if (r(this, z2), p(c(t3 = Y2.call(this)), "startListeningForDeviceChanges", function() {
      Yh(t3.handleDeviceChange);
    }), p(c(t3), "stopListeningForDeviceChanges", function() {
      zh(t3.handleDeviceChange);
    }), p(c(t3), "handleDeviceChange", function(e5) {
      e5 = e5.map(function(e6) {
        return JSON.parse(JSON.stringify(e6));
      }), t3.emit(Pi, { action: Pi, availableDevices: e5 });
    }), p(c(t3), "handleNativeAppActiveStateChange", function(e5) {
      t3.disableReactNativeAutoDeviceManagement("video") || (e5 ? t3.camUnmutedBeforeLosingNativeActiveState && t3.setLocalVideo(true) : (t3.camUnmutedBeforeLosingNativeActiveState = t3.localVideo(), t3.camUnmutedBeforeLosingNativeActiveState && t3.setLocalVideo(false)));
    }), p(c(t3), "handleNativeAudioFocusChange", function(e5) {
      t3.disableReactNativeAutoDeviceManagement("audio") || (t3._hasNativeAudioFocus = e5, t3.toggleParticipantAudioBasedOnNativeAudioFocus(), t3._hasNativeAudioFocus ? t3.micUnmutedBeforeLosingNativeAudioFocus && t3.setLocalAudio(true) : (t3.micUnmutedBeforeLosingNativeAudioFocus = t3.localAudio(), t3.setLocalAudio(false)));
    }), p(c(t3), "handleNativeSystemScreenCaptureStop", function() {
      t3.stopScreenShare();
    }), t3.strictMode = void 0 === i2.strictMode || i2.strictMode, Kh) {
      if (t3._logDuplicateInstanceAttempt(), t3.strictMode) throw new Error("Duplicate DailyIframe instances are not allowed");
    } else n2 = c(t3), Kh = n2;
    if (i2.dailyJsVersion = z2.version(), t3._iframe = e4, t3._callObjectMode = "none" === i2.layout && !t3._iframe, t3._preloadCache = { subscribeToTracksAutomatically: true, audioDeviceId: null, videoDeviceId: null, outputDeviceId: null, inputSettings: null, sendSettings: null, videoTrackForNetworkConnectivityTest: null, videoTrackForConnectionQualityTest: null }, t3._callObjectMode && (window._dailyPreloadCache = t3._preloadCache), void 0 !== i2.showLocalVideo ? t3._callObjectMode ? console.error("showLocalVideo is not available in call object mode") : t3._showLocalVideo = !!i2.showLocalVideo : t3._showLocalVideo = true, void 0 !== i2.showParticipantsBar ? t3._callObjectMode ? console.error("showParticipantsBar is not available in call object mode") : t3._showParticipantsBar = !!i2.showParticipantsBar : t3._showParticipantsBar = true, void 0 !== i2.customIntegrations ? t3._callObjectMode ? console.error("customIntegrations is not available in call object mode") : t3._customIntegrations = i2.customIntegrations : t3._customIntegrations = {}, void 0 !== i2.customTrayButtons ? t3._callObjectMode ? console.error("customTrayButtons is not available in call object mode") : t3._customTrayButtons = i2.customTrayButtons : t3._customTrayButtons = {}, void 0 !== i2.activeSpeakerMode ? t3._callObjectMode ? console.error("activeSpeakerMode is not available in call object mode") : t3._activeSpeakerMode = !!i2.activeSpeakerMode : t3._activeSpeakerMode = false, i2.receiveSettings ? t3._callObjectMode ? t3._receiveSettings = i2.receiveSettings : console.error("receiveSettings is only available in call object mode") : t3._receiveSettings = {}, t3.validateProperties(i2), t3.properties = Zh({}, i2), t3._preloadCache.inputSettings || (t3._preloadCache.inputSettings = {}), i2.inputSettings && i2.inputSettings.audio && (t3._preloadCache.inputSettings.audio = i2.inputSettings.audio), i2.inputSettings && i2.inputSettings.video && (t3._preloadCache.inputSettings.video = i2.inputSettings.video), t3._callObjectLoader = t3._callObjectMode ? new va() : null, t3._callState = Ir, t3._isPreparingToJoin = false, t3._accessState = { access: Hr }, t3._meetingSessionSummary = {}, t3._finalSummaryOfPrevSession = {}, t3._meetingSessionState = Lp(op, t3._callObjectMode), t3._nativeInCallAudioMode = rp, t3._participants = {}, t3._participantCounts = ap, t3._rmpPlayerState = {}, t3._waitingParticipants = {}, t3._inputEventsOn = {}, t3._network = { threshold: "good", quality: 100 }, t3._activeSpeaker = {}, t3._callFrameId = de(), t3._localAudioLevel = 0, t3._remoteParticipantsAudioLevel = {}, t3._messageChannel = Ro() ? new ia() : new na(), t3._iframe && (t3._iframe.requestFullscreen ? t3._iframe.addEventListener("fullscreenchange", function() {
      document.fullscreenElement === t3._iframe ? (t3.emit(lo, { action: lo }), t3.sendMessageToCallMachine({ action: lo })) : (t3.emit(ho, { action: ho }), t3.sendMessageToCallMachine({ action: ho }));
    }) : t3._iframe.webkitRequestFullscreen && t3._iframe.addEventListener("webkitfullscreenchange", function() {
      document.webkitFullscreenElement === t3._iframe ? (t3.emit(lo, { action: lo }), t3.sendMessageToCallMachine({ action: lo })) : (t3.emit(ho, { action: ho }), t3.sendMessageToCallMachine({ action: ho }));
    })), Ro()) {
      var o3 = t3.nativeUtils();
      o3.addAudioFocusChangeListener && o3.removeAudioFocusChangeListener && o3.addAppActiveStateChangeListener && o3.removeAppActiveStateChangeListener && o3.addSystemScreenCaptureStopListener && o3.removeSystemScreenCaptureStopListener || console.warn("expected (add|remove)(AudioFocusChange|AppActiveStateChange|SystemScreenCaptureStop)Listener to be available in React Native"), t3._hasNativeAudioFocus = true, o3.addAudioFocusChangeListener(t3.handleNativeAudioFocusChange), o3.addAppActiveStateChangeListener(t3.handleNativeAppActiveStateChange), o3.addSystemScreenCaptureStopListener(t3.handleNativeSystemScreenCaptureStop);
    }
    return t3._callObjectMode && t3.startListeningForDeviceChanges(), t3._messageChannel.addListenerForMessagesFromCallMachine(t3.handleMessageFromCallMachine, t3._callFrameId, c(t3)), t3;
  }
  return s(z2, [{ key: "destroy", value: (q2 = n(function* () {
    try {
      yield this.leave();
    } catch (e5) {
    }
    var e4 = this._iframe;
    if (e4) {
      var t3 = e4.parentElement;
      t3 && t3.removeChild(e4);
    }
    if (this._messageChannel.removeListener(this.handleMessageFromCallMachine), Ro()) {
      var n2 = this.nativeUtils();
      n2.removeAudioFocusChangeListener(this.handleNativeAudioFocusChange), n2.removeAppActiveStateChangeListener(this.handleNativeAppActiveStateChange), n2.removeSystemScreenCaptureStopListener(this.handleNativeSystemScreenCaptureStop);
    }
    this._callObjectMode && this.stopListeningForDeviceChanges(), this.resetMeetingDependentVars(), this._destroyed = true;
    try {
      this.emit("call-instance-destroyed", { action: "call-instance-destroyed" });
    } catch (e5) {
      console.log("could not emit call-instance-destroyed");
    }
    this.strictMode && (this._callFrameId = void 0), Kh = void 0;
  }), function() {
    return q2.apply(this, arguments);
  }) }, { key: "isDestroyed", value: function() {
    return !!this._destroyed;
  } }, { key: "loadCss", value: function(e4) {
    var t3 = e4.bodyClass, n2 = e4.cssFile, r2 = e4.cssText;
    return bp(), this.sendMessageToCallMachine({ action: "load-css", cssFile: this.absoluteUrl(n2), bodyClass: t3, cssText: r2 }), this;
  } }, { key: "iframe", value: function() {
    return bp(), this._iframe;
  } }, { key: "meetingState", value: function() {
    return this._callState;
  } }, { key: "accessState", value: function() {
    return yp(this._callObjectMode, "accessState()"), this._accessState;
  } }, { key: "participants", value: function() {
    return this._participants;
  } }, { key: "participantCounts", value: function() {
    return this._participantCounts;
  } }, { key: "waitingParticipants", value: function() {
    return yp(this._callObjectMode, "waitingParticipants()"), this._waitingParticipants;
  } }, { key: "validateParticipantProperties", value: function(e4, t3) {
    for (var n2 in t3) {
      if (!fp[n2]) throw new Error("unrecognized updateParticipant property ".concat(n2));
      if (fp[n2].validate && !fp[n2].validate(t3[n2], this, this._participants[e4])) throw new Error(fp[n2].help);
    }
  } }, { key: "updateParticipant", value: function(e4, t3) {
    return this._participants.local && this._participants.local.session_id === e4 && (e4 = "local"), e4 && t3 && (this.validateParticipantProperties(e4, t3), this.sendMessageToCallMachine({ action: "update-participant", id: e4, properties: t3 })), this;
  } }, { key: "updateParticipants", value: function(e4) {
    var t3 = this._participants.local && this._participants.local.session_id;
    for (var n2 in e4) n2 === t3 && (n2 = "local"), n2 && e4[n2] && this.validateParticipantProperties(n2, e4[n2]);
    return this.sendMessageToCallMachine({ action: "update-participants", participants: e4 }), this;
  } }, { key: "updateWaitingParticipant", value: (G2 = n(function* () {
    var e4 = this, t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "", n2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    if (yp(this._callObjectMode, "updateWaitingParticipant()"), mp(this._callState, "updateWaitingParticipant()"), "string" != typeof t3 || "object" !== i(n2)) throw new Error("updateWaitingParticipant() must take an id string and a updates object");
    return new Promise(function(r2, i2) {
      e4.sendMessageToCallMachine({ action: "daily-method-update-waiting-participant", id: t3, updates: n2 }, function(e5) {
        e5.error && i2(e5.error), e5.id || i2(new Error("unknown error in updateWaitingParticipant()")), r2({ id: e5.id });
      });
    });
  }), function() {
    return G2.apply(this, arguments);
  }) }, { key: "updateWaitingParticipants", value: ($2 = n(function* () {
    var e4 = this, t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
    if (yp(this._callObjectMode, "updateWaitingParticipants()"), mp(this._callState, "updateWaitingParticipants()"), "object" !== i(t3)) throw new Error("updateWaitingParticipants() must take a mapping between ids and update objects");
    return new Promise(function(n2, r2) {
      e4.sendMessageToCallMachine({ action: "daily-method-update-waiting-participants", updatesById: t3 }, function(e5) {
        e5.error && r2(e5.error), e5.ids || r2(new Error("unknown error in updateWaitingParticipants()")), n2({ ids: e5.ids });
      });
    });
  }), function() {
    return $2.apply(this, arguments);
  }) }, { key: "requestAccess", value: (V2 = n(function* () {
    var e4 = this, t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, n2 = t3.access, r2 = void 0 === n2 ? { level: Kr } : n2, i2 = t3.name, o3 = void 0 === i2 ? "" : i2;
    return yp(this._callObjectMode, "requestAccess()"), mp(this._callState, "requestAccess()"), new Promise(function(t4, n3) {
      e4.sendMessageToCallMachine({ action: "daily-method-request-access", access: r2, name: o3 }, function(e5) {
        e5.error && n3(e5.error), e5.access || n3(new Error("unknown error in requestAccess()")), t4({ access: e5.access, granted: e5.granted });
      });
    });
  }), function() {
    return V2.apply(this, arguments);
  }) }, { key: "localAudio", value: function() {
    return this._participants.local ? this._participants.local.audio : null;
  } }, { key: "localVideo", value: function() {
    return this._participants.local ? this._participants.local.video : null;
  } }, { key: "setLocalAudio", value: function(e4) {
    return this.sendMessageToCallMachine({ action: "local-audio", state: e4 }), this;
  } }, { key: "setLocalVideo", value: function(e4) {
    return this.sendMessageToCallMachine({ action: "local-video", state: e4 }), this;
  } }, { key: "getReceiveSettings", value: (U2 = n(function* (e4) {
    var t3 = this, n2 = (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}).showInheritedValues, r2 = void 0 !== n2 && n2;
    if (yp(this._callObjectMode, "getReceiveSettings()"), !this._dailyMainExecuted) return this._receiveSettings;
    switch (i(e4)) {
      case "string":
        return new Promise(function(n3) {
          t3.sendMessageToCallMachine({ action: "get-single-participant-receive-settings", id: e4, showInheritedValues: r2 }, function(e5) {
            n3(e5.receiveSettings);
          });
        });
      case "undefined":
        return this._receiveSettings;
      default:
        throw new Error('first argument to getReceiveSettings() must be a participant id (or "base"), or there should be no arguments');
    }
  }), function(e4) {
    return U2.apply(this, arguments);
  }) }, { key: "updateReceiveSettings", value: (F2 = n(function* (e4) {
    var t3 = this;
    if (yp(this._callObjectMode, "updateReceiveSettings()"), !kp(e4, { allowAllParticipantsKey: true })) throw new Error(Tp({ allowAllParticipantsKey: true }));
    return mp(this._callState, "updateReceiveSettings()", "To specify receive settings earlier, use the receiveSettings config property."), new Promise(function(n2) {
      t3.sendMessageToCallMachine({ action: "update-receive-settings", receiveSettings: e4 }, function(e5) {
        n2({ receiveSettings: e5.receiveSettings });
      });
    });
  }), function(e4) {
    return F2.apply(this, arguments);
  }) }, { key: "_prepInputSettingsToPresentToUser", value: function(e4) {
    var t3, n2, r2, i2, o3, a3, s2, c2;
    if (e4) {
      var u3 = {}, l2 = "none" === (null === (t3 = e4.audio) || void 0 === t3 || null === (n2 = t3.processor) || void 0 === n2 ? void 0 : n2.type) && (null === (r2 = e4.audio) || void 0 === r2 || null === (i2 = r2.processor) || void 0 === i2 ? void 0 : i2._isDefaultWhenNone);
      if (e4.audio && !l2) {
        var d3 = Zh({}, e4.audio.processor);
        delete d3._isDefaultWhenNone, u3.audio = Zh(Zh({}, e4.audio), {}, { processor: d3 });
      }
      var h3 = "none" === (null === (o3 = e4.video) || void 0 === o3 || null === (a3 = o3.processor) || void 0 === a3 ? void 0 : a3.type) && (null === (s2 = e4.video) || void 0 === s2 || null === (c2 = s2.processor) || void 0 === c2 ? void 0 : c2._isDefaultWhenNone);
      if (e4.video && !h3) {
        var p2 = Zh({}, e4.video.processor);
        delete p2._isDefaultWhenNone, u3.video = Zh(Zh({}, e4.video), {}, { processor: p2 });
      }
      return u3;
    }
  } }, { key: "getInputSettings", value: function() {
    var e4 = this;
    return new Promise(function(t3) {
      t3(e4._getInputSettings());
    });
  } }, { key: "_getInputSettings", value: function() {
    var e4, t3, n2, r2, i2, o3, a3, s2, c2 = { processor: { type: "none", _isDefaultWhenNone: true } };
    this._inputSettings ? (e4 = (null === (n2 = this._inputSettings) || void 0 === n2 ? void 0 : n2.video) || c2, t3 = (null === (r2 = this._inputSettings) || void 0 === r2 ? void 0 : r2.audio) || c2) : (e4 = (null === (i2 = this._preloadCache) || void 0 === i2 || null === (o3 = i2.inputSettings) || void 0 === o3 ? void 0 : o3.video) || c2, t3 = (null === (a3 = this._preloadCache) || void 0 === a3 || null === (s2 = a3.inputSettings) || void 0 === s2 ? void 0 : s2.audio) || c2);
    var u3 = { audio: t3, video: e4 };
    return this._prepInputSettingsToPresentToUser(u3);
  } }, { key: "updateInputSettings", value: (B2 = n(function* (e4) {
    var t3 = this;
    return Ep(e4) ? (e4 && (this._preloadCache.inputSettings || (this._preloadCache.inputSettings = {}), Mp(e4), e4.audio && (this._preloadCache.inputSettings.audio = e4.audio), e4.video && (this._preloadCache.inputSettings.video = e4.video)), Ep(e4) ? this._callObjectMode && this.needsLoad() ? this._getInputSettings() : new Promise(function(n2, r2) {
      t3.sendMessageToCallMachine({ action: "update-input-settings", inputSettings: e4 }, function(e5) {
        e5.error ? r2(e5.error) : n2({ inputSettings: t3._prepInputSettingsToPresentToUser(e5.inputSettings) });
      });
    }) : this._getInputSettings()) : (console.error(Cp()), Promise.reject(Cp()));
  }), function(e4) {
    return B2.apply(this, arguments);
  }) }, { key: "setBandwidth", value: function(e4) {
    var t3 = e4.kbs, n2 = e4.trackConstraints;
    if (bp(), this._dailyMainExecuted) return this.sendMessageToCallMachine({ action: "set-bandwidth", kbs: t3, trackConstraints: n2 }), this;
  } }, { key: "getDailyLang", value: function() {
    var e4 = this;
    if (bp(), this._dailyMainExecuted) return new Promise(function() {
      var t3 = n(function* (t4) {
        e4.sendMessageToCallMachine({ action: "get-daily-lang" }, function(e5) {
          delete e5.action, delete e5.callbackStamp, t4(e5);
        });
      });
      return function(e5) {
        return t3.apply(this, arguments);
      };
    }());
  } }, { key: "setDailyLang", value: function(e4) {
    return bp(), this.sendMessageToCallMachine({ action: "set-daily-lang", lang: e4 }), this;
  } }, { key: "setProxyUrl", value: function(e4) {
    return this.sendMessageToCallMachine({ action: "set-proxy-url", proxyUrl: e4 }), this;
  } }, { key: "setIceConfig", value: function(e4) {
    return this.sendMessageToCallMachine({ action: "set-ice-config", iceConfig: e4 }), this;
  } }, { key: "meetingSessionSummary", value: function() {
    return [Vr, $r].includes(this._callState) ? this._finalSummaryOfPrevSession : this._meetingSessionSummary;
  } }, { key: "getMeetingSession", value: (R2 = n(function* () {
    var e4 = this;
    return console.warn("getMeetingSession() is deprecated: use meetingSessionSummary(), which will return immediately"), mp(this._callState, "getMeetingSession()"), new Promise(function(t3) {
      e4.sendMessageToCallMachine({ action: "get-meeting-session" }, function(e5) {
        delete e5.action, delete e5.callbackStamp, delete e5.callFrameId, t3(e5);
      });
    });
  }), function() {
    return R2.apply(this, arguments);
  }) }, { key: "meetingSessionState", value: function() {
    if (this._callState !== Ur) throw new Error("meetingSessionState() is only available when joined");
    return this._meetingSessionState;
  } }, { key: "setMeetingSessionData", value: function(e4) {
    var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "replace";
    if (yp(this._callObjectMode, "setMeetingSessionData()"), this._callState !== Ur) throw new Error("setMeetingSessionData() is only available when joined");
    try {
      !function(e5, t4) {
        new da({ data: e5, mergeStrategy: t4 });
      }(e4, t3);
    } catch (e5) {
      throw console.error(e5), e5;
    }
    try {
      this.sendMessageToCallMachine({ action: "set-session-data", data: e4, mergeStrategy: t3 });
    } catch (e5) {
      throw new Error("Error setting meeting session data: ".concat(e5));
    }
  } }, { key: "setUserName", value: function(e4, t3) {
    var n2 = this;
    return this.properties.userName = e4, new Promise(function(r2) {
      n2.sendMessageToCallMachine({ action: "set-user-name", name: null != e4 ? e4 : "", thisMeetingOnly: Ro() || !!t3 && !!t3.thisMeetingOnly }, function(e5) {
        delete e5.action, delete e5.callbackStamp, r2(e5);
      });
    });
  } }, { key: "setUserData", value: (I2 = n(function* (e4) {
    var t3 = this;
    try {
      Sp(e4);
    } catch (e5) {
      throw console.error(e5), e5;
    }
    if (this.properties.userData = e4, this._dailyMainExecuted) return new Promise(function(n2) {
      try {
        t3.sendMessageToCallMachine({ action: "set-user-data", userData: e4 }, function(e5) {
          delete e5.action, delete e5.callbackStamp, delete e5.callFrameId, n2(e5);
        });
      } catch (e5) {
        throw new Error("Error setting user data: ".concat(e5));
      }
    });
  }), function(e4) {
    return I2.apply(this, arguments);
  }) }, { key: "validateAudioLevelInterval", value: function(e4) {
    if (e4 && (e4 < 100 || "number" != typeof e4)) throw new Error("The interval must be a number greater than or equal to 100 milliseconds.");
  } }, { key: "startLocalAudioLevelObserver", value: function(e4) {
    var t3 = this;
    if (bp(), this.validateAudioLevelInterval(e4), this._dailyMainExecuted) return new Promise(function(n2, r2) {
      t3.sendMessageToCallMachine({ action: "start-local-audio-level-observer", interval: e4 }, function(e5) {
        e5.error ? r2({ error: e5.error }) : n2();
      });
    });
    this._preloadCache.localAudioLevelObserver = { enabled: true, interval: e4 };
  } }, { key: "stopLocalAudioLevelObserver", value: (N2 = n(function* () {
    bp(), this._preloadCache.localAudioLevelObserver = null, this._localAudioLevel = 0, this.sendMessageToCallMachine({ action: "stop-local-audio-level-observer" });
  }), function() {
    return N2.apply(this, arguments);
  }) }, { key: "startRemoteParticipantsAudioLevelObserver", value: function(e4) {
    var t3 = this;
    if (bp(), this.validateAudioLevelInterval(e4), this._dailyMainExecuted) return new Promise(function(n2, r2) {
      t3.sendMessageToCallMachine({ action: "start-remote-participants-audio-level-observer", interval: e4 }, function(e5) {
        e5.error ? r2({ error: e5.error }) : n2();
      });
    });
    this._preloadCache.remoteParticipantsAudioLevelObserver = { enabled: true, interval: e4 };
  } }, { key: "stopRemoteParticipantsAudioLevelObserver", value: (L2 = n(function* () {
    bp(), this._preloadCache.remoteParticipantsAudioLevelObserver = null, this._remoteParticipantsAudioLevel = {}, this.sendMessageToCallMachine({ action: "stop-remote-participants-audio-level-observer" });
  }), function() {
    return L2.apply(this, arguments);
  }) }, { key: "startCamera", value: (D2 = n(function* () {
    var e4 = this, t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
    if (yp(this._callObjectMode, "startCamera()"), [Fr, Ur].includes(this._callState)) throw new Error("startCamera() not supported after joining a meeting: did you mean to use setLocalAudio() and/or setLocalVideo() instead?");
    if (this.needsLoad()) try {
      yield this.load(t3);
    } catch (e5) {
      return Promise.reject(e5);
    }
    else {
      if (this._didPreAuth) {
        if (t3.url && t3.url !== this.properties.url) return console.error("url in startCamera() is different than the one used in preAuth()"), Promise.reject();
        if (t3.token && t3.token !== this.properties.token) return console.error("token in startCamera() is different than the one used in preAuth()"), Promise.reject();
      }
      this.validateProperties(t3), this.properties = Zh(Zh({}, this.properties), t3);
    }
    return new Promise(function(t4) {
      e4.sendMessageToCallMachine({ action: "start-camera", properties: gp(e4.properties), preloadCache: gp(e4._preloadCache) }, function(e5) {
        delete e5.action, delete e5.callbackStamp, t4(e5);
      });
    });
  }), function() {
    return D2.apply(this, arguments);
  }) }, { key: "validateCustomTrack", value: function(e4, t3, n2) {
    if (n2 && n2.length > 50) throw new Error("Custom track `trackName` must not be more than 50 characters");
    if (t3 && "music" !== t3 && "speech" !== t3 && !(t3 instanceof Object)) throw new Error("Custom track `mode` must be either `music` | `speech` | `DailyMicAudioModeSettings` or `undefined`");
    if (!!n2 && ["cam-audio", "cam-video", "screen-video", "screen-audio", "rmpAudio", "rmpVideo", "customVideoDefaults"].includes(n2)) throw new Error("Custom track `trackName` must not match a track name already used by daily: cam-audio, cam-video, customVideoDefaults, screen-video, screen-audio, rmpAudio, rmpVideo");
    if (!(e4 instanceof MediaStreamTrack)) throw new Error("Custom tracks provided must be instances of MediaStreamTrack");
  } }, { key: "startCustomTrack", value: function() {
    var e4 = this, t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : { track, mode, trackName };
    if (bp(), this.validateCustomTrack(t3.track, t3.mode, t3.trackName), this._callState !== Ur) throw new Error("startCustomTrack() is only allowed when joined");
    return new Promise(function(n2, r2) {
      window._dailyPreloadCache.customTrack = t3.track, t3.track = Oo, e4.sendMessageToCallMachine({ action: "start-custom-track", properties: t3 }, function(e5) {
        e5.error ? r2({ error: e5.error }) : n2(e5.mediaTag);
      });
    });
  } }, { key: "stopCustomTrack", value: function(e4) {
    var t3 = this;
    if (bp(), this._callState !== Ur) throw new Error("stopCustomTrack() is only allowed when joined");
    return new Promise(function(n2) {
      t3.sendMessageToCallMachine({ action: "stop-custom-track", mediaTag: e4 }, function(e5) {
        n2(e5.mediaTag);
      });
    });
  } }, { key: "setCamera", value: function(e4) {
    var t3 = this;
    if (wp(), this.needsLoad()) throw new Error("Before you can invoke setCamera, first you need to invoke one of these methods: join, startCamera, or preAuth");
    return new Promise(function(n2) {
      t3.sendMessageToCallMachine({ action: "set-camera", cameraDeviceId: e4 }, function(e5) {
        n2({ device: e5.device });
      });
    });
  } }, { key: "setAudioDevice", value: (A2 = n(function* (e4) {
    return wp(), this.nativeUtils().setAudioDevice(e4), { deviceId: yield this.nativeUtils().getAudioDevice() };
  }), function(e4) {
    return A2.apply(this, arguments);
  }) }, { key: "cycleCamera", value: function() {
    var e4 = this;
    return new Promise(function(t3) {
      e4.sendMessageToCallMachine({ action: "cycle-camera" }, function(e5) {
        t3({ device: e5.device });
      });
    });
  } }, { key: "cycleMic", value: function() {
    var e4 = this;
    return bp(), new Promise(function(t3) {
      e4.sendMessageToCallMachine({ action: "cycle-mic" }, function(e5) {
        t3({ device: e5.device });
      });
    });
  } }, { key: "getCameraFacingMode", value: function() {
    var e4 = this;
    return wp(), new Promise(function(t3) {
      e4.sendMessageToCallMachine({ action: "get-camera-facing-mode" }, function(e5) {
        t3(e5.facingMode);
      });
    });
  } }, { key: "setInputDevicesAsync", value: (x2 = n(function* (e4) {
    var t3 = this, n2 = e4.audioDeviceId, r2 = e4.videoDeviceId, i2 = e4.audioSource, o3 = e4.videoSource;
    return bp(), void 0 !== i2 && (n2 = i2), void 0 !== o3 && (r2 = o3), n2 && (this._preloadCache.audioDeviceId = n2), r2 && (this._preloadCache.videoDeviceId = r2), this._callObjectMode && this.needsLoad() ? { camera: { deviceId: this._preloadCache.videoDeviceId }, mic: { deviceId: this._preloadCache.audioDeviceId }, speaker: { deviceId: this._preloadCache.outputDeviceId } } : (n2 instanceof MediaStreamTrack && (n2 = Oo), r2 instanceof MediaStreamTrack && (r2 = Oo), new Promise(function(e5) {
      t3.sendMessageToCallMachine({ action: "set-input-devices", audioDeviceId: n2, videoDeviceId: r2 }, function(n3) {
        delete n3.action, delete n3.callbackStamp, n3.returnPreloadCache ? e5({ camera: { deviceId: t3._preloadCache.videoDeviceId }, mic: { deviceId: t3._preloadCache.audioDeviceId }, speaker: { deviceId: t3._preloadCache.outputDeviceId } }) : e5(n3);
      });
    }));
  }), function(e4) {
    return x2.apply(this, arguments);
  }) }, { key: "setOutputDeviceAsync", value: (P2 = n(function* (e4) {
    var t3 = this, n2 = e4.outputDeviceId;
    return bp(), n2 && (this._preloadCache.outputDeviceId = n2), this._callObjectMode && this.needsLoad() ? { camera: { deviceId: this._preloadCache.videoDeviceId }, mic: { deviceId: this._preloadCache.audioDeviceId }, speaker: { deviceId: this._preloadCache.outputDeviceId } } : new Promise(function(e5) {
      t3.sendMessageToCallMachine({ action: "set-output-device", outputDeviceId: n2 }, function(n3) {
        delete n3.action, delete n3.callbackStamp, n3.returnPreloadCache ? e5({ camera: { deviceId: t3._preloadCache.videoDeviceId }, mic: { deviceId: t3._preloadCache.audioDeviceId }, speaker: { deviceId: t3._preloadCache.outputDeviceId } }) : e5(n3);
      });
    });
  }), function(e4) {
    return P2.apply(this, arguments);
  }) }, { key: "getInputDevices", value: (j2 = n(function* () {
    var e4 = this;
    return this._callObjectMode && this.needsLoad() ? { camera: { deviceId: this._preloadCache.videoDeviceId }, mic: { deviceId: this._preloadCache.audioDeviceId }, speaker: { deviceId: this._preloadCache.outputDeviceId } } : new Promise(function(t3) {
      e4.sendMessageToCallMachine({ action: "get-input-devices" }, function(n2) {
        delete n2.action, delete n2.callbackStamp, n2.returnPreloadCache ? t3({ camera: { deviceId: e4._preloadCache.videoDeviceId }, mic: { deviceId: e4._preloadCache.audioDeviceId }, speaker: { deviceId: e4._preloadCache.outputDeviceId } }) : t3(n2);
      });
    });
  }), function() {
    return j2.apply(this, arguments);
  }) }, { key: "nativeInCallAudioMode", value: function() {
    return wp(), this._nativeInCallAudioMode;
  } }, { key: "setNativeInCallAudioMode", value: function(e4) {
    if (wp(), [rp, ip].includes(e4)) {
      if (e4 !== this._nativeInCallAudioMode) return this._nativeInCallAudioMode = e4, !this.disableReactNativeAutoDeviceManagement("audio") && this._isCallPendingOrOngoing(this._callState, this._isPreparingToJoin) && this.nativeUtils().setAudioMode(this._nativeInCallAudioMode), this;
    } else console.error("invalid in-call audio mode specified: ", e4);
  } }, { key: "preAuth", value: (O2 = n(function* () {
    var e4 = this, t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
    if (yp(this._callObjectMode, "preAuth()"), [Fr, Ur].includes(this._callState)) throw new Error("preAuth() not supported after joining a meeting");
    if (this.needsLoad() && (yield this.load(t3)), !t3.url) throw new Error("preAuth() requires at least a url to be provided");
    return this.validateProperties(t3), this.properties = Zh(Zh({}, this.properties), t3), new Promise(function(t4, n2) {
      e4.sendMessageToCallMachine({ action: "daily-method-preauth", properties: gp(e4.properties), preloadCache: gp(e4._preloadCache) }, function(r2) {
        return r2.error ? n2(r2.error) : r2.access ? (e4._didPreAuth = true, void t4({ access: r2.access })) : n2(new Error("unknown error in preAuth()"));
      });
    });
  }), function() {
    return O2.apply(this, arguments);
  }) }, { key: "load", value: (T2 = n(function* (e4) {
    var t3 = this;
    if (this.needsLoad()) {
      if (this._destroyed && (this._logUseAfterDestroy(), this.strictMode)) throw new Error("Use after destroy");
      if (e4 && (this.validateProperties(e4), this.properties = Zh(Zh({}, this.properties), e4)), !this._callObjectMode && !this.properties.url) throw new Error("can't load iframe meeting because url property isn't set");
      this._updateCallState(Rr);
      try {
        this.emit(Si, { action: Si });
      } catch (e5) {
        console.log("could not emit 'loading'", e5);
      }
      return this._callObjectMode ? new Promise(function(e5, n2) {
        t3._callObjectLoader.cancel(), t3._callObjectLoader.load(t3._callFrameId, t3.properties.dailyConfig && t3.properties.dailyConfig.avoidEval, function(n3) {
          t3._updateCallState(Br), n3 && t3.emit(Ei, { action: Ei }), e5();
        }, function(e6, r2) {
          if (t3.emit(ki, { action: ki, errorMsg: e6 }), !r2) {
            t3._updateCallState($r), t3.resetMeetingDependentVars();
            var i2 = { action: wo, errorMsg: e6, error: { type: "connection-error", msg: "Failed to load call object bundle.", details: { on: "load", sourceError: new Error(e6), bundleUrl: fe() } } };
            t3._maybeSendToSentry(i2), t3.emit(wo, i2), n2(e6);
          }
        });
      }) : (this._iframe.src = pe(this.assembleMeetingUrl()), new Promise(function(e5, n2) {
        t3._loadedCallback = function(r2) {
          if (t3._callState !== $r) {
            for (var i2 in t3._updateCallState(Br), (t3.properties.cssFile || t3.properties.cssText) && t3.loadCss(t3.properties), t3._inputEventsOn) t3.sendMessageToCallMachine({ action: Mo, on: i2 });
            e5();
          } else n2(r2);
        };
      }));
    }
  }), function(e4) {
    return T2.apply(this, arguments);
  }) }, { key: "join", value: (C2 = n(function* () {
    var e4 = this, t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, n2 = false;
    if (this.needsLoad()) {
      this.updateIsPreparingToJoin(true);
      try {
        yield this.load(t3);
      } catch (e5) {
        return this.updateIsPreparingToJoin(false), Promise.reject(e5);
      }
    } else {
      if (n2 = !(!this.properties.cssFile && !this.properties.cssText), this._didPreAuth) {
        if (t3.url && t3.url !== this.properties.url) return console.error("url in join() is different than the one used in preAuth()"), this.updateIsPreparingToJoin(false), Promise.reject();
        if (t3.token && t3.token !== this.properties.token) return console.error("token in join() is different than the one used in preAuth()"), this.updateIsPreparingToJoin(false), Promise.reject();
      }
      if (t3.url && !this._callObjectMode && t3.url && t3.url !== this.properties.url) return console.error("url in join() is different than the one used in load() (".concat(this.properties.url, " -> ").concat(t3.url, ")")), this.updateIsPreparingToJoin(false), Promise.reject();
      this.validateProperties(t3), this.properties = Zh(Zh({}, this.properties), t3);
    }
    if (void 0 !== t3.showLocalVideo && (this._callObjectMode ? console.error("showLocalVideo is not available in callObject mode") : this._showLocalVideo = !!t3.showLocalVideo), void 0 !== t3.showParticipantsBar && (this._callObjectMode ? console.error("showParticipantsBar is not available in callObject mode") : this._showParticipantsBar = !!t3.showParticipantsBar), this._callState === Ur || this._callState === Fr) return console.warn("already joined meeting, call leave() before joining again"), void this.updateIsPreparingToJoin(false);
    this._updateCallState(Fr, false);
    try {
      this.emit(Ti, { action: Ti });
    } catch (e5) {
      console.log("could not emit 'joining-meeting'", e5);
    }
    return this._preloadCache.inputSettings || (this._preloadCache.inputSettings = {}), t3.inputSettings && t3.inputSettings.audio && (this._preloadCache.inputSettings.audio = t3.inputSettings.audio), t3.inputSettings && t3.inputSettings.video && (this._preloadCache.inputSettings.video = t3.inputSettings.video), this.sendMessageToCallMachine({ action: "join-meeting", properties: gp(this.properties), preloadCache: gp(this._preloadCache) }), new Promise(function(t4, r2) {
      e4._joinedCallback = function(i2, o3) {
        if (e4._callState !== $r) {
          if (e4._updateCallState(Ur), i2) for (var a3 in i2) e4._callObjectMode && (Ah(i2[a3]), Dh(i2[a3]), Nh(i2[a3], e4._participants[a3])), e4._participants[a3] = Zh({}, i2[a3]), e4.toggleParticipantAudioBasedOnNativeAudioFocus();
          n2 && e4.loadCss(e4.properties), t4(i2);
        } else r2(o3);
      };
    });
  }), function() {
    return C2.apply(this, arguments);
  }) }, { key: "leave", value: (M2 = n(function* () {
    var e4 = this;
    return new Promise(function(t3) {
      if (e4._callState === Vr || e4._callState === $r) t3();
      else if (e4._callObjectLoader && !e4._callObjectLoader.loaded) {
        e4._callObjectLoader.cancel(), e4._updateCallState(Vr), e4.resetMeetingDependentVars();
        try {
          e4.emit(Vr, { action: Vr });
        } catch (e5) {
          console.log("could not emit 'left-meeting'", e5);
        }
        t3();
      } else e4._resolveLeave = t3, e4.sendMessageToCallMachine({ action: "leave-meeting" });
    });
  }), function() {
    return M2.apply(this, arguments);
  }) }, { key: "startScreenShare", value: (E2 = n(function* () {
    var e4 = this, t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
    if (this._dailyMainExecuted) if (t3.screenVideoSendSettings && this._validateVideoSendSettings("screenVideo", t3.screenVideoSendSettings), t3.mediaStream && (this._preloadCache.screenMediaStream = t3.mediaStream, t3.mediaStream = Oo), "undefined" != typeof DailyNativeUtils && void 0 !== DailyNativeUtils.isIOS && DailyNativeUtils.isIOS) {
      var n2 = this.nativeUtils();
      if (yield n2.isScreenBeingCaptured()) return void this.emit(bo, { action: bo, type: "screen-share-error", errorMsg: "Could not start the screen sharing. The screen is already been captured!" });
      n2.setSystemScreenCaptureStartCallback(function() {
        n2.setSystemScreenCaptureStartCallback(null), e4.sendMessageToCallMachine({ action: Eo, captureOptions: t3 });
      }), n2.presentSystemScreenCapturePrompt();
    } else this.sendMessageToCallMachine({ action: Eo, captureOptions: t3 });
  }), function() {
    return E2.apply(this, arguments);
  }) }, { key: "stopScreenShare", value: function() {
    this._dailyMainExecuted && this.sendMessageToCallMachine({ action: "local-screen-stop" });
  } }, { key: "startRecording", value: function() {
    var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
    this.sendMessageToCallMachine(Zh({ action: "local-recording-start" }, e4));
  } }, { key: "updateRecording", value: function(e4) {
    var t3 = e4.layout, n2 = void 0 === t3 ? { preset: "default" } : t3, r2 = e4.instanceId;
    this.sendMessageToCallMachine({ action: "daily-method-update-recording", layout: n2, instanceId: r2 });
  } }, { key: "stopRecording", value: function() {
    var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
    this.sendMessageToCallMachine(Zh({ action: "local-recording-stop" }, e4));
  } }, { key: "startLiveStreaming", value: function() {
    var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
    this.sendMessageToCallMachine(Zh({ action: "daily-method-start-live-streaming" }, e4));
  } }, { key: "updateLiveStreaming", value: function(e4) {
    var t3 = e4.layout, n2 = void 0 === t3 ? { preset: "default" } : t3, r2 = e4.instanceId;
    this.sendMessageToCallMachine({ action: "daily-method-update-live-streaming", layout: n2, instanceId: r2 });
  } }, { key: "addLiveStreamingEndpoints", value: function(e4) {
    var t3 = e4.endpoints, n2 = e4.instanceId;
    this.sendMessageToCallMachine({ action: Co, endpointsOp: Lo, endpoints: t3, instanceId: n2 });
  } }, { key: "removeLiveStreamingEndpoints", value: function(e4) {
    var t3 = e4.endpoints, n2 = e4.instanceId;
    this.sendMessageToCallMachine({ action: Co, endpointsOp: No, endpoints: t3, instanceId: n2 });
  } }, { key: "stopLiveStreaming", value: function() {
    var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
    this.sendMessageToCallMachine(Zh({ action: "daily-method-stop-live-streaming" }, e4));
  } }, { key: "validateDailyConfig", value: function(e4) {
    e4.camSimulcastEncodings && (console.warn("camSimulcastEncodings is deprecated. Use sendSettings, found in DailyCallOptions, to provide camera simulcast settings."), this.validateSimulcastEncodings(e4.camSimulcastEncodings)), e4.screenSimulcastEncodings && console.warn("screenSimulcastEncodings is deprecated. Use sendSettings, found in DailyCallOptions, to provide screen simulcast settings.");
  } }, { key: "validateSimulcastEncodings", value: function(e4) {
    var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null, n2 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
    if (e4) {
      if (!(e4 instanceof Array)) throw new Error("encodings must be an Array");
      if (!Dp(e4.length, 1, 3)) throw new Error("encodings must be an Array with between 1 to ".concat(3, " layers"));
      for (var r2 = 0; r2 < e4.length; r2++) {
        var i2 = e4[r2];
        for (var o3 in this._validateEncodingLayerHasValidProperties(i2), i2) {
          if (!cp.includes(o3)) throw new Error("Invalid key ".concat(o3, ", valid keys are:") + Object.values(cp));
          if ("number" != typeof i2[o3]) throw new Error("".concat(o3, " must be a number"));
          if (t3) {
            var a3 = t3[o3], s2 = a3.min, c2 = a3.max;
            if (!Dp(i2[o3], s2, c2)) throw new Error("".concat(o3, " value not in range. valid range: ").concat(s2, " to ").concat(c2));
          }
        }
        if (n2 && !i2.hasOwnProperty("maxBitrate")) throw new Error("maxBitrate is not specified");
      }
    }
  } }, { key: "startRemoteMediaPlayer", value: (k2 = n(function* (e4) {
    var t3 = this, r2 = e4.url, i2 = e4.settings, o3 = void 0 === i2 ? { state: xo.PLAY } : i2;
    try {
      !function(e5) {
        if ("string" != typeof e5) throw new Error('url parameter must be "string" type');
      }(r2), Ap(o3), function(e5) {
        for (var t4 in e5) if (!up.includes(t4)) throw new Error("Invalid key ".concat(t4, ", valid keys are: ").concat(up));
        e5.simulcastEncodings && this.validateSimulcastEncodings(e5.simulcastEncodings, sp, true);
      }(o3);
    } catch (e5) {
      throw console.error("invalid argument Error: ".concat(e5)), console.error('startRemoteMediaPlayer arguments must be of the form: \n  { url: "playback url", \n  settings?: \n  {state: "play"|"pause", simulcastEncodings?: [{}] } }'), e5;
    }
    return new Promise(function() {
      var e5 = n(function* (e6, n2) {
        t3.sendMessageToCallMachine({ action: "daily-method-start-remote-media-player", url: r2, settings: o3 }, function(t4) {
          t4.error ? n2({ error: t4.error, errorMsg: t4.errorMsg }) : e6({ session_id: t4.session_id, remoteMediaPlayerState: { state: t4.state, settings: t4.settings } });
        });
      });
      return function(t4, n2) {
        return e5.apply(this, arguments);
      };
    }());
  }), function(e4) {
    return k2.apply(this, arguments);
  }) }, { key: "stopRemoteMediaPlayer", value: (S2 = n(function* (e4) {
    var t3 = this;
    if ("string" != typeof e4) throw new Error(" remotePlayerID must be of type string");
    return new Promise(function() {
      var r2 = n(function* (n2, r3) {
        t3.sendMessageToCallMachine({ action: "daily-method-stop-remote-media-player", session_id: e4 }, function(e5) {
          e5.error ? r3({ error: e5.error, errorMsg: e5.errorMsg }) : n2();
        });
      });
      return function(e5, t4) {
        return r2.apply(this, arguments);
      };
    }());
  }), function(e4) {
    return S2.apply(this, arguments);
  }) }, { key: "updateRemoteMediaPlayer", value: (w2 = n(function* (e4) {
    var t3 = this, r2 = e4.session_id, i2 = e4.settings;
    try {
      Ap(i2);
    } catch (e5) {
      throw console.error("invalid argument Error: ".concat(e5)), console.error('updateRemoteMediaPlayer arguments must be of the form: \n  session_id: "participant session", \n  { settings?: {state: "play"|"pause"} }'), e5;
    }
    return new Promise(function() {
      var e5 = n(function* (e6, n2) {
        t3.sendMessageToCallMachine({ action: "daily-method-update-remote-media-player", session_id: r2, settings: i2 }, function(t4) {
          t4.error ? n2({ error: t4.error, errorMsg: t4.errorMsg }) : e6({ session_id: t4.session_id, remoteMediaPlayerState: { state: t4.state, settings: t4.settings } });
        });
      });
      return function(t4, n2) {
        return e5.apply(this, arguments);
      };
    }());
  }), function(e4) {
    return w2.apply(this, arguments);
  }) }, { key: "startTranscription", value: function(e4) {
    this.sendMessageToCallMachine(Zh({ action: "daily-method-start-transcription" }, e4));
  } }, { key: "stopTranscription", value: function() {
    this.sendMessageToCallMachine({ action: "daily-method-stop-transcription" });
  } }, { key: "getNetworkStats", value: function() {
    var e4 = this;
    if (this._callState !== Ur) {
      return { stats: { latest: {} } };
    }
    return new Promise(function(t3) {
      e4.sendMessageToCallMachine({ action: "get-calc-stats" }, function(n2) {
        t3(Zh({ stats: n2.stats }, e4._network));
      });
    });
  } }, { key: "testWebsocketConnectivity", value: (b2 = n(function* () {
    var e4 = this;
    if (this.needsLoad()) try {
      yield this.load();
    } catch (e5) {
      return Promise.reject(e5);
    }
    return new Promise(function(t3, n2) {
      e4.sendMessageToCallMachine({ action: "test-websocket-connectivity" }, function(e5) {
        e5.error ? n2(e5.error) : t3(e5.results);
      });
    });
  }), function() {
    return b2.apply(this, arguments);
  }) }, { key: "abortTestWebsocketConnectivity", value: function() {
    this.sendMessageToCallMachine({ action: "abort-test-websocket-connectivity" });
  } }, { key: "_validateVideoTrackForNetworkTests", value: function(e4) {
    return e4 ? e4 instanceof MediaStreamTrack ? !!Hh(e4, { isLocalScreenVideo: false }) || (console.error("Video track is not playable. This test needs a live video track."), false) : (console.error("Video track needs to be of type `MediaStreamTrack`."), false) : (console.error("Missing video track. You must provide a video track in order to run this test."), false);
  } }, { key: "testConnectionQuality", value: (_2 = n(function* (e4) {
    var t3 = this;
    if (this.needsLoad()) try {
      yield this.load();
    } catch (e5) {
      return Promise.reject(e5);
    }
    var n2 = e4.videoTrack, r2 = e4.duration;
    if (!this._validateVideoTrackForNetworkTests(n2)) throw new Error("Video track error");
    return this._preloadCache.videoTrackForConnectionQualityTest = n2, new Promise(function(e5, n3) {
      t3.sendMessageToCallMachine({ action: "test-connection-quality", duration: r2 }, function(t4) {
        t4.error ? n3(t4.error) : e5(t4.results);
      });
    });
  }), function(e4) {
    return _2.apply(this, arguments);
  }) }, { key: "stopTestConnectionQuality", value: function() {
    this.sendMessageToCallMachine({ action: "stop-test-connection-quality" });
  } }, { key: "testNetworkConnectivity", value: (m2 = n(function* (e4) {
    var t3 = this;
    if (this.needsLoad()) try {
      yield this.load();
    } catch (e5) {
      return Promise.reject(e5);
    }
    if (!this._validateVideoTrackForNetworkTests(e4)) throw new Error("Video track error");
    return this._preloadCache.videoTrackForNetworkConnectivityTest = e4, new Promise(function(e5, n2) {
      t3.sendMessageToCallMachine({ action: "test-network-connectivity" }, function(t4) {
        t4.error ? n2(t4.error) : e5(t4.results);
      });
    });
  }), function(e4) {
    return m2.apply(this, arguments);
  }) }, { key: "abortTestNetworkConnectivity", value: function() {
    this.sendMessageToCallMachine({ action: "abort-test-network-connectivity" });
  } }, { key: "getCpuLoadStats", value: function() {
    var e4 = this;
    return new Promise(function(t3, n2) {
      if (e4._callState === Ur) {
        e4.sendMessageToCallMachine({ action: "get-cpu-load-stats" }, function(e5) {
          t3(e5.cpuStats);
        });
      } else t3({ cpuLoadState: void 0, cpuLoadStateReason: void 0, stats: {} });
    });
  } }, { key: "_validateEncodingLayerHasValidProperties", value: function(e4) {
    var t3;
    if (!((null === (t3 = Object.keys(e4)) || void 0 === t3 ? void 0 : t3.length) > 0)) throw new Error("Empty encoding is not allowed. At least one of these valid keys should be specified:" + Object.values(cp));
  } }, { key: "_validateVideoSendSettings", value: function(e4, t3) {
    var n2 = "screenVideo" === e4 ? ["default-screen-video", "detail-optimized", "motion-optimized", "motion-and-detail-balanced"] : ["default-video", "bandwidth-optimized", "bandwidth-and-quality-balanced", "quality-optimized"], r2 = "Video send settings should be either an object or one of the supported presets: ".concat(n2.join());
    if ("string" == typeof t3) {
      if (!n2.includes(t3)) throw new Error(r2);
    } else {
      if ("object" !== i(t3)) throw new Error(r2);
      if (!t3.maxQuality && !t3.encodings) throw new Error("Video send settings must contain at least maxQuality or encodings attribute");
      if (t3.maxQuality && -1 === ["low", "medium", "high"].indexOf(t3.maxQuality)) throw new Error("maxQuality must be either low, medium or high");
      if (t3.encodings) {
        var o3 = false;
        switch (Object.keys(t3.encodings).length) {
          case 1:
            o3 = !t3.encodings.low;
            break;
          case 2:
            o3 = !t3.encodings.low || !t3.encodings.medium;
            break;
          case 3:
            o3 = !t3.encodings.low || !t3.encodings.medium || !t3.encodings.high;
            break;
          default:
            o3 = true;
        }
        if (o3) throw new Error("Encodings must be defined as: low, low and medium, or low, medium and high.");
        t3.encodings.low && this._validateEncodingLayerHasValidProperties(t3.encodings.low), t3.encodings.medium && this._validateEncodingLayerHasValidProperties(t3.encodings.medium), t3.encodings.high && this._validateEncodingLayerHasValidProperties(t3.encodings.high);
      }
    }
  } }, { key: "validateUpdateSendSettings", value: function(e4) {
    var t3 = this;
    if (!e4 || 0 === Object.keys(e4).length) throw new Error("Send settings must contain at least information for one track!");
    Object.entries(e4).forEach(function(e5) {
      var n2 = v(e5, 2), r2 = n2[0], i2 = n2[1];
      t3._validateVideoSendSettings(r2, i2);
    });
  } }, { key: "updateSendSettings", value: function(e4) {
    var t3 = this;
    return this.validateUpdateSendSettings(e4), this.needsLoad() ? (this._preloadCache.sendSettings = e4, { sendSettings: this._preloadCache.sendSettings }) : new Promise(function(n2, r2) {
      t3.sendMessageToCallMachine({ action: "update-send-settings", sendSettings: e4 }, function(e5) {
        e5.error ? r2(e5.error) : n2(e5.sendSettings);
      });
    });
  } }, { key: "getSendSettings", value: function() {
    return this._sendSettings || this._preloadCache.sendSettings;
  } }, { key: "getLocalAudioLevel", value: function() {
    return this._localAudioLevel;
  } }, { key: "getRemoteParticipantsAudioLevel", value: function() {
    return this._remoteParticipantsAudioLevel;
  } }, { key: "getActiveSpeaker", value: function() {
    return bp(), this._activeSpeaker;
  } }, { key: "setActiveSpeakerMode", value: function(e4) {
    return bp(), this.sendMessageToCallMachine({ action: "set-active-speaker-mode", enabled: e4 }), this;
  } }, { key: "activeSpeakerMode", value: function() {
    return bp(), this._activeSpeakerMode;
  } }, { key: "subscribeToTracksAutomatically", value: function() {
    return this._preloadCache.subscribeToTracksAutomatically;
  } }, { key: "setSubscribeToTracksAutomatically", value: function(e4) {
    return mp(this._callState, "setSubscribeToTracksAutomatically()", "Use the subscribeToTracksAutomatically configuration property."), this._preloadCache.subscribeToTracksAutomatically = e4, this.sendMessageToCallMachine({ action: "daily-method-subscribe-to-tracks-automatically", enabled: e4 }), this;
  } }, { key: "enumerateDevices", value: (g2 = n(function* () {
    var e4 = this;
    return this._callObjectMode ? { devices: (yield navigator.mediaDevices.enumerateDevices()).map(function(e5) {
      return JSON.parse(JSON.stringify(e5));
    }) } : new Promise(function(t3) {
      e4.sendMessageToCallMachine({ action: "enumerate-devices" }, function(e5) {
        t3({ devices: e5.devices });
      });
    });
  }), function() {
    return g2.apply(this, arguments);
  }) }, { key: "sendAppMessage", value: function(e4) {
    var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "*";
    if (mp(this._callState, "sendAppMessage()"), JSON.stringify(e4).length > 4096) throw new Error("Message data too large. Max size is 4096");
    return this.sendMessageToCallMachine({ action: "app-msg", data: e4, to: t3 }), this;
  } }, { key: "addFakeParticipant", value: function(e4) {
    return bp(), mp(this._callState, "addFakeParticipant()"), this.sendMessageToCallMachine(Zh({ action: "add-fake-participant" }, e4)), this;
  } }, { key: "setShowNamesMode", value: function(e4) {
    return _p(this._callObjectMode, "setShowNamesMode()"), bp(), e4 && "always" !== e4 && "never" !== e4 ? (console.error('setShowNamesMode argument should be "always", "never", or false'), this) : (this.sendMessageToCallMachine({ action: "set-show-names", mode: e4 }), this);
  } }, { key: "setShowLocalVideo", value: function() {
    var e4 = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
    return _p(this._callObjectMode, "setShowLocalVideo()"), bp(), mp(this._callState, "setShowLocalVideo()"), "boolean" != typeof e4 ? (console.error("setShowLocalVideo only accepts a boolean value"), this) : (this.sendMessageToCallMachine({ action: "set-show-local-video", show: e4 }), this._showLocalVideo = e4, this);
  } }, { key: "showLocalVideo", value: function() {
    return _p(this._callObjectMode, "showLocalVideo()"), bp(), this._showLocalVideo;
  } }, { key: "setShowParticipantsBar", value: function() {
    var e4 = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
    return _p(this._callObjectMode, "setShowParticipantsBar()"), bp(), mp(this._callState, "setShowParticipantsBar()"), "boolean" != typeof e4 ? (console.error("setShowParticipantsBar only accepts a boolean value"), this) : (this.sendMessageToCallMachine({ action: "set-show-participants-bar", show: e4 }), this._showParticipantsBar = e4, this);
  } }, { key: "showParticipantsBar", value: function() {
    return _p(this._callObjectMode, "showParticipantsBar()"), bp(), this._showParticipantsBar;
  } }, { key: "customIntegrations", value: function() {
    return bp(), _p(this._callObjectMode, "customIntegrations()"), this._customIntegrations;
  } }, { key: "setCustomIntegrations", value: function(e4) {
    return bp(), _p(this._callObjectMode, "setCustomIntegrations()"), mp(this._callState, "setCustomIntegrations()"), Pp(e4) ? (this.sendMessageToCallMachine({ action: "set-custom-integrations", integrations: e4 }), this._customIntegrations = e4, this) : this;
  } }, { key: "startCustomIntegrations", value: function(e4) {
    var t3 = this;
    if (bp(), _p(this._callObjectMode, "startCustomIntegrations()"), mp(this._callState, "startCustomIntegrations()"), Array.isArray(e4) && e4.some(function(e5) {
      return "string" != typeof e5;
    }) || !Array.isArray(e4) && "string" != typeof e4) return console.error("startCustomIntegrations() only accepts string | string[]"), this;
    var n2 = "string" == typeof e4 ? [e4] : e4, r2 = n2.filter(function(e5) {
      return !(e5 in t3._customIntegrations);
    });
    return r2.length ? (console.error(`Can't find custom integration(s): "`.concat(r2.join(", "), '"')), this) : (this.sendMessageToCallMachine({ action: "start-custom-integrations", ids: n2 }), this);
  } }, { key: "stopCustomIntegrations", value: function(e4) {
    var t3 = this;
    if (bp(), _p(this._callObjectMode, "stopCustomIntegrations()"), mp(this._callState, "stopCustomIntegrations()"), Array.isArray(e4) && e4.some(function(e5) {
      return "string" != typeof e5;
    }) || !Array.isArray(e4) && "string" != typeof e4) return console.error("stopCustomIntegrations() only accepts string | string[]"), this;
    var n2 = "string" == typeof e4 ? [e4] : e4, r2 = n2.filter(function(e5) {
      return !(e5 in t3._customIntegrations);
    });
    return r2.length ? (console.error(`Can't find custom integration(s): "`.concat(r2.join(", "), '"')), this) : (this.sendMessageToCallMachine({ action: "stop-custom-integrations", ids: n2 }), this);
  } }, { key: "customTrayButtons", value: function() {
    return _p(this._callObjectMode, "customTrayButtons()"), bp(), this._customTrayButtons;
  } }, { key: "updateCustomTrayButtons", value: function(e4) {
    return _p(this._callObjectMode, "updateCustomTrayButtons()"), bp(), mp(this._callState, "updateCustomTrayButtons()"), jp(e4) ? (this.sendMessageToCallMachine({ action: "update-custom-tray-buttons", btns: e4 }), this._customTrayButtons = e4, this) : (console.error("updateCustomTrayButtons only accepts a dictionary of the type ".concat(JSON.stringify(dp))), this);
  } }, { key: "theme", value: function() {
    return _p(this._callObjectMode, "theme()"), this.properties.theme;
  } }, { key: "setTheme", value: function(e4) {
    var t3 = this;
    return _p(this._callObjectMode, "setTheme()"), new Promise(function(n2, r2) {
      try {
        t3.validateProperties({ theme: e4 }), t3.properties.theme = Zh({}, e4), t3.sendMessageToCallMachine({ action: "set-theme", theme: t3.properties.theme });
        try {
          t3.emit(wi, { action: wi, theme: t3.properties.theme });
        } catch (e5) {
          console.log("could not emit 'theme-updated'", e5);
        }
        n2(t3.properties.theme);
      } catch (e5) {
        r2(e5);
      }
    });
  } }, { key: "detectAllFaces", value: function() {
    var e4 = this;
    return bp(), new Promise(function(t3) {
      e4.sendMessageToCallMachine({ action: "detect-all-faces" }, function(e5) {
        delete e5.action, delete e5.callbackStamp, t3(e5);
      });
    });
  } }, { key: "requestFullscreen", value: (f2 = n(function* () {
    if (bp(), this._iframe && !document.fullscreenElement && Uo()) try {
      (yield this._iframe.requestFullscreen) ? this._iframe.requestFullscreen() : this._iframe.webkitRequestFullscreen();
    } catch (e4) {
      console.log("could not make video call fullscreen", e4);
    }
  }), function() {
    return f2.apply(this, arguments);
  }) }, { key: "exitFullscreen", value: function() {
    bp(), document.fullscreenElement ? document.exitFullscreen() : document.webkitFullscreenElement && document.webkitExitFullscreen();
  } }, { key: "getSidebarView", value: (h2 = n(function* () {
    var e4 = this;
    return this._callObjectMode ? (console.error("getSidebarView is not available in callObject mode"), Promise.resolve(null)) : new Promise(function(t3) {
      e4.sendMessageToCallMachine({ action: "get-sidebar-view" }, function(e5) {
        t3(e5.view);
      });
    });
  }), function() {
    return h2.apply(this, arguments);
  }) }, { key: "setSidebarView", value: function(e4) {
    return this._callObjectMode ? (console.error("setSidebarView is not available in callObject mode"), this) : (this.sendMessageToCallMachine({ action: "set-sidebar-view", view: e4 }), this);
  } }, { key: "room", value: (d2 = n(function* () {
    var e4 = this, t3 = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).includeRoomConfigDefaults, n2 = void 0 === t3 || t3;
    return this._accessState.access === Hr || this.needsLoad() ? this.properties.url ? { roomUrlPendingJoin: this.properties.url } : null : new Promise(function(t4) {
      e4.sendMessageToCallMachine({ action: "lib-room-info", includeRoomConfigDefaults: n2 }, function(e5) {
        delete e5.action, delete e5.callbackStamp, t4(e5);
      });
    });
  }), function() {
    return d2.apply(this, arguments);
  }) }, { key: "geo", value: (u2 = n(function* () {
    return new Promise(function() {
      var e4 = n(function* (e5) {
        try {
          var t3 = yield fetch("https://gs.daily.co/_ks_/x-swsl/:");
          e5({ current: (yield t3.json()).geo });
        } catch (t4) {
          console.error("geo lookup failed", t4), e5({ current: "" });
        }
      });
      return function(t3) {
        return e4.apply(this, arguments);
      };
    }());
  }), function() {
    return u2.apply(this, arguments);
  }) }, { key: "setNetworkTopology", value: (a2 = n(function* (e4) {
    var t3 = this;
    return bp(), new Promise(function() {
      var r2 = n(function* (n2, r3) {
        t3.sendMessageToCallMachine({ action: "set-network-topology", opts: e4 }, function(e5) {
          e5.error ? r3({ error: e5.error }) : n2({ workerId: e5.workerId });
        });
      });
      return function(e5, t4) {
        return r2.apply(this, arguments);
      };
    }());
  }), function(e4) {
    return a2.apply(this, arguments);
  }) }, { key: "getNetworkTopology", value: (o2 = n(function* () {
    var e4 = this;
    return new Promise(function() {
      var t3 = n(function* (t4, n2) {
        e4.sendMessageToCallMachine({ action: "get-network-topology" }, function(e5) {
          e5.error ? n2({ error: e5.error }) : t4({ topology: e5.topology });
        });
      });
      return function(e5, n2) {
        return t3.apply(this, arguments);
      };
    }());
  }), function() {
    return o2.apply(this, arguments);
  }) }, { key: "setPlayNewParticipantSound", value: function(e4) {
    if (bp(), "number" != typeof e4 && true !== e4 && false !== e4) throw new Error("argument to setShouldPlayNewParticipantSound should be true, false, or a number, but is ".concat(e4));
    this.sendMessageToCallMachine({ action: "daily-method-set-play-ding", arg: e4 });
  } }, { key: "on", value: function(e4, t3) {
    return this._inputEventsOn[e4] = {}, this.sendMessageToCallMachine({ action: Mo, on: e4 }), y.prototype.on.call(this, e4, t3);
  } }, { key: "once", value: function(e4, t3) {
    return this._inputEventsOn[e4] = {}, this.sendMessageToCallMachine({ action: Mo, on: e4 }), y.prototype.once.call(this, e4, t3);
  } }, { key: "off", value: function(e4, t3) {
    return delete this._inputEventsOn[e4], this.isDestroyed() || this.sendMessageToCallMachine({ action: Mo, off: e4 }), y.prototype.off.call(this, e4, t3);
  } }, { key: "validateProperties", value: function(e4) {
    for (var t3 in e4) {
      if (!pp[t3]) throw new Error("unrecognized property '".concat(t3, "'"));
      if (pp[t3].validate && !pp[t3].validate(e4[t3], this)) throw new Error("property '".concat(t3, "': ").concat(pp[t3].help));
    }
  } }, { key: "assembleMeetingUrl", value: function() {
    var e4, t3, n2 = Zh(Zh({}, this.properties), {}, { emb: this._callFrameId, embHref: encodeURIComponent(window.location.href), proxy: null !== (e4 = window._dailyConfig) && void 0 !== e4 && e4.proxyUrl ? encodeURIComponent(null === (t3 = window._dailyConfig) || void 0 === t3 ? void 0 : t3.proxyUrl) : void 0 }), r2 = n2.url.match(/\?/) ? "&" : "?";
    return n2.url + r2 + Object.keys(pp).filter(function(e5) {
      return pp[e5].queryString && void 0 !== n2[e5];
    }).map(function(e5) {
      return "".concat(pp[e5].queryString, "=").concat(n2[e5]);
    }).join("&");
  } }, { key: "needsLoad", value: function() {
    return [Ir, Rr, Vr, $r].includes(this._callState);
  } }, { key: "sendMessageToCallMachine", value: function(e4, t3) {
    if (this._destroyed && (this._logUseAfterDestroy(), this.strictMode)) throw new Error("Use after destroy");
    this._messageChannel.sendMessageToCallMachine(e4, t3, this._iframe, this._callFrameId);
  } }, { key: "forwardPackagedMessageToCallMachine", value: function(e4) {
    this._messageChannel.forwardPackagedMessageToCallMachine(e4, this._iframe, this._callFrameId);
  } }, { key: "addListenerForPackagedMessagesFromCallMachine", value: function(e4) {
    return this._messageChannel.addListenerForPackagedMessagesFromCallMachine(e4, this._callFrameId);
  } }, { key: "removeListenerForPackagedMessagesFromCallMachine", value: function(e4) {
    this._messageChannel.removeListenerForPackagedMessagesFromCallMachine(e4);
  } }, { key: "handleMessageFromCallMachine", value: function(t3) {
    switch (t3.action) {
      case _i:
        this.sendMessageToCallMachine(Zh({ action: bi }, this.properties));
        break;
      case "daily-main-executed":
        this._dailyMainExecuted = true;
      case Ei:
        this._loadedCallback && (this._loadedCallback(), this._loadedCallback = null);
        try {
          this.emit(t3.action, t3);
        } catch (e4) {
          console.log("could not emit", t3, e4);
        }
        break;
      case Oi:
        this._joinedCallback && (this._joinedCallback(t3.participants), this._joinedCallback = null);
        try {
          this.emit(t3.action, t3);
        } catch (e4) {
          console.log("could not emit", t3, e4);
        }
        break;
      case xi:
      case Ai:
        if (this._callState === Vr) return;
        if (t3.participant && t3.participant.session_id) {
          var n2 = t3.participant.local ? "local" : t3.participant.session_id;
          this._callObjectMode && (Ah(t3.participant), Dh(t3.participant), Nh(t3.participant, this._participants[n2]));
          try {
            this.maybeParticipantTracksStopped(this._participants[n2], t3.participant), this.maybeParticipantTracksStarted(this._participants[n2], t3.participant), this.maybeEventRecordingStopped(this._participants[n2], t3.participant), this.maybeEventRecordingStarted(this._participants[n2], t3.participant);
          } catch (e4) {
            console.error("track events error", e4);
          }
          if (!this.compareEqualForParticipantUpdateEvent(t3.participant, this._participants[n2])) {
            this._participants[n2] = Zh({}, t3.participant), this.toggleParticipantAudioBasedOnNativeAudioFocus();
            try {
              this.emit(t3.action, t3);
            } catch (e4) {
              console.log("could not emit", t3, e4);
            }
          }
        }
        break;
      case Di:
        if (t3.participant && t3.participant.session_id) {
          var r2 = this._participants[t3.participant.session_id];
          r2 && this.maybeParticipantTracksStopped(r2, null), delete this._participants[t3.participant.session_id];
          try {
            this.emit(t3.action, t3);
          } catch (e4) {
            console.log("could not emit", t3, e4);
          }
        }
        break;
      case Li:
        if (!Q(this._participantCounts, t3.participantCounts)) {
          this._participantCounts = t3.participantCounts;
          try {
            this.emit(t3.action, t3);
          } catch (e4) {
            console.log("could not emit", t3, e4);
          }
        }
        break;
      case Ni:
        var i2 = { access: t3.access };
        if (t3.awaitingAccess && (i2.awaitingAccess = t3.awaitingAccess), !Q(this._accessState, i2)) {
          this._accessState = i2;
          try {
            this.emit(t3.action, t3);
          } catch (e4) {
            console.log("could not emit", t3, e4);
          }
        }
        break;
      case Ii:
        if (t3.meetingSession) {
          this._meetingSessionSummary = t3.meetingSession;
          try {
            delete t3.callFrameId, this.emit(t3.action, t3);
            var o3 = Zh(Zh({}, t3), {}, { action: "meeting-session-updated" });
            this.emit(o3.action, o3);
          } catch (e4) {
            console.log("could not emit", t3, e4);
          }
        }
        break;
      case wo:
        var a3, s2;
        this._iframe && !t3.preserveIframe && (this._iframe.src = ""), this._updateCallState($r), this.resetMeetingDependentVars(), this._loadedCallback && (this._loadedCallback(t3.errorMsg), this._loadedCallback = null), t3.preserveIframe;
        var c2 = e(t3, Qh);
        null != c2 && null !== (a3 = c2.error) && void 0 !== a3 && null !== (s2 = a3.details) && void 0 !== s2 && s2.sourceError && (c2.error.details.sourceError = JSON.parse(c2.error.details.sourceError)), this._maybeSendToSentry(t3), this._joinedCallback && (this._joinedCallback(null, c2), this._joinedCallback = null);
        try {
          this.emit(t3.action, c2);
        } catch (e4) {
          console.log("could not emit", t3, e4);
        }
        break;
      case ji:
        this._callState !== $r && this._updateCallState(Vr), this.resetMeetingDependentVars(), this._resolveLeave && (this._resolveLeave(), this._resolveLeave = null);
        try {
          this.emit(t3.action, t3);
        } catch (e4) {
          console.log("could not emit", t3, e4);
        }
        break;
      case "selected-devices-updated":
        if (t3.devices) try {
          this.emit(t3.action, t3);
        } catch (e4) {
          console.log("could not emit", t3, e4);
        }
        break;
      case so:
        var u3 = t3.threshold, l2 = t3.quality;
        if (u3 !== this._network.threshold || l2 !== this._network.quality) {
          this._network.quality = l2, this._network.threshold = u3;
          try {
            this.emit(t3.action, t3);
          } catch (e4) {
            console.log("could not emit", t3, e4);
          }
        }
        break;
      case uo:
        if (t3 && t3.cpuLoadState) try {
          this.emit(t3.action, t3);
        } catch (e4) {
          console.log("could not emit", t3, e4);
        }
        break;
      case oo:
        var d3 = t3.activeSpeaker;
        if (this._activeSpeaker.peerId !== d3.peerId) {
          this._activeSpeaker.peerId = d3.peerId;
          try {
            this.emit(t3.action, { action: t3.action, activeSpeaker: this._activeSpeaker });
          } catch (e4) {
            console.log("could not emit", t3, e4);
          }
        }
        break;
      case "show-local-video-changed":
        if (this._callObjectMode) return;
        var h3 = t3.show;
        this._showLocalVideo = h3;
        try {
          this.emit(t3.action, { action: t3.action, show: h3 });
        } catch (e4) {
          console.log("could not emit", t3, e4);
        }
        break;
      case ao:
        var p2 = t3.enabled;
        if (this._activeSpeakerMode !== p2) {
          this._activeSpeakerMode = p2;
          try {
            this.emit(t3.action, { action: t3.action, enabled: this._activeSpeakerMode });
          } catch (e4) {
            console.log("could not emit", t3, e4);
          }
        }
        break;
      case Fi:
      case Ui:
      case Vi:
        this._waitingParticipants = t3.allWaitingParticipants;
        try {
          this.emit(t3.action, { action: t3.action, participant: t3.participant });
        } catch (e4) {
          console.log("could not emit", t3, e4);
        }
        break;
      case yo:
        if (!Q(this._receiveSettings, t3.receiveSettings)) {
          this._receiveSettings = t3.receiveSettings;
          try {
            this.emit(t3.action, { action: t3.action, receiveSettings: t3.receiveSettings });
          } catch (e4) {
            console.log("could not emit", t3, e4);
          }
        }
        break;
      case _o:
        if (!Q(this._inputSettings, t3.inputSettings)) {
          var f3 = this._getInputSettings();
          if (this._inputSettings = t3.inputSettings, this._preloadCache.inputSettings = {}, !Q(f3, this._getInputSettings())) try {
            this.emit(t3.action, { action: t3.action, inputSettings: this._getInputSettings() });
          } catch (e4) {
            console.log("could not emit", t3, e4);
          }
        }
        break;
      case "send-settings-updated":
        if (!Q(this._sendSettings, t3.sendSettings)) {
          this._sendSettings = t3.sendSettings, this._preloadCache.sendSettings = null;
          try {
            this.emit(t3.action, { action: t3.action, sendSettings: t3.sendSettings });
          } catch (e4) {
            console.log("could not emit", t3, e4);
          }
        }
        break;
      case "local-audio-level":
        this._localAudioLevel = t3.audioLevel, this.emitDailyJSEvent(t3);
        break;
      case "remote-participants-audio-level":
        this._remoteParticipantsAudioLevel = t3.participantsAudioLevel, this.emitDailyJSEvent(t3);
        break;
      case eo:
        var v2 = t3.session_id;
        this._rmpPlayerState[v2] = t3.playerState, this.emitDailyJSEvent(t3);
        break;
      case no:
        delete this._rmpPlayerState[t3.session_id], this.emitDailyJSEvent(t3);
        break;
      case to:
        var g3 = t3.session_id, m3 = this._rmpPlayerState[g3];
        m3 && this.compareEqualForRMPUpdateEvent(m3, t3.remoteMediaPlayerState) || (this._rmpPlayerState[g3] = t3.remoteMediaPlayerState, this.emitDailyJSEvent(t3));
        break;
      case "custom-button-click":
      case "sidebar-view-changed":
        this.emitDailyJSEvent(t3);
        break;
      case Ri:
        var y2 = this._meetingSessionState.topology !== (t3.meetingSessionState && t3.meetingSessionState.topology);
        this._meetingSessionState = Lp(t3.meetingSessionState, this._callObjectMode), (this._callObjectMode || y2) && this.emitDailyJSEvent(t3);
        break;
      case Ji:
      case Wi:
      case Hi:
      case Ki:
      case Qi:
      case qi:
      case Yi:
      case zi:
      case Mi:
      case Ci:
      case Zi:
      case ro:
      case io:
      case co:
      case Xi:
      case po:
      case fo:
      case vo:
      case go:
      case bo:
      case mo:
        try {
          this.emit(t3.action, t3);
        } catch (e4) {
          console.log("could not emit", t3, e4);
        }
        break;
      case "request-fullscreen":
        this.requestFullscreen();
        break;
      case "request-exit-fullscreen":
        this.exitFullscreen();
    }
  } }, { key: "maybeEventRecordingStopped", value: function(e4, t3) {
    var n2 = "record";
    if (e4 && !t3.local && false === t3[n2] && e4[n2] !== t3[n2]) try {
      this.emit(Wi, { action: Wi });
    } catch (e5) {
      console.log("could not emit", e5);
    }
  } }, { key: "maybeEventRecordingStarted", value: function(e4, t3) {
    var n2 = "record";
    if (e4 && !t3.local && true === t3[n2] && e4[n2] !== t3[n2]) try {
      this.emit(Ji, { action: Ji });
    } catch (e5) {
      console.log("could not emit", e5);
    }
  } }, { key: "maybeEventTrackStopped", value: function(e4, t3, n2, r2) {
    if (e4 && ("ended" === e4.readyState || !t3 || e4.id !== t3.id)) try {
      this.emit(Gi, { action: Gi, track: e4, participant: n2, type: r2 });
    } catch (e5) {
      console.log("maybeEventTrackStopped: could not emit", e5);
    }
  } }, { key: "maybeEventTrackStarted", value: function(e4, t3, n2, r2) {
    if (t3 && (!e4 || "ended" === e4.readyState || t3.id !== e4.id)) try {
      this.emit($i, { action: $i, track: t3, participant: n2, type: r2 });
    } catch (e5) {
      console.log("maybeEventTrackStarted: could not emit", e5);
    }
  } }, { key: "maybeParticipantTracksStopped", value: function(e4, t3) {
    if (e4) for (var n2 in e4.tracks) this.maybeEventTrackStopped(e4.tracks[n2].track, t3 && t3.tracks[n2] ? t3.tracks[n2].track : null, t3, n2);
  } }, { key: "maybeParticipantTracksStarted", value: function(e4, t3) {
    if (t3) for (var n2 in t3.tracks) this.maybeEventTrackStarted(e4 && e4.tracks[n2] ? e4.tracks[n2].track : null, t3.tracks[n2].track, t3, n2);
  } }, { key: "compareEqualForRMPUpdateEvent", value: function(e4, t3) {
    var n2, r2;
    return e4.state === t3.state && (null === (n2 = e4.settings) || void 0 === n2 ? void 0 : n2.volume) === (null === (r2 = t3.settings) || void 0 === r2 ? void 0 : r2.volume);
  } }, { key: "emitDailyJSEvent", value: function(e4) {
    try {
      this.emit(e4.action, e4);
    } catch (t3) {
      console.log("could not emit", e4, t3);
    }
  } }, { key: "compareEqualForParticipantUpdateEvent", value: function(e4, t3) {
    return !!Q(e4, t3) && ((!e4.videoTrack || !t3.videoTrack || e4.videoTrack.id === t3.videoTrack.id && e4.videoTrack.muted === t3.videoTrack.muted && e4.videoTrack.enabled === t3.videoTrack.enabled) && (!e4.audioTrack || !t3.audioTrack || e4.audioTrack.id === t3.audioTrack.id && e4.audioTrack.muted === t3.audioTrack.muted && e4.audioTrack.enabled === t3.audioTrack.enabled));
  } }, { key: "nativeUtils", value: function() {
    return Ro() ? "undefined" == typeof DailyNativeUtils ? (console.warn("in React Native, DailyNativeUtils is expected to be available"), null) : DailyNativeUtils : null;
  } }, { key: "updateIsPreparingToJoin", value: function(e4) {
    this._updateCallState(this._callState, e4);
  } }, { key: "_updateCallState", value: function(e4) {
    var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this._isPreparingToJoin;
    if (e4 !== this._callState || t3 !== this._isPreparingToJoin) {
      var n2 = this._callState, r2 = this._isPreparingToJoin;
      this._callState = e4, this._isPreparingToJoin = t3;
      var i2 = this._isCallPendingOrOngoing(n2, r2), o3 = this._isCallPendingOrOngoing(this._callState, this._isPreparingToJoin);
      i2 !== o3 && (this.updateKeepDeviceAwake(o3), this.updateDeviceAudioMode(o3), this.updateShowAndroidOngoingMeetingNotification(o3), this.updateNoOpRecordingEnsuringBackgroundContinuity(o3));
    }
  } }, { key: "resetMeetingDependentVars", value: function() {
    this._participants = {}, this._participantCounts = ap, this._waitingParticipants = {}, this._activeSpeaker = {}, this._activeSpeakerMode = false, this._didPreAuth = false, this._accessState = { access: Hr }, this._finalSummaryOfPrevSession = this._meetingSessionSummary, this._meetingSessionSummary = {}, this._meetingSessionState = Lp(op, this._callObjectMode), this._receiveSettings = {}, this._inputSettings = void 0, this._sendSettings = {}, this._localAudioLevel = 0, this._remoteParticipantsAudioLevel = {}, this._dailyMainExecuted = false, this._preloadCache;
  } }, { key: "updateKeepDeviceAwake", value: function(e4) {
    Ro() && this.nativeUtils().setKeepDeviceAwake(e4, this._callFrameId);
  } }, { key: "updateDeviceAudioMode", value: function(e4) {
    if (Ro() && !this.disableReactNativeAutoDeviceManagement("audio")) {
      var t3 = e4 ? this._nativeInCallAudioMode : "idle";
      this.nativeUtils().setAudioMode(t3);
    }
  } }, { key: "updateShowAndroidOngoingMeetingNotification", value: function(e4) {
    if (Ro() && this.nativeUtils().setShowOngoingMeetingNotification) {
      var t3, n2, r2, i2;
      if (this.properties.reactNativeConfig && this.properties.reactNativeConfig.androidInCallNotification) {
        var o3 = this.properties.reactNativeConfig.androidInCallNotification;
        t3 = o3.title, n2 = o3.subtitle, r2 = o3.iconName, i2 = o3.disableForCustomOverride;
      }
      i2 && (e4 = false), this.nativeUtils().setShowOngoingMeetingNotification(e4, t3, n2, r2, this._callFrameId);
    }
  } }, { key: "updateNoOpRecordingEnsuringBackgroundContinuity", value: function(e4) {
    Ro() && this.nativeUtils().enableNoOpRecordingEnsuringBackgroundContinuity && this.nativeUtils().enableNoOpRecordingEnsuringBackgroundContinuity(e4);
  } }, { key: "_isCallPendingOrOngoing", value: function(e4, t3) {
    return [Fr, Ur].includes(e4) || t3;
  } }, { key: "toggleParticipantAudioBasedOnNativeAudioFocus", value: function() {
    if (Ro()) {
      var e4 = window.store.getState();
      for (var t3 in e4.streams) {
        var n2 = e4.streams[t3];
        n2 && n2.pendingTrack && "audio" === n2.pendingTrack.kind && (n2.pendingTrack.enabled = this._hasNativeAudioFocus);
      }
    }
  } }, { key: "disableReactNativeAutoDeviceManagement", value: function(e4) {
    return this.properties.reactNativeConfig && this.properties.reactNativeConfig.disableAutoDeviceManagement && this.properties.reactNativeConfig.disableAutoDeviceManagement[e4];
  } }, { key: "absoluteUrl", value: function(e4) {
    if (void 0 !== e4) {
      var t3 = document.createElement("a");
      return t3.href = e4, t3.href;
    }
  } }, { key: "sayHello", value: function() {
    var e4 = "hello, world.";
    return console.log(e4), e4;
  } }, { key: "_logUseAfterDestroy", value: function() {
    if (this.needsLoad()) {
      if (Kh && !Kh.needsLoad()) {
        var e4 = { action: To, level: "error", code: this.strictMode ? 9995 : 9997 };
        Kh.sendMessageToCallMachine(e4);
      } else if (!this.strictMode) {
        console.error("You are are attempting to use a call instance that was previously destroyed, which is unsupported. Please remove `strictMode: false` from your constructor properties to enable strict mode to track down and fix this unsupported usage.");
      }
    } else {
      var t3 = { action: To, level: "error", code: this.strictMode ? 9995 : 9997 };
      this._messageChannel.sendMessageToCallMachine(t3, null, this._iframe, this._callFrameId);
    }
  } }, { key: "_logDuplicateInstanceAttempt", value: function() {
    if (Kh.needsLoad()) {
      if (!this.strictMode) {
        console.error("You are attempting to use multiple call instances simultaneously. This is unsupported and will result in unknown errors. Previous instances should be destroyed before creating new ones. Please remove `strictMode: false` from your constructor properties to enable strict mode to track down and fix these attempts.");
      }
    } else Kh.sendMessageToCallMachine({ action: To, level: "error", code: this.strictMode ? 9990 : 9992 });
  } }, { key: "_maybeSendToSentry", value: function(e4) {
    var t3, n2, r2, i2, o3, a3;
    if (null !== (t3 = e4.error) && void 0 !== t3 && t3.type) {
      if (!["connection-error", "end-of-life", "no-room"].includes(e4.error.type)) return;
    }
    var s2 = null !== (n2 = this.properties) && void 0 !== n2 && n2.url ? new URL(this.properties.url) : void 0, c2 = "production";
    s2 && s2.host.includes(".staging.daily") && (c2 = "staging");
    var u3, l2, d3, h3, p2, f3 = new dr({ dsn: "https://f10f1c81e5d44a4098416c0867a8b740@o77906.ingest.sentry.io/168844", transport: pr, integrations: [new Nr.GlobalHandlers({ onunhandledrejection: false })], environment: c2 }), v2 = new yn(f3, void 0, z2.version());
    if (this.session_id && v2.setExtra("sessionId", this.session_id), this.properties) {
      var g3 = Zh({}, this.properties);
      g3.userName = g3.userName ? "[Filtered]" : void 0, g3.userData = g3.userData ? "[Filtered]" : void 0, g3.token = g3.token ? "[Filtered]" : void 0, v2.setExtra("properties", g3);
    }
    if (s2) {
      var m3 = s2.searchParams.get("domain");
      if (!m3) {
        var y2 = s2.host.match(/(.*?)\./);
        m3 = y2 && y2[1] || "";
      }
      m3 && v2.setTag("domain", m3);
    }
    e4.error && (v2.setTag("fatalErrorType", e4.error.type), v2.setExtra("errorDetails", e4.error.details), (null === (u3 = e4.error.details) || void 0 === u3 ? void 0 : u3.uri) && v2.setTag("serverAddress", e4.error.details.uri), (null === (l2 = e4.error.details) || void 0 === l2 ? void 0 : l2.workerGroup) && v2.setTag("workerGroup", e4.error.details.workerGroup), (null === (d3 = e4.error.details) || void 0 === d3 ? void 0 : d3.geoGroup) && v2.setTag("geoGroup", e4.error.details.geoGroup), (null === (h3 = e4.error.details) || void 0 === h3 ? void 0 : h3.bundleUrl) && v2.setTag("bundleUrl", e4.error.details.bundleUrl), (null === (p2 = e4.error.details) || void 0 === p2 ? void 0 : p2.on) && v2.setTag("connectionAttempt", e4.error.details.on));
    v2.setTags({ callMode: this._callObjectMode ? Ro() ? "reactNative" : null !== (r2 = this.properties) && void 0 !== r2 && null !== (i2 = r2.dailyConfig) && void 0 !== i2 && null !== (o3 = i2.callMode) && void 0 !== o3 && o3.includes("prebuilt") ? this.properties.dailyConfig.callMode : "custom" : "prebuilt-frame", version: z2.version() });
    var _3 = (null === (a3 = e4.error) || void 0 === a3 ? void 0 : a3.msg) || e4.errorMsg;
    v2.run(function(e5) {
      e5.captureException(new Error(_3));
    });
  } }], [{ key: "supportedBrowser", value: function() {
    if (Ro()) return { supported: true, mobile: true, name: "React Native", version: null, supportsScreenShare: true, supportsSfu: true, supportsVideoProcessing: false, supportsAudioProcessing: false };
    var e4 = le.getParser(Io());
    return { supported: !!Yo(), mobile: "mobile" === e4.getPlatformType(), name: e4.getBrowserName(), version: e4.getBrowserVersion(), supportsFullscreen: !!Uo(), supportsScreenShare: !!Fo(), supportsSfu: !!Yo(), supportsVideoProcessing: $o(), supportsAudioProcessing: qo() };
  } }, { key: "version", value: function() {
    return "0.55.1";
  } }, { key: "createCallObject", value: function() {
    var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
    return e4.layout = "none", new z2(null, e4);
  } }, { key: "wrap", value: function(e4) {
    var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    if (bp(), !e4 || !e4.contentWindow || "string" != typeof e4.src) throw new Error("DailyIframe::Wrap needs an iframe-like first argument");
    return t3.layout || (t3.customLayout ? t3.layout = "custom-v1" : t3.layout = "browser"), new z2(e4, t3);
  } }, { key: "createFrame", value: function(e4, t3) {
    var n2, r2;
    bp(), e4 && t3 ? (n2 = e4, r2 = t3) : e4 && e4.append ? (n2 = e4, r2 = {}) : (n2 = document.body, r2 = e4 || {});
    var i2 = r2.iframeStyle;
    i2 || (i2 = n2 === document.body ? { position: "fixed", border: "1px solid black", backgroundColor: "white", width: "375px", height: "450px", right: "1em", bottom: "1em" } : { border: 0, width: "100%", height: "100%" });
    var o3 = document.createElement("iframe");
    window.navigator && window.navigator.userAgent.match(/Chrome\/61\./) ? o3.allow = "microphone, camera" : o3.allow = "microphone; camera; autoplay; display-capture; screen-wake-lock", o3.style.visibility = "hidden", n2.appendChild(o3), o3.style.visibility = null, Object.keys(i2).forEach(function(e5) {
      return o3.style[e5] = i2[e5];
    }), r2.layout || (r2.customLayout ? r2.layout = "custom-v1" : r2.layout = "browser");
    try {
      return new z2(o3, r2);
    } catch (e5) {
      throw n2.removeChild(o3), e5;
    }
  } }, { key: "createTransparentFrame", value: function() {
    var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
    bp();
    var t3 = document.createElement("iframe");
    return t3.allow = "microphone; camera; autoplay", t3.style.cssText = "\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      border: 0;\n      pointer-events: none;\n    ", document.body.appendChild(t3), e4.layout || (e4.layout = "custom-v1"), z2.wrap(t3, e4);
  } }, { key: "getCallInstance", value: function() {
    return Kh;
  } }]), z2;
}();
function gp(e4) {
  var t2 = {};
  for (var n2 in e4) e4[n2] instanceof MediaStreamTrack ? t2[n2] = Oo : "dailyConfig" === n2 ? (e4[n2].modifyLocalSdpHook && (window._dailyConfig && (window._dailyConfig.modifyLocalSdpHook = e4[n2].modifyLocalSdpHook), delete e4[n2].modifyLocalSdpHook), e4[n2].modifyRemoteSdpHook && (window._dailyConfig && (window._dailyConfig.modifyRemoteSdpHook = e4[n2].modifyRemoteSdpHook), delete e4[n2].modifyRemoteSdpHook), t2[n2] = e4[n2]) : t2[n2] = e4[n2];
  return t2;
}
function mp(e4) {
  var t2 = arguments.length > 2 ? arguments[2] : void 0;
  if (e4 !== Ur) {
    var n2 = "".concat(arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "This daily-js method", " only supported after join.");
    throw t2 && (n2 += " ".concat(t2)), console.error(n2), new Error(n2);
  }
}
function yp(e4) {
  if (!e4) {
    var t2 = "".concat(arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "This daily-js method", " is only supported on custom callObject instances");
    throw console.error(t2), new Error(t2);
  }
}
function _p(e4) {
  if (e4) {
    var t2 = "".concat(arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "This daily-js method", " is only supported as part of Daily's Prebuilt");
    throw console.error(t2), new Error(t2);
  }
}
function bp() {
  if (Ro()) throw new Error("This daily-js method is not currently supported in React Native");
}
function wp() {
  if (!Ro()) throw new Error("This daily-js method is only supported in React Native");
}
function Sp(e4) {
  if (void 0 === e4) return true;
  var t2;
  if ("string" == typeof e4) t2 = e4;
  else try {
    t2 = JSON.stringify(e4), Q(JSON.parse(t2), e4) || console.warn("The userData provided will be modified when serialized.");
  } catch (e5) {
    throw Error("userData must be serializable to JSON: ".concat(e5));
  }
  if (t2.length > 4096) throw Error("userData is too large (".concat(t2.length, " characters). Maximum size suppported is ").concat(4096, "."));
  return true;
}
function kp(e4, t2) {
  for (var n2 = t2.allowAllParticipantsKey, r2 = function(e5) {
    var t3 = ["local"];
    return n2 || t3.push("*"), e5 && !t3.includes(e5);
  }, i2 = function(e5) {
    return !!(void 0 === e5.layer || Number.isInteger(e5.layer) && e5.layer >= 0 || "inherit" === e5.layer);
  }, o2 = function(e5) {
    return !!e5 && (!(e5.video && !i2(e5.video)) && !(e5.screenVideo && !i2(e5.screenVideo)));
  }, a2 = 0, s2 = Object.entries(e4); a2 < s2.length; a2++) {
    var c2 = v(s2[a2], 2), u2 = c2[0], l2 = c2[1];
    if (!r2(u2) || !o2(l2)) return false;
  }
  return true;
}
function Ep(e4) {
  return "object" === i(e4) && (!!(e4.video && "object" === i(e4.video) || e4.audio && "object" === i(e4.audio)) && (!(e4.video && !function(e5) {
    var t3 = ["type", "config"];
    if (!e5) return false;
    if ("object" !== i(e5)) return false;
    if (!function(e6) {
      if ("string" != typeof e6) return false;
      if (!Object.values(jo).includes(e6)) return console.error("inputSettings video processor type invalid"), false;
      return true;
    }(e5.type)) return false;
    if (e5.config) {
      if ("object" !== i(e5.config)) return false;
      if (!function(e6, t4) {
        var n3 = Object.keys(t4);
        if (0 === n3.length) return true;
        var r3 = "invalid object in inputSettings -> video -> processor -> config";
        switch (e6) {
          case jo.BGBLUR:
            return n3.length > 1 || "strength" !== n3[0] ? (console.error(r3), false) : !("number" != typeof t4.strength || t4.strength <= 0 || t4.strength > 1 || isNaN(t4.strength)) || (console.error("".concat(r3, "; expected: {0 < strength <= 1}, got: ").concat(t4.strength)), false);
          case jo.BGIMAGE:
            return !(void 0 !== t4.source && !function(e7) {
              if ("default" === e7.source) return e7.type = "default", true;
              if (ve(e7.source)) return e7.type = "url", !!function(e8) {
                var t6 = new URL(e8), n5 = t6.pathname;
                if ("data:" === t6.protocol) try {
                  var r4 = n5.substring(n5.indexOf(":") + 1, n5.indexOf(";")).split("/")[1];
                  return Do.includes(r4);
                } catch (e9) {
                  return console.error("failed to deduce blob content type", e9), false;
                }
                var i2 = n5.split(".").at(-1).toLowerCase().trim();
                return Do.includes(i2);
              }(e7.source) || (console.error("invalid image type; supported types: [".concat(Do.join(", "), "]")), false);
              return t5 = e7.source, n4 = Number(t5), isNaN(n4) || !Number.isInteger(n4) || n4 <= 0 || n4 > Ao ? (console.error("invalid image selection; must be an int, > 0, <= ".concat(Ao)), false) : (e7.type = "daily-preselect", true);
              var t5, n4;
            }(t4));
          default:
            return true;
        }
      }(e5.type, e5.config)) return false;
    }
    return Object.keys(e5).filter(function(e6) {
      return !t3.includes(e6);
    }).forEach(function(t4) {
      console.warn("invalid key inputSettings -> video -> processor : ".concat(t4)), delete e5[t4];
    }), true;
  }(e4.video.processor)) && !(e4.audio && (n2 = e4.audio.processor, r2 = ["type"], !n2 || "object" !== i(n2) || (Object.keys(n2).filter(function(e5) {
    return !r2.includes(e5);
  }).forEach(function(e5) {
    console.warn("invalid key inputSettings -> audio -> processor : ".concat(e5)), delete n2[e5];
  }), t2 = n2.type, "string" != typeof t2 || !Object.values(Po).includes(t2) && (console.error("inputSettings audio processor type invalid"), 1))))));
  var t2, n2, r2;
}
function Mp(e4) {
  var t2 = [];
  e4.video && !$o() && (delete e4.video, t2.push("video")), e4.audio && !qo() && (delete e4.audio, t2.push("audio")), t2.length > 0 && console.error("Ignoring settings for browser- or platform-unsupported input processor(s): ".concat(t2.join(", ")));
}
function Cp() {
  var e4 = Object.values(jo).join(" | "), t2 = Object.values(Po).join(" | ");
  return "inputSettings must be of the form: { video?: { processor: { type: [ ".concat(e4, " ], config?: {} } }, audio?: { processor: {type: [ ").concat(t2, " ] } } }");
}
function Tp(e4) {
  var t2 = e4.allowAllParticipantsKey;
  return "receiveSettings must be of the form { [<remote participant id> | ".concat(Zr).concat(t2 ? ' | "'.concat(ei, '"') : "", "]: ") + '{ [video: [{ layer: [<non-negative integer> | "inherit"] } | "inherit"]], [screenVideo: [{ layer: [<non-negative integer> | "inherit"] } | "inherit"]] }}}';
}
function Op() {
  return "customIntegrations should be an object of type ".concat(JSON.stringify(hp), ".");
}
function jp(e4) {
  if (e4 && "object" !== i(e4) || Array.isArray(e4)) return console.error("customTrayButtons should be an Object of the type ".concat(JSON.stringify(dp), ".")), false;
  if (e4) for (var t2 = 0, n2 = Object.entries(e4); t2 < n2.length; t2++) for (var r2 = v(n2[t2], 1)[0], o2 = 0, a2 = Object.entries(e4[r2]); o2 < a2.length; o2++) {
    var s2 = v(a2[o2], 2), c2 = s2[0], u2 = s2[1];
    if ("iconPath" === c2 && !ve(u2)) return console.error("customTrayButton ".concat(c2, " should be a url.")), false;
    if ("iconPathDarkMode" === c2 && !ve(u2)) return console.error("customTrayButton ".concat(c2, " should be a url.")), false;
    var l2 = dp.id[c2];
    if (!l2) return console.error("customTrayButton does not support key ".concat(c2)), false;
    if (i(u2) !== l2) return console.error("customTrayButton ".concat(c2, " should be a ").concat(l2, ".")), false;
  }
  return true;
}
function Pp(e4) {
  if (!e4 || e4 && "object" !== i(e4) || Array.isArray(e4)) return console.error(Op()), false;
  for (var t2 = function(e5) {
    return "".concat(e5, " should be ").concat(hp.id[e5]);
  }, n2 = function(e5, t3) {
    return console.error("customIntegration ".concat(e5, ": ").concat(t3));
  }, r2 = 0, o2 = Object.entries(e4); r2 < o2.length; r2++) {
    var a2 = v(o2[r2], 1)[0];
    if (!("label" in e4[a2])) return n2(a2, "label is required"), false;
    if (!("location" in e4[a2])) return n2(a2, "location is required"), false;
    if (!("src" in e4[a2]) && !("srcdoc" in e4[a2])) return n2(a2, "src or srcdoc is required"), false;
    for (var s2 = 0, c2 = Object.entries(e4[a2]); s2 < c2.length; s2++) {
      var u2 = v(c2[s2], 2), l2 = u2[0], d2 = u2[1];
      switch (l2) {
        case "allow":
        case "csp":
        case "name":
        case "referrerPolicy":
        case "sandbox":
          if ("string" != typeof d2) return n2(a2, t2(l2)), false;
          break;
        case "iconURL":
          if (!ve(d2)) return n2(a2, "".concat(l2, " should be a url")), false;
          break;
        case "src":
          if ("srcdoc" in e4[a2]) return n2(a2, "cannot have both src and srcdoc"), false;
          if (!ve(d2)) return n2(a2, 'src "'.concat(d2, '" is not a valid URL')), false;
          break;
        case "srcdoc":
          if ("src" in e4[a2]) return n2(a2, "cannot have both src and srcdoc"), false;
          if ("string" != typeof d2) return n2(a2, t2(l2)), false;
          break;
        case "location":
          if (!["main", "sidebar"].includes(d2)) return n2(a2, t2(l2)), false;
          break;
        case "controlledBy":
          if ("*" !== d2 && "owners" !== d2 && (!Array.isArray(d2) || d2.some(function(e5) {
            return "string" != typeof e5;
          }))) return n2(a2, t2(l2)), false;
          break;
        case "shared":
          if ((!Array.isArray(d2) || d2.some(function(e5) {
            return "string" != typeof e5;
          })) && "owners" !== d2 && "boolean" != typeof d2) return n2(a2, t2(l2)), false;
          break;
        default:
          if (!hp.id[l2]) return console.error("customIntegration does not support key ".concat(l2)), false;
      }
    }
  }
  return true;
}
function xp(e4, t2) {
  if (void 0 === t2) return false;
  switch (i(t2)) {
    case "string":
      return i(e4) === t2;
    case "object":
      if ("object" !== i(e4)) return false;
      for (var n2 in e4) if (!xp(e4[n2], t2[n2])) return false;
      return true;
    default:
      return false;
  }
}
function Ap(e4) {
  if ("object" !== i(e4)) throw new Error('RemoteMediaPlayerSettings: must be "object" type');
  if (e4.state && !Object.values(xo).includes(e4.state)) throw new Error("Invalid value for RemoteMediaPlayerSettings.state, valid values are: " + JSON.stringify(xo));
  if (e4.volume) {
    if ("number" != typeof e4.volume) throw new Error('RemoteMediaPlayerSettings.volume: must be "number" type');
    if (e4.volume < 0 || e4.volume > 2) throw new Error("RemoteMediaPlayerSettings.volume: must be between 0.0 - 2.0");
  }
}
function Dp(e4, t2, n2) {
  return !("number" != typeof e4 || e4 < t2 || e4 > n2);
}
function Lp(e4, t2) {
  return e4 && !t2 && delete e4.data, e4;
}
export {
  Kr as DAILY_ACCESS_LEVEL_FULL,
  Qr as DAILY_ACCESS_LEVEL_LOBBY,
  Xr as DAILY_ACCESS_LEVEL_NONE,
  Hr as DAILY_ACCESS_UNKNOWN,
  pi as DAILY_CAMERA_ERROR_CAM_AND_MIC_IN_USE,
  di as DAILY_CAMERA_ERROR_CAM_IN_USE,
  mi as DAILY_CAMERA_ERROR_CONSTRAINTS,
  hi as DAILY_CAMERA_ERROR_MIC_IN_USE,
  gi as DAILY_CAMERA_ERROR_NOT_FOUND,
  fi as DAILY_CAMERA_ERROR_PERMISSIONS,
  vi as DAILY_CAMERA_ERROR_UNDEF_MEDIADEVICES,
  yi as DAILY_CAMERA_ERROR_UNKNOWN,
  Ni as DAILY_EVENT_ACCESS_STATE_UPDATED,
  oo as DAILY_EVENT_ACTIVE_SPEAKER_CHANGE,
  ao as DAILY_EVENT_ACTIVE_SPEAKER_MODE_CHANGE,
  Zi as DAILY_EVENT_APP_MSG,
  Ci as DAILY_EVENT_CAMERA_ERROR,
  uo as DAILY_EVENT_CPU_LOAD_CHANGE,
  wo as DAILY_EVENT_ERROR,
  ho as DAILY_EVENT_EXIT_FULLSCREEN,
  lo as DAILY_EVENT_FULLSCREEN,
  bi as DAILY_EVENT_IFRAME_LAUNCH_CONFIG,
  _i as DAILY_EVENT_IFRAME_READY_FOR_LAUNCH_CONFIG,
  _o as DAILY_EVENT_INPUT_SETTINGS_UPDATED,
  Oi as DAILY_EVENT_JOINED_MEETING,
  Ti as DAILY_EVENT_JOINING_MEETING,
  mo as DAILY_EVENT_LANG_UPDATED,
  ji as DAILY_EVENT_LEFT_MEETING,
  go as DAILY_EVENT_LIVE_STREAMING_ERROR,
  po as DAILY_EVENT_LIVE_STREAMING_STARTED,
  vo as DAILY_EVENT_LIVE_STREAMING_STOPPED,
  fo as DAILY_EVENT_LIVE_STREAMING_UPDATED,
  Ei as DAILY_EVENT_LOADED,
  Si as DAILY_EVENT_LOADING,
  ki as DAILY_EVENT_LOAD_ATTEMPT_FAILED,
  ro as DAILY_EVENT_LOCAL_SCREEN_SHARE_STARTED,
  io as DAILY_EVENT_LOCAL_SCREEN_SHARE_STOPPED,
  Bi as DAILY_EVENT_MEETING_SESSION_DATA_ERROR,
  Ri as DAILY_EVENT_MEETING_SESSION_STATE_UPDATED,
  Ii as DAILY_EVENT_MEETING_SESSION_SUMMARY_UPDATED,
  co as DAILY_EVENT_NETWORK_CONNECTION,
  so as DAILY_EVENT_NETWORK_QUALITY_CHANGE,
  bo as DAILY_EVENT_NONFATAL_ERROR,
  Li as DAILY_EVENT_PARTICIPANT_COUNTS_UPDATED,
  xi as DAILY_EVENT_PARTICIPANT_JOINED,
  Di as DAILY_EVENT_PARTICIPANT_LEFT,
  Ai as DAILY_EVENT_PARTICIPANT_UPDATED,
  yo as DAILY_EVENT_RECEIVE_SETTINGS_UPDATED,
  Xi as DAILY_EVENT_RECORDING_DATA,
  Ki as DAILY_EVENT_RECORDING_ERROR,
  Ji as DAILY_EVENT_RECORDING_STARTED,
  Hi as DAILY_EVENT_RECORDING_STATS,
  Wi as DAILY_EVENT_RECORDING_STOPPED,
  Qi as DAILY_EVENT_RECORDING_UPLOAD_COMPLETED,
  eo as DAILY_EVENT_REMOTE_MEDIA_PLAYER_STARTED,
  no as DAILY_EVENT_REMOTE_MEDIA_PLAYER_STOPPED,
  to as DAILY_EVENT_REMOTE_MEDIA_PLAYER_UPDATED,
  Mi as DAILY_EVENT_STARTED_CAMERA,
  wi as DAILY_EVENT_THEME_UPDATED,
  $i as DAILY_EVENT_TRACK_STARTED,
  Gi as DAILY_EVENT_TRACK_STOPPED,
  zi as DAILY_EVENT_TRANSCRIPTION_ERROR,
  qi as DAILY_EVENT_TRANSCRIPTION_STARTED,
  Yi as DAILY_EVENT_TRANSCRIPTION_STOPPED,
  Fi as DAILY_EVENT_WAITING_PARTICIPANT_ADDED,
  Vi as DAILY_EVENT_WAITING_PARTICIPANT_REMOVED,
  Ui as DAILY_EVENT_WAITING_PARTICIPANT_UPDATED,
  li as DAILY_FATAL_ERROR_CONNECTION,
  ti as DAILY_FATAL_ERROR_EJECTED,
  ci as DAILY_FATAL_ERROR_EOL,
  ii as DAILY_FATAL_ERROR_EXP_ROOM,
  oi as DAILY_FATAL_ERROR_EXP_TOKEN,
  si as DAILY_FATAL_ERROR_MEETING_FULL,
  ni as DAILY_FATAL_ERROR_NBF_ROOM,
  ri as DAILY_FATAL_ERROR_NBF_TOKEN,
  ui as DAILY_FATAL_ERROR_NOT_ALLOWED,
  ai as DAILY_FATAL_ERROR_NO_ROOM,
  ei as DAILY_RECEIVE_SETTINGS_ALL_PARTICIPANTS_KEY,
  Zr as DAILY_RECEIVE_SETTINGS_BASE_KEY,
  $r as DAILY_STATE_ERROR,
  Ur as DAILY_STATE_JOINED,
  Fr as DAILY_STATE_JOINING,
  Vr as DAILY_STATE_LEFT,
  Ir as DAILY_STATE_NEW,
  Gr as DAILY_TRACK_STATE_BLOCKED,
  Jr as DAILY_TRACK_STATE_INTERRUPTED,
  zr as DAILY_TRACK_STATE_LOADING,
  qr as DAILY_TRACK_STATE_OFF,
  Wr as DAILY_TRACK_STATE_PLAYABLE,
  Yr as DAILY_TRACK_STATE_SENDABLE,
  vp as default
};
/*! Bundled license information:

@daily-co/daily-js/dist/daily-esm.js:
  (*!
   * Bowser - a browser detector
   * https://github.com/lancedikson/bowser
   * MIT License | (c) Dustin Diaz 2012-2015
   * MIT License | (c) Denis Demchenko 2015-2019
   *)
*/
//# sourceMappingURL=@daily-co_daily-js.js.map
